{"version":3,"sources":["demo/store/ActionTypes.js","demo/store/ModeView.js","demo/store/Modes2d.js","demo/store/Modes3d.js","demo/store/Store.js","demo/store/Modes3droi.js","demo/engine/tools2d/ToolPick.js","demo/engine/tools2d/ToolZoom.js","demo/engine/tools2d/ToolDistance.js","demo/engine/tools2d/ToolClear.js","demo/engine/tools2d/ToolAngle.js","demo/engine/tools2d/ToolArea.js","demo/engine/tools2d/ToolRect.js","demo/engine/tools2d/ToolText.js","demo/engine/tools2d/ToolEdit.js","demo/engine/tools2d/ToolDelete.js","demo/engine/tools2d/ToolTypes.js","demo/engine/Segm2d.js","demo/engine/loaders/roipalette.js","demo/engine/Graphics2d.js","demo/ui/UiMain2d.js","demo/engine/GlSelector.js","demo/engine/orbitcontrol.js","demo/engine/shaders/backface.vert","demo/engine/shaders/backface.frag","demo/engine/gfx/matbackface.js","demo/engine/shaders/frontface.vert","demo/engine/shaders/frontface.frag","demo/engine/gfx/matfrontface.js","demo/engine/gfx/matwireframecull.js","demo/engine/gfx/matscreentexmapping.js","demo/engine/shaders/clipplane.vert","demo/engine/shaders/clipplane.frag","demo/engine/gfx/matclipplane.js","demo/engine/shaders/rendertotexture.vert","demo/engine/shaders/rendertotexture.frag","demo/engine/gfx/matrendertotexture.js","demo/engine/shaders/interpolation.vert","demo/engine/shaders/interpolation.frag","demo/engine/gfx/matinterpolation.js","demo/engine/shaders/volumerender.vert","demo/engine/shaders/volumerender.frag","demo/engine/gfx/matvolumerender.js","demo/engine/shaders/blur.vert","demo/engine/shaders/blur.frag","demo/engine/gfx/matblur.js","demo/engine/actvolume/pointlink.js","demo/engine/actvolume/pointset.js","demo/engine/actvolume/triindices.js","demo/engine/actvolume/triangleset.js","demo/engine/actvolume/trianglesingle.js","demo/engine/actvolume/trianglestack.js","demo/engine/actvolume/tetra.js","demo/engine/ambientTexture.js","demo/engine/transferTexture.js","demo/engine/Eraser.js","demo/engine/volumeFilter3d.js","demo/engine/tools23d/text2d.js","demo/engine/tools23d/meshtext2d.js","demo/engine/tools23d/line2d.js","demo/engine/tools23d/distancetool.js","demo/engine/tools23d/graphics23d.js","demo/engine/VolumeRenderer3d.js","demo/engine/Graphics3d.js","demo/ui/UiMain3dLight.js","demo/ui/UiMain.js","demo/engine/Volume.js","demo/engine/LoadResult.js","demo/engine/loaders/FileLoader.js","demo/engine/loaders/LoaderKtx.js","demo/engine/TransFunc.js","demo/ui/UiHistogram.js","demo/engine/loaders/LoaderNifti.js","demo/engine/loaders/dicomdict.js","demo/engine/loaders/dicominfo.js","demo/engine/loaders/dicomtag.js","demo/engine/utils/Hash.js","demo/engine/loaders/dicomslice.js","demo/engine/loaders/dicomserie.js","demo/engine/loaders/dicomslicesvolume.js","demo/engine/loaders/dicomsliceinfo.js","demo/engine/loaders/dicomtaginfo.js","demo/engine/loaders/FileTools.js","demo/engine/loaders/LoaderDicom.js","demo/engine/loaders/LoadPromise.js","demo/engine/loaders/LoaderHdr.js","demo/engine/VolumeSet.js","demo/engine/Texture3D.js","demo/ui/UiModalWinCW.js","demo/engine/loaders/LoaderDcmDaikon.js","demo/ui/UiOpenMenu.js","demo/ui/UiViewMode.js","demo/engine/savers/SaverNifti.js","demo/ui/UiModalSaveNifti.js","demo/ui/UiSaveMenu.js","demo/engine/utils/BrowserDetector.js","demo/ui/UiApp.js","demo/App.js","index.js"],"names":["StoreActionType","SET_IS_LOADED","SET_FILENAME","SET_VOLUME_SET","SET_VOLUME_INDEX","SET_TEXTURE3D","SET_MODE_VIEW","SET_MODE_2D","SET_SLIDER_2D","SET_MODE_3D","SET_SLIDER_3DR","SET_SLIDER_3DG","SET_SLIDER_3DB","SET_SLIDER_Opacity","SET_SLIDER_Isosurface","SET_SLIDER_Brightness","SET_SLIDER_Cut","SET_SLIDER_Quality","SET_SLIDER_ErRadius","SET_SLIDER_ErDepth","SET_VOLUME_Renderer","SET_2D_TOOLS_INDEX","SET_2D_ZOOM","SET_2D_X_POS","SET_2D_Y_POS","SET_GRAPHICS_2D","SET_UI_APP","SET_DICOM_INFO","SET_IS_TOOL3D","SET_SLIDER_Contrast3D","SET_ERR_ARRAY","SET_MODE_3Droi","SET_DICOM_SERIES","SET_LOADER_DICOM","ModeView","VIEW_NA","VIEW_MPR","VIEW_2D","VIEW_3D_LIGHT","VIEW_3D","VIEW_COUNT","Modes2d","NA","SAGGITAL","CORONAL","TRANSVERSE","Modes3d","ISO","RAYCAST","RAYFAST","EREASER","initialState","isLoaded","fileName","volumeSet","volumeIndex","texture3d","modeView","mode2d","slider2d","slider3d_r","slider3d_g","slider3d_b","mode3d","mode3droi","sliderOpacity","sliderIsosurface","sliderBrightness","sliderCut","sliderQuality","sliderErRadius","sliderErDepth","volumeRenderer","indexTools2d","render2dZoom","render2dxPos","render2dyPos","graphics2d","uiApp","dicomInfo","isTool3D","sliderContrast3D","arrErrors","dicomSeries","loaderDicom","medReducer","state","action","type","Object","assign","ToolPick","objGra","this","m_objGraphics2d","m_wScreen","m_hScreen","m_strMessage","m_xMessage","m_yMessage","m_timeStart","onTimerEnd","bind","wScr","hScr","xScr","yScr","store","vTex","x","y","z","sliderPosition","volSet","volIndex","vol","getVolume","xDim","m_xDim","yDim","m_yDim","zDim","m_zDim","zoom","xPos","yPos","Math","floor","xRatioImage","yRatioImage","screenToTexture","bpp","m_bytesPerVoxel","off","val","m_dataArray","toString","Date","now","setTimeout","console","log","forceUpdate","ctx","fillStyle","font","sizeTextRect","measureText","width","textAlign","textBaseline","fillText","ToolZoom","setScreenDim","onMouseWheel","onMouseDown","onMouseUp","onMouseMove","mouseDown","xMouse","yMouse","dx","dy","dxMove","dyMove","dispatch","evt","step","max","min","deltaY","detail","zoomNew","xPosNew","yPosNew","ToolDistance","m_pointStart","m_lines","m_mouseDown","m_objEdit","m_xPixelSize","m_yPixelSize","xs","ys","vScr","numLines","length","i","objLine","vScrS","textureToScreen","vs","vScrE","ve","getDistMm","vVolOld","vVolNew","distMm","ind","indexOf","splice","sqrt","push","vEnd","objLastLine","pop","lineWidth","strokeStyle","vsTex","veTex","beginPath","moveTo","lineTo","stroke","xText","yText","strMsg","toFixed","xRel","yRel","xTex","yTex","ToolClear","clear","ToolAngle","m_points","m_numClicks","m_angles","render","numObj","objAngle","vScr0","points","vScr1","vScr2","getAngleForObj","ang","getAngle","angle","v1x","v1y","v2x","v2y","cosAlp","acos","idx","vTex0","vTex1","vs0","numAngles","a","ToolArea","m_areas","m_inCreateMode","m_objSelfIntersect","numAreas","objArea","j","vScrProj","hasSelfIntersection","m_area","getPolyArea","vNew","numPoints","objInter","polyNew","m_vIntersection","m_lineIndex","vAdd","xSize","m_boxSize","ySize","zSize","xScale","yScale","area","vi","vj","areaTri","addPointToPolygon","m_isClosed","v0","v1","pt","getSelfIntersectPoint","arc","TWO","isClosed","xScrCenter","yScrCenter","iPoly","v2","v3","v23","n23","v01","v02","dotUp","dotDn","TOO_SMALL","abs","t01","v20","n01","dotProdDn","t23","iNext","vA","vB","jNext","vC","vD","getLineIntersection","vLast0","vLast1","limPoints","vLine0","vLine1","vIntersect","MIN_DIST","ToolRect","m_rects","m_store","numRects","objRect","vScrMin","vMin","vScrMax","vMax","getRectArea","vTexMin","vTexMax","ToolText","m_texts","m_pointPressed","setText","numTexts","objText","point","str","m_text","text","onShowModalText","ToolEdit","m_mousePressed","m_pointTracked","m_toolTracked","vTexNew","moveEditPoint","tools","m_toolDistance","m_toolAngle","m_toolArea","m_toolRect","m_toolText","trackedBefore","numTools","objTool","vDetect","getEditPoint","trackedNow","fill","ToolDelete","deleteObject","Tools2dType","INTENSITY","DISTANCE","ANGLE","AREA","RECT","TEXT","EDIT","DELETE","CLEAR","ZOOM","DEFAULT","FILTER","NONE","OUT_W","OUT_H","Segm2d","objGraphics2d","stage","model","tensorIndices","imgData","pixels","srcImageData","wSrc","hSrc","onLoadModel","startApplyImage","m_needApplySegmentation","tensor","numValues","shape","tensorData","dataSync","strDebug","numCols","numRows","strOut","pixelsSrcInt","pixelsDst","wDst","hDst","ySrcAcc","iDst","ySrcBase","ySrcOff","xSrcAcc","xSrcBase","xSrc","tf","strict","modelLoaded","output","imgTensor","fromPixels","toFloat","imgResized","resizeBilinear","mean","imgNormalized","sub","imgReshaped","reshape","prediction","predict","outpTensor","as2D","outRes","tensorPreData","tensorIndData","iSrc","bestIndex","valMax","pixelsUpScale","Uint8ClampedArray","scaleUp","palette","random","w","h","forceRender","strMessage","getStageString","fillRect","strMsgPrint","createImageData","pixDst","data","numBytes","putImageData","RoiPalette","m_palette","createBytePalette256","m_palette256","Uint8Array","PAL_SIZE","numPalColors","strIndexPalette","roiId","arrColor","roiColor","split","rCol","parseFloat","gCol","bCol","parseInt","Graphics2d","props","m_sliceRatio","m_mode2d","m_zoom","m_xPos","m_yPos","m_isMounted","wRender","hRender","stateMouseDown","segm2d","m_isSegmented","m_toolPick","m_toolZoom","m_toolClear","m_toolEdit","m_toolDelete","m_roiPalette","prepareImageForRender","renderReadyImage","m_mount","clientWidth","clientHeight","setState","wShot","hShot","toDataURL","FONT_SZ","patName","m_patientName","patBirth","m_patientBirth","seriesDescr","m_seriesDescr","institutionName","m_institutionName","operatorsName","m_operatorsName","physicansName","m_physicansName","volIndexArg","objCanvas","getContext","undefined","sliceRatio","xyDim","dataSrc","dataDst","roiPal256","getPalette256","pbox","wScreen","hScreen","xyRratio","xPixelSize","yPixelSize","setPixelSize","zSlice","zOff","xStep","yStep","ay","yOff","ax","val4","yzRatio","xSlice","zStep","az","xzRatio","ySlice","setImageData","getNumVolumes","renderTextInfo","box","getBoundingClientRect","clientX","left","clientY","top","sliderValue","jsxGrapNonSized","ref","mount","style","height","jsxGrapSized","onWheel","React","Component","connect","UiMain2d","strMinHeight","minHeight","Container","fluid","Row","Col","md","lg","position","GlSelector","m_useWebGL2","canvas","document","createElementNS","context","OrbitControl","domElem","camera","scene","mesh","meshRotationCallback","m_callback","m_mesh","m_wireMesh","m_camera","m_target","THREE","m_scene","m_button","EVENT_BUTTON_NA","m_pressedLeft","m_pressedRight","m_prevMouse","m_prevTime","m_deltaTime","m_spherical","m_sphericalDelta","set","m_autoRotate","m_minDistance","m_maxDistance","m_minAzimuthAngle","Infinity","m_maxAzimuthAngle","m_minPolarAngle","m_maxPolarAngle","PI","m_enableDamping","m_dampingFactor","isEraserMode","isOn","wireMesh","xx","offsetLeft","yy","offsetTop","curTimeMs","getTime","rotationY","rotationX","matrix","camDir","copy","normalize","makeRotationAxis","up","cross","identity","multiply","rotation","setFromRotationMatrix","ctrlKey","updateTime","delta","camPos","multiplyScalar","lookAt","updateMatrixWorld","EVENT_BUTTON_LEFT","EVENT_BUTTON_CENTER","EVENT_BUTTON_RIGHT","MaterialBF","m_strShaderVertex","m_strShaderFragment","callbackMat","vertexLoader","setResponseType","fragmentLoader","load","BACK_FACE_VERTEX_SHADER","strVertexSh","BACK_FACE_FRAGMENT_SHADER","strFragmentSh","material","vertexShader","fragmentShader","side","depthTest","depthFunc","blending","MaterialFF","m_uniforms","texBF","value","PlaneX","PlaneY","PlaneZ","textureBF","FRONT_FACE_VERTEX_SHADER","FRONT_FACE_FRAGMENT_SHADER","uniforms","e","target","status","statusText","MaterialWC","m_defines","backCullMode","texFF","textureFF","defines","wireframe","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","MaterialScreenTexMap","texBuffer","MaterialClipPlane","MVP","CLIP_VERTEX_SHADER","CLIP_FRAGMENT_SHADER","depthWrite","MaterialRenderToTexture","texTF","texVolume","texRoiId","texRoiColor","RoiVolumeTex","texVolumeMask","texVolumeAO","lightDir","t_function1min","t_function1max","t_function2min","t_function2max","stepSize","texSize","isoThreshold","brightness3D","contrast3D","colorMap1D","heatMap1D","opacityBarrier","tileCountX","volumeSizeZ","ssaoOffsets","isoRenderFlag","MaskFlag","useAmbientTex","useWebGL2","texVol2d","texVolMask","texVolAO","texBackface","texFrontface","offsets","RENDER_TEXTURE_VERTEX_SHADER","RENDER_TEXTURE_FRAGMENT_SHADER","MaterialInterpolation","isoSurfTexel","texIsoSurface","renderTexture","INTERP_VERTEX_SHADER","INTERP_FRAGMENT_SHADER","MaterialVolumeRender","VOL_RENDER_VERTEX_SHADER","VOL_RENDER_FRAGMENT_SHADER","MaterialBlur","texVolumeRoi","texSegInUse","texelSize","blurSigma","contrast","brightness","curZ","save_flag","renderRoiMap","texture","texRoi","BLUR_VERTEX_SHADER","BLUR_FRAGMENT_SHADER","PointLink","m_point","m_next","PointSet","create","m_numPoints","m_numAllocatedPoints","Array","m_voxels","PSET_NUM_VOXELS","dz","iSlow","findPointSlow","index","TriangleIndices","ia","ib","ic","m_indices","Int32Array","TriangleSet","numTriangles","m_numTriangles","m_numAllocatedTriangles","m_triangles","TriangleSingle","va","vb","vc","TriangleStack","m_numAllocated","m_numStacked","m_stack","depthLevel","numTiEstimate","TetrahedronGenerator","m_pointSet","m_triangleSet","vRadiusEllipse","numSubdividesOfOrigTetra","X","Z","vdata","tindices","i3","addPoint","addTriangle","subDivideMesh","getNumPoints","numVertices","strNumVertices","concat","strNumTriangles","vert","strX","strY","strZ","triIndices","strIndices","arr","TextEncoder","encode","blob","Blob","url","URL","createObjectURL","linkGen","createElement","setAttribute","eventGen","createEvent","initMouseEvent","window","dispatchEvent","strNumVerts","i0","i1","i2","strNumTri","triStackSrc","triStackDst","getNumTriangles","t","okPush","stackSrc","stackDst","iter","numStacked","getStackDepth","s","triSingle","v12","v31","addVectors","stackTmp","numTrisInStack","estimateNumVertices","isEmpty","indA","indB","indC","okAddTri","numPts","numTris","AmbientTexture","inParams","rendererBlur","renderer","sceneBlur","cameraOrtho","vectorsTex","VAL_255","gen","vRadius","numAOVectors","getNumVertices","vectors","getVertex","wrapS","wrapT","magFilter","minFilter","needsUpdate","_setAOVectorTex","xDimAO","yDimAO","zDimAO","bufferTextureAO","format","depthBuffer","ambientVolumeTexCPU","isWebGL2","wrapR","MaterialAO","mat","materialAO","zTexDivSqrt","setAmbientTextureWebGL2","frameBuf","gl","overrideMaterial","readPixels","RGBA","UNSIGNED_BYTE","zOffs","TransferTexture","selectedROIs","transferFuncRgba","transferFuncTexture","numRois","m_handleColors","r","g","b","isRoiVolume","roiColors","numTfPixels","createSelectedRoiMap","createRoiColorMap","textureOut","alpha","SCALE","a1","A1","a3","A3","a4","a5","A5","pix","A2","colors","transferFuncCtrlPtsRgb","intensities","opacities","curPt","pixStart","pixEnd","lerpVal","colorX","colorY","colorZ","op1","op2","colorArray","colorROIs","selectedROI","selectedState","initMatBlure","Eraser","bufferBF","bufferFF","bufferRenderToTexture","volTextureMask","geometry","lastSize","lastDepth","lastRotationVector","lastTarget","lastMode","lastBackDistance","resetflag","bufferTextureCPU","params","buff","bufBF","bufFF","bufTex","bufferMask","updatableTextureMask","dispose","windowWidth","startflag","round","eraserMouseDown","cellInd","bigCellInd","dist","vX","vY","vZ","vDir","erasePixels","orbitControl","lockEraserBuffersUpdating","renderState","RENDER_STATE","ONCE","radius","depth","x_","y_","z_","targetX","targetY","targetZ","normal","normalGauss","SIGMA2","nX","nY","nZ","normFactor","offDst","k","gZ","gauss","exp","curVal","radiusRatio","axis","quaternion","setFromUnitVectors","clone","prevDistance","queue","deleteflag","RotPoint","applyAxisAngle","mainX","mainY","mainZ","isoSurfaceBorder","tan","angleTo","targetLast","lastRotation","rxy","lastback","VolumeFilter3d","transferFunc","eraser","glSelector","createWebGLContext","canvas3d","getCanvas","ambientTexture","geometryBlur","setSize","init","origVolumeTex","add","switchToBlurRender","switchToRoiMapRender","setVolumeTexture","createTransferFuncTexture","ctrlPtsColorsHex","setTransferFuncColors","updateTransferFuncTexture","setVolumeTextureWebGL2","updatableTexture","zVolOff","yVolOff","offSrc","valInt","arrPixels","bufferR","bufferTexture","indxR","indxL","bufferRoi","xVol","valRoi","updateSelectedRoiMap","updateSelectedRoi","volume","set3DTextureFrom4Bytes","set3DTextureFrom1Byte","volTexFormat","initRenderer","createUpdatableVolumeMask","Text2D","strText","m_canvas","CanvasText","m_align","m_side","m_antialias","updateText","m_font","antialias","MeshText2D","m_material","m_renderedTextHeight","m_xMin","m_xMax","m_yMin","m_yMax","xc","yc","letterHeight","xAlign","yAlign","strTextBackColor","strTextColor","cleanUp","remove","drawText","psy","psx","m_textWidth","m_textHeight","m_texture","m_matTexturePlain","MaterialTexturePlain2d","blendEquation","blendSrc","blendDst","m_geometry","X_TEXT_COORD_MAX","Y_TEXT_COORD_MAX","getXMin","getXMax","getYMin","getYMax","Z_COORD_TEXT","vertices","faceVertexUvs","getNormal","faces","boxCanvas","boxTexture","m_matTextureBox","m_boxMaterial","Z_COORD_BOX","m_boxGeometry","boxNormal","vb0","vb1","vb2","vb3","m_boxMesh","map","ALIGN_LEFT","ALIGN_RIGHT","ALIGN_CENTER","ALIGN_TOP","ALIGN_BOTTOM","LINE_2D_Z_COORDINATE","Line2D","xe","ye","matColor2d","createWithMaterial","m_xS","m_yS","m_xE","m_yE","m_lineWidth","vLine","vNorm","m_geo","DistanceTool","m_runningState","linesMaterial","MaterialColor2d","m_linesMaterial","m_distances","m_vertexes","m_xStart","m_yStart","m_textWidthScr","m_textColor","m_textBgColor","line","getRenderObject","posX","posY","xS","xZ","yS","yZ","xE","yE","getxS","getyS","getxE","getyE","tools2d","Graphics23d","m_width","m_height","m_materialsTex2d","m_savePosX","m_savePosY","m_posX","m_posY","m_move","m_wProjScreen","m_hProjScreen","m_showTileTexture","xw","yw","m_textTime","m_toolType","m_distanceTool","toolType","clearLines","m_angleTool","m_areaTool","m_rectTool","m_textTool","m_deleteTool","m_editTool","updateLines","fov","degToRad","radToDeg","atan","keyCode","debug","m_volumeData","m_volumeHeader","m_levelSetMode","xt","yt","m_moveTool","m_textArr","m_vertexes2","m_last_lengths","last_length","m_levelSetCircle","clearLevelSetCenter","drawLevelSetCenter","updateMove","updateVertexes","wheelDeltaY","m_zoomTool","updateZoom","createMarkLinesAndText","updateAll","coord","strRet","pnl","strBegin","substring","SHORT_ITEM_PART","strEnd","VOLUME_COLOR1_MIN_R","VOLUME_COLOR2_MIN_G","VOLUME_COLOR2_MIN_B","VOLUME_COLOR2_MAX_R","VOLUME_COLOR2_MAX_G","VOLUME_COLOR2_MAX_B","STEP_SIZE1","STEP_SIZE2","STEP_SIZE3","STEP_SIZE4","OPACITY_SCALE","VolumeRenderer3d","curFileDataType","sceneReadyCounter","renderCounter","sceneClipPlane","scene23D","graphics23d","sceneSphere","meshSphere","newScene","renderScene","planeGeometry","volTexture","bfTexture","ffTexture","renderToTexture","geometrySphere","geometryWireFrameSphere","matBF","matFF","matScreenTex","matWireFrame","matRenderToTexture","matVolumeRender","volumeUpdater","checkFrameBufferMode","eraserStarted","planeCenterPt","preserveDrawingBuffer","autoClearStencil","autoClearColor","windowHeight","camAspect","setClearColor","appendChild","domElement","updateCutPlanes","updateLightDir","gammaInput","gammaOutput","ENABLED","DISABLED","fps","isEraseMode","eraserRadius","eraserDepth","eraserSrart","m_eraser","isSculptingMode","sculptingCapturedVertex","sculptingSphereCenter","sculptingSphereSize","vBoxVirt","okCreateTetra","positions","indices","normals","getTriangle","posAttribute","Float32Array","normalsAttribute","indAttribute","addAttribute","setIndex","computeGeometrySphereUVs","screenshotImage","originalAspect","aspect","originalFov","areaOfInterestTanFov2","fov2Tan","shotAspect","tan2Fov","updateProjectionMatrix","isTool23D","Tool23D","get","values","colorFlag","nonEmptyBoxMin","nonEmptyBoxMax","computeBoundingBox","boundingBox","offset","range","geo_offset1","geo_offset2","geo_scale","uvw","getAttribute","count","vx","getX","vy","getY","vz","getZ","plane","l2w","getInverse","invPerspective","projectionMatrix","invView","matrixWorld","v","applyMatrix4","s2w","isFULL3D","sideMax","thresholdIsosurf","removeSphereFromSphereScene","matWCloader","addSphereToSphereScene","matFfThreeGS","matIntetpl","fromGeometry","computeGeometryUVs","scale","roiPalette","palB","MAGIC_COLOR","palG","palR","VolumeFilter3D","createUpdatableVolumeTex","getExtension","bufferBFTextureCPU","bufferFFTextureCPU","renderfTexture","xSmallTexSize","ySmallTexSize","bufferRenderToTextureCPU","createClipPlaneGeometry","setMesh","setWireMesh","matRenderToTextureThreeGS","colorMapTexture","thresholdTissue1","thresholdTissue2","opacityTissue","lightDirComp","matSkullThreeGS","switchToFullVolumeRender","switchToVolumeRender","mtx","extractRotation","xAxis","yAxis","zAxis","centerPt","dot","isReadyToRender","updateClipPlaneGeometry","setRenderTarget","buffers","setClear","glC","FLOAT","autoClearDepth","vPos","vProjScreen","vProj","project","W_HALF","H_HALF","xProj","yProj","vPrj","applyMatrix3","normalMatrix","setEraserMode","setMaskFlag","undoLastErasing","eraserStart","eraseStart","onZoom","Graphics3d","onMode","start","stop","animate","setVolRenderToStore","onKeyDown","onKeyUp","m_volumeRenderer3D","m_renderer","m_frameId","m_prevMode","m_fileDataType","startRotX","startRotY","VolRender","Number","requestAnimationFrame","cancelAnimationFrame","indexMode","isIso","initWithVolume","focus","removeChild","containerX","containerY","ereaseStart","stopPropagation","touches","changedTouches","numTouches","pageX","pageY","key","setEraserStart","switchToTool23D","setTransferFuncVec3","switchToIsosurfRender","setIsoThresholdValue","switchToFLATRender","setEraserRadius","setEraserDepth","setOpacityBarrier","updateBrightness","updateZCutPlane","setStepsize","updateContrast","jsxCanvasNonSized","_onMouseMove","_onMouseDown","_onMouseUp","onTouchStart","onTouchEnd","onTouchMove","onClick","_onWheel","jsxCanvasSized","tabIndex","UiMain3dLight","sm","UiMain","modeViewIndex","jsxMain2d","jsxMain3dLight","jsxArray","Volume","m_dataSize","m_xIcon","m_yIcon","m_dataIcon","xyzDim","assert","sizeSrcMax","numPixelsIcon","xDstL","yDstT","yDst","ySrc","xDst","xWrite","yWrite","xDimNew","yDimNew","zDimNew","xyzDimNew","bytesPerVoxel","bufSizeBytes","datArrayNew","zOffDst","yOffDst","val0","val1","val2","val3","LoadResult","errorCode","SUCCESS","UNKNOWN","BAD_DICOM","BAD_HEADER","UNSUPPORTED_ENDIANNESS","UNSUPPORTED_COLOR_FORMAT","WRONG_HEADER_DATA_SIZE","WRONG_HEADER_DIMENSIONS","WRONG_HEADER_DATA_TYPE","WRONG_HEADER_BITS_PER_PIXEL","WRONG_HEADER_MAGIC","ERROR_PROCESS_HISTOGRAM","WRONG_IMAGE_DIM_X","WRONG_IMAGE_DIM_Y","WRONG_IMAGE_DIM_Z","ERROR_PIXELS_TAG_NOT_FOUND","ERROR_NO_MEMORY","ERROR_CANT_OPEN_URL","ERROR_WRONG_NUM_SLICES","ERROR_HISTOGRAM_DETECT_RIDGES","ERROR_SCALING","ERROR_INVALID_SLICE_INDEX","ERROR_TOO_SMALL_DATA_SIZE","ERROR_TOO_LARGE_DATA_SIZE","ERROR_COMPRESSED_IMAGE_NOT_SUPPORTED","GInstanceFileLoader","FileLoader","strUrl","m_url","m_request","readFile","doneCallback","rejectCallback","XMLHttpRequest","open","responseType","addEventListener","event","arrBuf","response","enc","TextDecoder","sz","byteLength","bufHead","slice","strBuf","decode","substr","errMsg","send","KtxHeader","LoaderKtx","m_header","m_id","m_endianness","m_glType","m_glTypeSize","m_glFormat","m_glInternalFormat","m_glBaseInternalFormat","m_pixelWidth","m_pixelHeight","m_pixelDepth","m_numberOfArrayElements","m_numberOfFaces","m_numberOfMipmapLevels","m_bytesOfKeyValueData","volDst","callbackProgress","callbackComplete","bufBytes","bufOff","arrayHeaderSign","lenHeaderSign","isHeaderSignCorrect","String","fromCharCode","ENDIAN_CONST","readInt","strFoundEndns","head","MAX_DIM","xMin","yMin","zMin","xMax","yMax","zMax","udataOff","readFloat","pwr2","dataSizeCalculated","pwrFinish","progressMask","MM_PER_PIXEL","m_isLoadedSuccessfull","m_fileLoader","readFromBuffer","iVal","buf","arBuf","ArrayBuffer","dataArray","DataView","setUint8","getFloat32","TransfFunc","m_indexMoved","m_numHandles","m_handleX","m_handleY","m_proj","xPre","yPre","RAD_CIRCLE","m_radCircle","xFunc","yFunc","strRCol","strGCol","strBCol","strColor","ellipse","xScrNew","yScrNew","UiHistogram","m_histogram","m_numColors","m_transfFunc","m_transfFuncCallback","m_transfFuncUpdateCallback","updateCanvas","handleResize","removeEventListener","objOwner","m_canvasOwner","scl","smoothHistogram","getMaxPeak","numColors","histogramArray","valMin","IND_MIN","found","m_peakIndex","hist","maxPeakVal","peakVal","sigma","needNormalize","SIZE_DIV","RAD","SIZE_LARGE","KOEF","newHist","maxVal","sum","sumW","di","ii","refs","canvasHistogram","getVolumeHistogram","wRect","hRect","maxHistValue","valMark","closePath","setLineDash","LoaderNifti","m_littleEndian","bufLen","NIFTI_HEADER_SIZE","headSize","readIntFromBuffer","numDimensions","readShortFromBuffer","dataType","bitPix","NIFTI_DATA_TYPE_INT8","NIFTI_DATA_TYPE_UINT16","isDataTypeCorrect","pixdim1","readFloatFromBuffer","pixdim2","pixdim3","arrDesc","OFF_DESC","strDescr","isGoodSym","numVoxels","dataOff","fval","histArray","histogram","assignArray","indMax","getLastMaxIndex","MAX_BYTE","dataSize","zOffMin","zOffMax","xOffMax","yOffMax","KTX_GL_RED","header","DicomDictionary","TAGS","group","element","vr","numTags","tagDesc","DicomInfo","m_patientDateOfBirth","m_studyDescr","m_studyDate","m_seriesTime","m_bodyPartExamined","m_patientId","m_patientGender","m_acquisionTime","m_manufacturerName","m_sliceInfo","TAG_TRANSFER_SYNTAX","TAG_META_LENGTH","TAG_PIXEL_DATA","DicomTag","offsetStart","offsetValue","offsetEnd","littleEndian","m_group","m_element","m_vr","m_value","m_offsetStart","m_offsetValue","m_offsetEnd","Hash","strInp","len","hash","charCodeAt","DicomSlice","m_image","m_sliceNumber","m_sliceLocation","m_hash","strMix","getHash","DicomSerie","m_slices","m_minSlice","m_maxSlice","DicomSlicesVolume","m_series","indSerie","getSerieIndex","serieNew","addSlice","numSeries","DicomSliceInfo","m_sliceName","m_fileName","m_tags","DicomTagInfo","m_tag","m_attrName","m_attrValue","FileTools","isValidA","match","isValidB","lastIndexOf","strFileName","request","strIn","dotFound","sym","c","DEBUG_PRINT_TAGS_INFO","MAGIC_DICM","UNDEFINED_LENGTH","LARGE_NUMBER","TAG_IMAGE_INSTANCE_NUMBER","TAG_BITS_ALLOCATED","TAG_IMAGE_ROWS","TAG_IMAGE_COLS","TAG_IMAGE_HIGH_BIT","TAG_IMAGE_SMALL_PIX_VAL","TAG_IMAGE_LARGE_PIX_VAL","TAG_PIXEL_PADDING_VALUE","TAG_PIXEL_SPACING","TAG_WINDOW_CENTER","TAG_WINDOW_WIDTH","TAG_RESCALE_INTERCEPT","TAG_RESCALE_SLOPE","TAG_RESCALE_TYPE","TAG_PIXEL_REPRESENTATION","TAG_IMAGE_POSITION","TAG_SLICE_LOCATION","TAG_SAMPLES_PER_PIXEL","TAG_SERIES_DESCRIPTION","TAG_SERIES_TIME","TAG_END_OF_ITEMS","TAG_END_OF_SEQUENCE","TAG_SERIES_NUMBER","TAG_SLICE_THICKNESS","TAG_BODY_PART_EXAMINED","TRANSFER_SYNTAX_COMPRESSION_JPEG","TRANSFER_SYNTAX_COMPRESSION_JPEG_LOSSLESS","TRANSFER_SYNTAX_COMPRESSION_JPEG_LOSSLESS_SEL1","TRANSFER_SYNTAX_COMPRESSION_JPEG_BASELINE_8BIT","TRANSFER_SYNTAX_COMPRESSION_JPEG_BASELINE_12BIT","TRANSFER_SYNTAX_COMPRESSION_JPEG_2000_LOSSLESS","TRANSFER_SYNTAX_COMPRESSION_JPEG_2000","TRANSFER_SYNTAX_COMPRESSION_RLE","TAG_PATIENT_NAME","TAG_PATIENT_ID","TAG_PATIENT_BIRTH_DATE","TAG_PATIENT_GENDER","TAG_STUDY_DATE","TAG_STUDY_DESCR","TAG_ACQUISION_TIME","TAG_INSTITUTION_NAME","TAG_PHYSICANS_NAME","TAG_MANUFACTURER_NAME","TAG_OPERATORS_NAME","LoaderDicom","numFiles","needScaleDownTexture","m_needScaleDownTexture","m_folder","m_dictionary","m_imageNumber","m_errors","m_transformSyntax","m_loaders","m_bitsPerPixel","m_padValue","m_windowCenter","m_windowWidth","m_rescaleIntercept","m_rescaleSlope","m_rescaleHounsfield","m_pixelRepresentaionSigned","m_samplesPerPixel","m_seriesNumber","m_nonEmptyBoxMin","m_nonEmptyBoxMax","m_slicesVolume","m_newTagEvent","CustomEvent","desc","imageNumber","m_dicomInfo","m_pixelSpacing","m_filesLoadedCounter","m_numLoadedFiles","m_imagePosMin","m_imagePosMax","m_sliceLocMin","m_sliceLocMax","runLoader","indexSelected","hashSelected","VolumeSet","addVolume","serie","slice0","numSlices","zBox","imagePosBox","TOO_MIN","ser","sl","sliceData16","val16","slicePad","minVal","valData","BITS_IN_BYTE","srcSlices","numSlicesByTags","minSliceNum","maxSliceNum","num","sort","sliceSrc","dataSrc16","offZ","winMin","valScaled","numPixelsInVolume","XY_MAX_DIM","xDimDst","yDimDst","VolumeTools","scaleTextureDown","xOffMin","yOffMin","m_callbackComplete","createIcon","dataView","byteLengh","little","lenData","m_metaFinished","getUint16","m_metaFinishedOffset","m_metaFound","m_explicit","getStringAt","getVrsStringIndex","getVr","getUint32","getDataVrsStringIndex","dataValue","sqGroup","sqElement","sqLength","getNextTag","SIZE_DWORD","buffer","tag","getTextDesc","getAttrValueAsString","isTransformSyntax","tagDataLen","dvTag","strTagVal","m_needsDeflate","isMetaLength","ratioLoaded","strCtx","arrBufWoHead","indexFile","sliceInfo","strSlice","m_error","getUint8","pixelBitMask","pixelPaddingValue","pixelsTagReaded","isPixelData","numlices","tagInfo","numberToHexString","strTagName","strVal","dataLen","dv","strNum","dataLenPixRep","dvPixRep","highBit","getInt16","getInt32","strArr","zPos","strSliceThickness","strSliceLocation","sliceLoc","strTimeMerged","strHour","strMinute","strSec","strTimeBuild","getUtf8StringAt","trim","strDateMerged","strM","strD","imageSizeBytes","numPixels","volSlice","Int16Array","Uint16Array","buildHash","imageDst","imageSrc","b0","b1","b2","ft","isValidUrl","getFolderNameFromUrl","urlFileList","fileLoader","m_callbackProgress","m_fileListCounter","readReadyFileList","constructor","name","uint8Arr","strFileContent","apply","strLog","arrFileNames","endsWith","m_numFailsLoad","urlFile","loader","fromGoogle","m_fromGoogle","fileArrBu","readFromGoogleBuffer","series","getSeries","buildSeriesInfo","errStatus","createVolumeFromSlices","VRS","numElems","DATA_VRS","lengthBuf","ch","char2","ch2","ch3","tmp","res","readBytes","toLocaleDateString","getFloat64","numLeadZeros","strZeros","LoadFilePromise","m_file","m_reader","file","Promise","resolve","FileReader","result","readAsArrayBuffer","reject","strError","loaded","total","LoaderHdr","volumeDst","sizeofHdr","strDataType","m_dataType","iExtents","iRegular","readByteFromBuffer","dim1","dim2","dim3","SIZE_SHORT","dataTypeH","bitPixH","pixDim1","pixDim2","pixDim3","m_imageBufferSize","m_arrBuf","bytesPerPixel","estimatedVolSize","dataArray16","volRoi","dataNew","dataArrayRoi8","getFileNameFromUrl","arrGrp","exec","namePrefix","fileNameIntensityHeader","fileNameIntensityImage","fileNameMaskHeader","fileNameMaskImage","arrUrls","readFromUrls","numUrls","urlHdr","urlImg","loaderHdr","loaderImg","indPointH","strCopy","readFromUrl","then","arrBufHdr","readFromBufferHeader","arrBufImg","readFromBufferImage","createVolumeFromHeaderAndImage","error","urlHdrInt","urlImgInt","urlHdrRoi","urlImgRoi","loaderHdrInt","loaderImgInt","loaderHdrRoi","loaderImgRoi","arrBufferHdr","arrBufferImg","createRoiVolumeFromHeaderAndImage","m_numVolumes","m_volumes","isInteger","Texture3D","UiModalWindowCenterWidth","m_needMode3dLight","onMode3dLight","m_objCanvas","m_dataMin","m_dataMax","onButtonCancel","onButtonApply","showModalWindowCenterWidth","windowMin","windowMax","reset","onHideFunc","onHide","onRef","renderPreview","slices","valSrc","wMin","wMax","wc","ww","drawSlice","arrVals","sliderRange","slider","isValid","getDataMinMax","hashCode","str3dLight","stateVis","jsxCanvas","Modal","show","size","Header","closeButton","Body","m_objCol","className","ButtonGroup","aria-label","OverlayTrigger","placement","overlay","Tooltip","Button","variant","LoaderDcmDaikon","m_loaderDicom","strContent","dataFile","image","daikon","Series","parseImage","err","TAG_DIRECTORY_REC","Utils","dec2hex","tagDirRec","tags","numEntries","dirEntry","numSub","elemSub","fold","fname","fileIndex","getRows","getCols","bits","getBitsAllocated","patientName","getPatientName","studyDescr","getImageDescription","studyDate","getStudyDate","seriesTime","getStudyTime","getSeriesDescription","knownTags","Tag","TAG_ROWS","TAG_COLS","TAG_ACQUISITION_MATRIX","TAG_NUMBER_OF_FRAMES","TAG_NUMBER_TEMPORAL_POSITIONS","TAG_SLICE_GAP","TAG_TR","TAG_FRAME_TIME","TAG_BITS_STORED","TAG_HIGH_BIT","TAG_PHOTOMETRIC_INTERPRETATION","TAG_PLANAR_CONFIG","TAG_PALETTE_RED","TAG_PALETTE_GREEN","TAG_PALETTE_BLUE","TAG_DATA_SCALE_SLOPE","TAG_DATA_SCALE_INTERCEPT","TAG_DATA_SCALE_ELSCINT","TAG_PIXEL_BANDWIDTH","TAG_IMAGE_MIN","TAG_IMAGE_MAX","TAG_STUDY_TIME","TAG_STUDY_DES","TAG_IMAGE_TYPE","TAG_IMAGE_COMMENTS","TAG_SEQUENCE_NAME","TAG_MODALITY","TAG_FRAME_OF_REF_UID","TAG_STUDY_UID","TAG_SERIES_INSTANCE_UID","TAG_ECHO_NUMBER","TAG_TEMPORAL_POSITION","TAG_IMAGE_NUM","TAG_IMAGE_ORIENTATION","TAG_SLICE_LOCATION_VECTOR","TAG_LUT_SHAPE","Image","getSingleValueSafely","getTag","numKnownTags","tagSLoc","tagSlNum","sliceNumber","tagSamPerPix","samPerPixel","tagPPV","valPad","tagWinCen","tagWinWid","tagResInt","tagResSlo","tagResTyp","tagPixRep","tagPS","arrSpa","tagSLT","arrThick","tagImPos","tagTraSyn","getRawData","pixSrc","bVal","gVal","rVal","loadSingleSlice","ret","UiOpenMenu","onButtonLocalFile","handleFileSelected","onFileContentReadSingleFile","onFileContentReadMultipleDicom","onFileContentReadMultipleHdr","setErrorString","onModalWindowCWHide","onModalDicomSeriesHide","onDicomSerieSelected","callbackReadProgress","callbackReadComplete","callbackReadSingleDicomComplete","callbackReadMultipleComplete","callbackCompleteMultipleDicom","m_fileNameOnLoad","m_fileIndex","m_fileReader","showModalUrl","showModalDemo","showModalGoogle","showModalWindowCW","onLoadCounter","m_volumeSet","m_volumeRoi","m_updateEnable","roiMode","fileNameIn","makeDimensions4x","tex3d","createFromRawVolume","strErr","doHideProgressBar","ratio01","ratioPrc","uiapp","doShowProgressBar","doSetProgressBarRatio","errCode","getResultString","finalizeSuccessLoadedVolume","arrErr","finalizeFailedLoadedVolume","m_loader","childModalWindowCenterWidth","initWindowRange","callbackCompleteSingleDicom","readFromKtx","readFromNifti","m_numFiles","readFromDicom","onFileReadSingleBuffer","ratioLoad","readSlice","loaderDcm","readSingleSlice","isHdr","fnameArr","detectedMask","detectedIntensity","readOk","ok","FAIL","onloadend","m_files","readStatus","readSliceDicomViaDaikon","STEP_PROGRESS","files","m_unzippedBuffer","gunzip","zlib","createGunzip","createReadStream","pipe","on","readSize","allSize","ratio100","dataCollectedSize","arrNew","sizeBuffer","headTemplate","correctHead0","correctHead1","from","numFilesNew","fileSelector","onchange","preventDefault","m_fileSelector","click","arrNums","numLet","n","needShow","gra","buildFileSelector","fileNameOnLoad","loadFromUrl","display","marginTop","cursor","href","UiViewMode","IS_LITTLE_ENDIAN","SaverNifti","setInt32","setInt16","setFloat32","freq","phase","volumeData","volumeSize","xGrid","yGrid","zGrid","writeIntToBuffer","dimInfo","fpsToDimInfo","writeShortToBuffer","writeFloatToBuffer","volDataUInt16","UiModalSaveNifti","onModalShow","onModalHide","onButtonSave","onTexChange","handleFormSubmit","onSaveNifti","m_hideFunc","showModalSaveNifti","volSize","volData","vR","niiArr","writeBuffer","textToSaveAsBlob","textToSaveAsURL","downloadLink","download","innerHTML","onclick","body","Title","Form","onSubmit","Table","Control","required","placeholder","defaultValue","onChange","Label","xl","UiSaveMenu","onModalSaveNiftiShow","onModalSaveNiftiHide","strDisabled","NavDropdown","id","disabled","title","Item","BrowserDetector","m_strUserAgent","m_strVendor","m_isOpera","m_isFirefox","m_isSafari","m_isIE","m_isChrome","m_isMobileBrowser","createCanvas","navigator","userAgent","toLowerCase","vendor","test","InstallTrigger","search","documentMode","m_isEdge","appVersion","strTitleFinal","isValidBrowserType","mobileArr","innerWidth","innerHeight","UiApp","m_modalText","showModalText","showProgressBar","progressBarRatio","showModalAlert","strAlertTitle","strAlertText","strProgressMessage","strSearch","location","browserDetector","isWebGl20supported","checkWebGlSupported","strProgressMsg","ratio","strMessageOnMenu","objPrgBarVis","ProgressBar","animated","label","objProgressBar","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Text","App","rootElement","getElementById","createStore","rootReducer","ReactDOM"],"mappings":"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","file":"static/js/main.bb58a394.chunk.js","sourcesContent":["//\r\n// Action type for redux reducer\r\n//\r\nconst StoreActionType = {\r\n  SET_IS_LOADED: 0,\r\n  SET_FILENAME: 1,\r\n  SET_VOLUME_SET: 2,\r\n  SET_VOLUME_INDEX: 3,\r\n  SET_TEXTURE3D: 4,\r\n  SET_MODE_VIEW: 5,\r\n  SET_MODE_2D: 6,\r\n  SET_SLIDER_2D: 7,\r\n  SET_MODE_3D: 8,\r\n  SET_SLIDER_3DR: 9,\r\n  SET_SLIDER_3DG: 10,\r\n  SET_SLIDER_3DB: 11,\r\n  SET_SLIDER_Opacity: 12,\r\n  SET_SLIDER_Isosurface: 13,\r\n  SET_SLIDER_Brightness: 14,\r\n  SET_SLIDER_Cut: 15,\r\n  SET_SLIDER_Quality: 16,\r\n  SET_SLIDER_ErRadius: 17,\r\n  SET_SLIDER_ErDepth: 18,\r\n  SET_VOLUME_Renderer: 19,\r\n  SET_2D_TOOLS_INDEX: 20,\r\n  SET_2D_ZOOM: 21,\r\n  SET_2D_X_POS: 22,\r\n  SET_2D_Y_POS: 23,\r\n  SET_GRAPHICS_2D: 24,\r\n  SET_UI_APP: 25,\r\n  SET_DICOM_INFO: 26,\r\n  SET_IS_TOOL3D: 27,\r\n  SET_SLIDER_Contrast3D: 28,\r\n  SET_ERR_ARRAY: 29,\r\n  SET_MODE_3Droi: 30,\r\n  SET_DICOM_SERIES: 31,\r\n  SET_LOADER_DICOM: 32,\r\n};\r\nexport default StoreActionType;\r\n","const ModeView = {\r\n  VIEW_NA: -1,\r\n  VIEW_MPR: 0,\r\n  VIEW_2D: 1,\r\n  VIEW_3D_LIGHT: 2,\r\n  VIEW_3D: 3,\r\n  VIEW_COUNT: 4\r\n};\r\n\r\nexport default ModeView;\r\n","/**\r\n * @fileOverview Modes2d\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\nconst Modes2d = {\r\n  NA: -1,\r\n  SAGGITAL: 0,\r\n  CORONAL: 1,\r\n  TRANSVERSE: 2\r\n};\r\n\r\nexport default Modes2d;","\r\nconst Modes3d = {\r\n  NA: -1,\r\n  ISO: 0,\r\n  RAYCAST: 1,\r\n  RAYFAST: 2,\r\n  EREASER: 3\r\n};\r\n\r\nexport default Modes3d;\r\n","//\r\n\r\nimport StoreActionType from './ActionTypes';\r\nimport ModeView from './ModeView';\r\nimport Modes2d from './Modes2d';\r\nimport Modes3d from './Modes3d';\r\nimport Modes3droi from './Modes3droi';\r\n\r\n//\r\n// Global app settings with initial configuration\r\n//\r\nexport const initialState = {\r\n  isLoaded: false,\r\n  fileName: 'brain.ktx',\r\n  volumeSet: null,\r\n  volumeIndex: 0,\r\n  texture3d: null,\r\n  modeView: ModeView.VIEW_2D,\r\n  mode2d: Modes2d.TRANSVERSE,\r\n  slider2d: 0.5,\r\n  slider3d_r: 0.09,\r\n  slider3d_g: 0.3,\r\n  slider3d_b: 0.46,\r\n  mode3d: Modes3d.RAYCAST,\r\n  mode3droi: Modes3droi.RAYCAST,\r\n  sliderOpacity: 0.53,\r\n  sliderIsosurface: 0.46,\r\n  sliderBrightness: 0.56,\r\n  sliderCut: 1.0,\r\n  sliderQuality: 0.35,\r\n  sliderErRadius: 50.0,\r\n  sliderErDepth: 50.0,\r\n  volumeRenderer: null,\r\n  indexTools2d: 0,\r\n  render2dZoom: 1.0,\r\n  render2dxPos: 0.0,\r\n  render2dyPos: 0.0,\r\n  graphics2d: null,\r\n  uiApp: null,\r\n  dicomInfo: null,\r\n  isTool3D: false,\r\n  sliderContrast3D: 0.0,\r\n  arrErrors: [],\r\n  dicomSeries: [],\r\n  loaderDicom: null,\r\n};\r\n//\r\n// App reducer\r\n//\r\nconst medReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case StoreActionType.SET_IS_LOADED:\r\n    return Object.assign({}, state, { isLoaded: action.isLoaded });\r\n  case StoreActionType.SET_FILENAME:\r\n    return Object.assign({}, state, { fileName: action.fileName });\r\n  case StoreActionType.SET_VOLUME_SET:\r\n    return Object.assign({}, state, { volumeSet: action.volumeSet });\r\n  case StoreActionType.SET_VOLUME_INDEX:\r\n    return Object.assign({}, state, { volumeIndex: action.volumeIndex });\r\n  case StoreActionType.SET_TEXTURE3D:\r\n    return Object.assign({}, state, { texture3d: action.texture3d });\r\n  case StoreActionType.SET_MODE_VIEW:\r\n    return Object.assign({}, state, { modeView: action.modeView });\r\n  case StoreActionType.SET_MODE_2D:\r\n    return Object.assign({}, state, { mode2d: action.mode2d });\r\n  case StoreActionType.SET_SLIDER_2D:\r\n    return Object.assign({}, state, { slider2d: action.slider2d });\r\n  case StoreActionType.SET_MODE_3D:\r\n    return Object.assign({}, state, { mode3d: action.mode3d });\r\n  case StoreActionType.SET_MODE_3Droi:\r\n    return Object.assign({}, state, { mode3droi: action.mode3droi });\r\n  case StoreActionType.SET_SLIDER_3DR:\r\n    return Object.assign({}, state, { slider3d_r: action.slider3d_r });\r\n  case StoreActionType.SET_SLIDER_3DG:\r\n    return Object.assign({}, state, { slider3d_g: action.slider3d_g });\r\n  case StoreActionType.SET_SLIDER_3DB:\r\n    return Object.assign({}, state, { slider3d_b: action.slider3d_b });\r\n  case StoreActionType.SET_SLIDER_Opacity:\r\n    return Object.assign({}, state, { sliderOpacity: action.sliderOpacity });\r\n  case StoreActionType.SET_SLIDER_Isosurface:\r\n    return Object.assign({}, state, { sliderIsosurface: action.sliderIsosurface });\r\n  case StoreActionType.SET_SLIDER_ErRadius:\r\n    return Object.assign({}, state, { sliderErRadius: action.sliderErRadius });\r\n  case StoreActionType.SET_SLIDER_ErDepth:\r\n    return Object.assign({}, state, { sliderErDepth: action.sliderErDepth });\r\n  case StoreActionType.SET_VOLUME_Renderer:\r\n    return Object.assign({}, state, { volumeRenderer: action.volumeRenderer });\r\n  case StoreActionType.SET_SLIDER_Brightness:\r\n    return Object.assign({}, state, { sliderBrightness: action.sliderBrightness });\r\n  case StoreActionType.SET_SLIDER_Cut:\r\n    return Object.assign({}, state, { sliderCut: action.sliderCut });\r\n  case StoreActionType.SET_SLIDER_Quality:\r\n    return Object.assign({}, state, { sliderQuality: action.sliderQuality });\r\n  case StoreActionType.SET_2D_TOOLS_INDEX:\r\n    return Object.assign({}, state, { indexTools2d: action.indexTools2d });\r\n  case StoreActionType.SET_2D_ZOOM:\r\n    return Object.assign({}, state, { render2dZoom: action.render2dZoom });\r\n  case StoreActionType.SET_2D_X_POS:\r\n    return Object.assign({}, state, { render2dxPos: action.render2dxPos });\r\n  case StoreActionType.SET_2D_Y_POS:\r\n    return Object.assign({}, state, { render2dyPos: action.render2dyPos });\r\n  case StoreActionType.SET_GRAPHICS_2D:\r\n    return Object.assign({}, state, { graphics2d: action.graphics2d });\r\n  case StoreActionType.SET_UI_APP:\r\n    return Object.assign({}, state, { uiApp: action.uiApp });\r\n  case StoreActionType.SET_DICOM_INFO:\r\n    return Object.assign({}, state, { dicomInfo: action.dicomInfo });\r\n  case StoreActionType.SET_IS_TOOL3D:\r\n    return Object.assign({}, state, { isTool3D: action.isTool3D });\r\n  case StoreActionType.SET_SLIDER_Contrast3D:\r\n    return Object.assign({}, state, { sliderContrast3D: action.sliderContrast3D });\r\n  case StoreActionType.SET_ERR_ARRAY:\r\n    return Object.assign({}, state, { arrErrors: action.arrErrors });\r\n  case StoreActionType.SET_DICOM_SERIES:\r\n    return Object.assign({}, state, { dicomSeries: action.dicomSeries });\r\n  case StoreActionType.SET_LOADER_DICOM:\r\n    return Object.assign({}, state, { loaderDicom: action.loaderDicom });\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default medReducer;\r\n","\r\nconst Modes3droi = {\r\n  NA: -1,\r\n  ISO: 0,\r\n  RAYCAST: 1,\r\n};\r\n\r\nexport default Modes3droi;\r\n","/**\r\n * @fileOverview ToolPick\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// **********************************************\r\n// Imports\r\n// **********************************************\r\nimport Modes2d from '../../store/Modes2d';\r\n\r\n// **********************************************\r\n// Class\r\n// **********************************************\r\n\r\nclass ToolPick {\r\n  constructor(objGra) {\r\n    this.m_objGraphics2d = objGra;\r\n    this.m_wScreen = 0;\r\n    this.m_hScreen = 0;\r\n    this.m_strMessage = '';\r\n    this.m_xMessage = 0;\r\n    this.m_yMessage = 0;\r\n    this.m_timeStart = 0;\r\n\r\n    this.onTimerEnd = this.onTimerEnd.bind(this);\r\n  }\r\n\r\n  setScreenDim(wScr, hScr) {\r\n    this.m_wScreen = wScr;\r\n    this.m_hScreen = hScr;\r\n  }\r\n\r\n  /**\r\n  * @param {number} xScr - relative x screen position. In [0..1]\r\n  * @param {number} yScr - relative y screen position. In [0..1]\r\n  * @param {object} store - global parameters store\r\n  * @return object with props x,y,z - texture coordinates\r\n  */\r\n  screenToTexture(xScr, yScr, store) {\r\n    const vTex = {\r\n      x: 0.0,\r\n      y: 0.0,\r\n      z: 0.0,\r\n    };\r\n    const mode2d = store.mode2d;\r\n    const sliderPosition = store.slider2d;\r\n\r\n    const volSet = store.volumeSet;\r\n    const volIndex = store.volumeIndex;\r\n    const vol = volSet.getVolume(volIndex);\r\n\r\n    const xDim = vol.m_xDim;\r\n    const yDim = vol.m_yDim;\r\n    const zDim = vol.m_zDim;\r\n    const zoom = store.render2dZoom;\r\n    const xPos = store.render2dxPos;\r\n    const yPos = store.render2dyPos;\r\n    if (mode2d === Modes2d.TRANSVERSE) {\r\n      // z: const\r\n      vTex.x = Math.floor((xPos + xScr * zoom) * xDim);\r\n      vTex.y = Math.floor((yPos + yScr * zoom) * yDim);\r\n      vTex.z = Math.floor(sliderPosition * zDim);\r\n    }\r\n    if (mode2d === Modes2d.SAGGITAL) {\r\n      // x: const\r\n      vTex.x = Math.floor(sliderPosition * xDim);\r\n      vTex.y = Math.floor((xPos + xScr * zoom) * yDim);\r\n      vTex.z = Math.floor((yPos + yScr * zoom) * zDim);\r\n    }\r\n    if (mode2d === Modes2d.CORONAL) {\r\n      // y: const\r\n      vTex.x = Math.floor((xPos + xScr * zoom) * xDim);\r\n      vTex.y = Math.floor(sliderPosition * yDim);\r\n      vTex.z = Math.floor((yPos + yScr * zoom) * zDim);\r\n    }\r\n    return vTex;\r\n  }\r\n\r\n  onMouseDown(xScr, yScr, store) {\r\n    if ((this.m_wScreen === 0) || (this.m_hScreen === 0)) {\r\n      console.log('ToolPick. onMouseDown. Bad screen size');\r\n      return;\r\n    }\r\n\r\n    const xRatioImage = xScr / this.m_wScreen;\r\n    const yRatioImage = yScr / this.m_hScreen;\r\n    if ((xRatioImage > 1.0) || (yRatioImage > 1.0)) {\r\n      // out if rendered image\r\n      return;\r\n    }\r\n    const vTex = this.screenToTexture(xRatioImage, yRatioImage, store);\r\n\r\n    const volSet = store.volumeSet;\r\n    const vol = volSet.getVolume(store.volumeIndex);\r\n    const xDim = vol.m_xDim;\r\n    const yDim = vol.m_yDim;\r\n    /*\r\n    if (mode2d === Modes2d.SAGGITAL) {\r\n      // x\r\n      xVol = Math.floor(sliderPosition * (this.m_volume.m_xDim - 1));\r\n      yVol = Math.floor(xRatioImage * (this.m_volume.m_yDim - 1));\r\n      zVol = Math.floor(yRatioImage * (this.m_volume.m_zDim - 1));\r\n    } else if (mode2d === Modes2d.CORONAL) {\r\n      // y\r\n      xVol = Math.floor(xRatioImage * (this.m_volume.m_xDim - 1));\r\n      yVol = Math.floor(sliderPosition * (this.m_volume.m_yDim - 1));\r\n      zVol = Math.floor(yRatioImage * (this.m_volume.m_zDim - 1));\r\n    } else if (mode2d === Modes2d.TRANSVERSE) {\r\n      // z\r\n      xVol = Math.floor(xRatioImage * (this.m_volume.m_xDim - 1));\r\n      yVol = Math.floor(yRatioImage * (this.m_volume.m_yDim - 1));\r\n      zVol = Math.floor(sliderPosition * (this.m_volume.m_zDim - 1));\r\n    }\r\n    const off = xVol + (yVol * this.m_volume.m_xDim) + (zVol * this.m_volume.m_xDim * this.m_volume.m_yDim);\r\n    */\r\n\r\n    const ONE = 1;\r\n    const FOUR = 4;\r\n    const bpp = vol.m_bytesPerVoxel;\r\n    let off = vTex.x + (vTex.y * xDim) + (vTex.z * xDim * yDim);\r\n    let val = 0;\r\n    if (bpp === ONE) {\r\n      val = vol.m_dataArray[off];\r\n    } else if (bpp === FOUR) {\r\n      off = off * FOUR;\r\n      val = vol.m_dataArray[off];\r\n    }\r\n    \r\n    this.m_xMessage = xScr;\r\n    this.m_yMessage = yScr;\r\n    this.m_strMessage = 'x,y,z = ' + (vTex.x).toString() + ', ' + (vTex.y).toString() + ', ' + (vTex.z).toString() + \r\n      '. val = ' + val.toString();\r\n    // console.log(`ToolPick. onMouseDown. ${this.m_strMessage}`);\r\n    this.m_timeStart = Date.now();\r\n    setTimeout(this.onTimerEnd, 1500);\r\n\r\n  } // end onMouseDown\r\n\r\n  onTimerEnd() {\r\n    this.m_objGraphics2d.forceUpdate();\r\n  }\r\n\r\n  render(ctx) {\r\n    if (this.m_timeStart === 0) {\r\n      return;\r\n    }\r\n    const TIME_SHOW_MS = 1200;\r\n    const timeCur = Date.now();\r\n    const timeDelta = timeCur - this.m_timeStart;\r\n    // console.log(`ToolPick. dt = ${timeDelta}`);\r\n    if (timeDelta < TIME_SHOW_MS) {\r\n      // render message\r\n      // console.log('ToolPick. Render message on ctx');\r\n      ctx.fillStyle = 'white';\r\n      const FONT_SZ = 16;\r\n      ctx.font = FONT_SZ.toString() + 'px Arial';\r\n      const sizeTextRect = ctx.measureText(this.m_strMessage);\r\n      // console.log(`ToolPick. draw text. x = ${this.m_xMessage}, szRect = ${sizeTextRect.width}, wScr = ${this.m_wScreen}`);\r\n      if (this.m_xMessage + sizeTextRect.width < this.m_wScreen) {\r\n        ctx.textAlign = 'left';\r\n      } else {\r\n        ctx.textAlign = 'right';\r\n      }\r\n      if (this.m_yMessage + FONT_SZ < this.m_hScreen) {\r\n        ctx.textBaseline = 'top';\r\n      } else {\r\n        ctx.textBaseline = 'bottom';\r\n      }\r\n\r\n      ctx.fillText(this.m_strMessage, this.m_xMessage, this.m_yMessage);\r\n    }\r\n  }\r\n}\r\nexport default ToolPick;\r\n","/**\r\n * @fileOverview ToolZoom\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// **********************************************\r\n// Imports\r\n// **********************************************\r\n\r\n// import React from 'react';\r\n// import { connect } from 'react-redux';\r\n\r\nimport StoreActionType from '../../store/ActionTypes';\r\n\r\n// **********************************************\r\n// Class\r\n// **********************************************\r\n\r\nclass ToolZoom {\r\n  constructor(objGra) {\r\n    this.m_objGraphics2d = objGra;\r\n    this.m_wScreen = 0;\r\n    this.m_hScreen = 0;\r\n\r\n    this.setScreenDim = this.setScreenDim.bind(this);\r\n    this.onMouseWheel = this.onMouseWheel.bind(this);\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n\r\n    this.state = {\r\n      mouseDown: false,\r\n      xMouse: 0,\r\n      yMouse: 0,\r\n    };\r\n  }\r\n\r\n  setScreenDim(wScr, hScr) {\r\n    this.m_wScreen = wScr;\r\n    this.m_hScreen = hScr;\r\n  }\r\n\r\n  onMouseDown(xScr, yScr) {\r\n    this.state.mouseDown = true;\r\n    this.state.xMouse = xScr;\r\n    this.state.yMouse = yScr;\r\n  }\r\n\r\n  onMouseUp() {\r\n    this.state.mouseDown = false;\r\n  }\r\n\r\n  onMouseMove(store, xScr, yScr) {\r\n    if (this.state.mouseDown) {\r\n      const dx = xScr - this.state.xMouse;\r\n      const dy = yScr - this.state.yMouse;\r\n\r\n      this.state.xMouse = xScr;\r\n      this.state.yMouse = yScr;\r\n\r\n\r\n      const zoom = store.render2dZoom;\r\n      const dxMove = (dx / this.m_wScreen) * zoom;\r\n      const dyMove = (dy / this.m_hScreen) * zoom;\r\n      // console.log(`dxyMove = ${dxMove}, ${dyMove}`);\r\n      const xPos = store.render2dxPos - dxMove;\r\n      const yPos = store.render2dyPos - dyMove;\r\n\r\n      // check new 2d transform is valid (not clipped)\r\n      if ((xPos >= 0.0) && (xPos + zoom <= 1.0) && \r\n        (yPos >= 0.0) && (yPos + zoom <= 1.0)) {\r\n        store.dispatch({ type: StoreActionType.SET_2D_X_POS, render2dxPos: xPos });\r\n        store.dispatch({ type: StoreActionType.SET_2D_Y_POS, render2dyPos: yPos });\r\n        const gra = store.graphics2d;\r\n        gra.forceUpdate();\r\n      }\r\n    }\r\n  }\r\n\r\n  onMouseWheel(store, evt) {\r\n    const delta = Math.max(-1, Math.min(1, (evt.deltaY || -evt.detail)));\r\n    const MULT_STEP = 0.04;\r\n    const step = -delta * MULT_STEP;\r\n    // console.log(`onMouseWheel. step = ${step}`);\r\n\r\n    const zoom = store.render2dZoom;\r\n    let zoomNew = zoom + step;\r\n    if (zoomNew > 1.0) {\r\n      zoomNew -= step;\r\n    }\r\n    if (zoomNew <= 0.0) {\r\n      zoomNew += step;\r\n    }\r\n    if (zoomNew !== zoom) {\r\n      const xPos = store.render2dxPos;\r\n      const yPos = store.render2dyPos;\r\n      const xPosNew = xPos - step * 0.5;\r\n      const yPosNew = yPos - step * 0.5;\r\n      // console.log(`onMouseWheel. zoomNew = ${zoomNew}, xyPos = ${xPosNew},${yPosNew}`);\r\n      store.dispatch({ type: StoreActionType.SET_2D_ZOOM, render2dZoom: zoomNew });\r\n      store.dispatch({ type: StoreActionType.SET_2D_X_POS, render2dxPos: xPosNew });\r\n      store.dispatch({ type: StoreActionType.SET_2D_Y_POS, render2dyPos: yPosNew });\r\n\r\n      const gra = store.graphics2d;\r\n      gra.forceUpdate();\r\n    }\r\n  } // end on mouse wheel\r\n\r\n}\r\n// export default connect(store => store)(ToolZoom);\r\nexport default ToolZoom;\r\n","/**\r\n * @fileOverview ToolDistance\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// **********************************************\r\n// Imports\r\n// **********************************************\r\n\r\nimport Modes2d from '../../store/Modes2d';\r\n\r\n// **********************************************\r\n// Class\r\n// **********************************************\r\n\r\nclass ToolDistance {\r\n  constructor(objGra) {\r\n    this.m_objGraphics2d = objGra;\r\n    this.m_wScreen = 0;\r\n    this.m_hScreen = 0;\r\n  \r\n    this.m_pointStart = null;\r\n    this.m_lines = [];\r\n    this.m_mouseDown = false;\r\n\r\n    this.m_objEdit = null;\r\n\r\n    this.m_xPixelSize = 0;\r\n    this.m_yPixelSize = 0;\r\n  }\r\n\r\n  setScreenDim(wScr, hScr) {\r\n    this.m_wScreen = wScr;\r\n    this.m_hScreen = hScr;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {number} xs - world units hor / volume pixels (x)\r\n   * @param {number} ys - world units ver / volume pixels (y) \r\n   */\r\n  setPixelSize(xs, ys) {\r\n    this.m_xPixelSize = xs;\r\n    this.m_yPixelSize = ys;\r\n  }\r\n\r\n  /**\r\n   * Determine intersection with points in lines set.\r\n   * Input - screen coordinates of pick point\r\n   * Output - volume coordinate\r\n   *  \r\n   * @param {object} vScr - screen coordinates of poick\r\n   * @param {object} store - global store\r\n   */\r\n  getEditPoint(vScr, store) {\r\n    const numLines = this.m_lines.length;\r\n    for (let i = 0; i < numLines; i++) {\r\n      const objLine = this.m_lines[i];\r\n      const vScrS = ToolDistance.textureToScreen(objLine.vs.x, objLine.vs.y, this.m_wScreen, this.m_hScreen, store);\r\n      const vScrE = ToolDistance.textureToScreen(objLine.ve.x, objLine.ve.y, this.m_wScreen, this.m_hScreen, store);\r\n      const MIN_DIST = 4.0;\r\n      if (this.getDistMm(vScr, vScrS) <= MIN_DIST) {\r\n        this.m_objEdit = objLine;\r\n        return objLine.vs;\r\n      }\r\n      if (this.getDistMm(vScr, vScrE) <= MIN_DIST) {\r\n        this.m_objEdit = objLine;\r\n        return objLine.ve;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Move edited point into new pos\r\n   * \r\n   * @param {object} vVolOld \r\n   * @param {object} vVolNew \r\n   */\r\n  moveEditPoint(vVolOld, vVolNew) {\r\n    vVolOld.x = vVolNew.x;\r\n    vVolOld.y = vVolNew.y;\r\n    // update line len\r\n    this.m_objEdit.distMm = this.getDistMm(this.m_objEdit.vs, this.m_objEdit.ve);\r\n  }\r\n\r\n  /**\r\n   * Remove highlighted object\r\n   */\r\n  deleteObject() {\r\n    if (this.m_objEdit != null) {\r\n      const ind = this.m_lines.indexOf(this.m_objEdit);\r\n      if (ind >= 0) {\r\n        this.m_lines.splice(ind, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  static screenToTexture(xScr, yScr, wScr, hScr, store) {\r\n    const xRel = xScr / wScr;\r\n    const yRel = yScr / hScr;\r\n\r\n    const mode2d = store.mode2d;\r\n\r\n    const volSet = store.volumeSet;\r\n    const volIndex = store.volumeIndex;\r\n    const vol = volSet.getVolume(volIndex);\r\n\r\n    const xDim = vol.m_xDim;\r\n    const yDim = vol.m_yDim;\r\n    const zDim = vol.m_zDim;\r\n    const zoom = store.render2dZoom;\r\n    const xPos = store.render2dxPos;\r\n    const yPos = store.render2dyPos;\r\n\r\n    const vTex = {\r\n      x: 0.0,\r\n      y: 0.0,\r\n    };\r\n    if (mode2d === Modes2d.TRANSVERSE) {\r\n      // z const\r\n      vTex.x = Math.floor((xPos + xRel * zoom) * xDim);\r\n      vTex.y = Math.floor((yPos + yRel * zoom) * yDim);\r\n    }\r\n    if (mode2d === Modes2d.SAGGITAL) {\r\n      // x const\r\n      vTex.x = Math.floor((xPos + xRel * zoom) * yDim);\r\n      vTex.y = Math.floor((yPos + yRel * zoom) * zDim);\r\n    }\r\n    if (mode2d === Modes2d.CORONAL) {\r\n      // y const\r\n      vTex.x = Math.floor((xPos + xRel * zoom) * xDim);\r\n      vTex.y = Math.floor((yPos + yRel * zoom) * zDim);\r\n    }\r\n    return vTex;\r\n  }\r\n\r\n  static textureToScreen(xTex, yTex, wScr, hScr, store) {\r\n    const vScr = {\r\n      x: 0.0,\r\n      y: 0.0,\r\n    };\r\n    const mode2d = store.mode2d;\r\n    const volSet = store.volumeSet; \r\n    const vol = volSet.getVolume(store.volumeIndex);\r\n    const xDim = vol.m_xDim;\r\n    const yDim = vol.m_yDim;\r\n    const zDim = vol.m_zDim;\r\n    const zoom = store.render2dZoom;\r\n    const xPos = store.render2dxPos;\r\n    const yPos = store.render2dyPos;\r\n    if (mode2d === Modes2d.TRANSVERSE) {\r\n      // z const\r\n      vScr.x = ((xTex / xDim) - xPos) / zoom;\r\n      vScr.y = ((yTex / yDim) - yPos) / zoom;\r\n    }\r\n    if (mode2d === Modes2d.SAGGITAL) {\r\n      // x const\r\n      vScr.x = ((xTex / yDim) - xPos) / zoom;\r\n      vScr.y = ((yTex / zDim) - yPos) / zoom;\r\n    }\r\n    if (mode2d === Modes2d.CORONAL) {\r\n      // y const\r\n      vScr.x = ((xTex / xDim) - xPos) / zoom;\r\n      vScr.y = ((yTex / zDim) - yPos) / zoom;\r\n    }\r\n    vScr.x *= wScr;\r\n    vScr.y *= hScr;\r\n    return vScr;\r\n  }\r\n\r\n  getDistMm(vs, ve) {\r\n    const dx = vs.x - ve.x;\r\n    const dy = vs.y - ve.y;\r\n    const dist = Math.sqrt(dx * dx * this.m_xPixelSize * this.m_xPixelSize +\r\n      dy * dy * this.m_yPixelSize * this.m_yPixelSize);\r\n    return dist;\r\n  }\r\n\r\n  onMouseDown(xScr, yScr, store) {\r\n    const vTex = ToolDistance.screenToTexture(xScr, yScr, this.m_wScreen, this.m_hScreen, store);\r\n    const vStart = {\r\n      x: vTex.x,\r\n      y: vTex.y,\r\n    };\r\n    const vEnd = {\r\n      x: vTex.x,\r\n      y: vTex.y\r\n    };\r\n    const objLine = {\r\n      vs: vStart,\r\n      ve: vEnd,\r\n      distMm: 0.0,\r\n    };\r\n    this.m_lines.push(objLine);\r\n    this.m_mouseDown = true;\r\n    // this.m_pointStart = v;\r\n    // console.log(`onMouseDown: ${xScr}, ${yScr}`);\r\n  }\r\n\r\n  onMouseMove(xScr, yScr, store) {\r\n    if (!this.m_mouseDown) {\r\n      return;\r\n    }\r\n    const vTex = ToolDistance.screenToTexture(xScr, yScr, this.m_wScreen, this.m_hScreen, store);\r\n    // get last line and change end\r\n    const vEnd = {\r\n      x: vTex.x,\r\n      y: vTex.y,\r\n    };\r\n    const numLines = this.m_lines.length;\r\n    if (numLines > 0) {\r\n      const objLastLine = this.m_lines[numLines - 1];\r\n      objLastLine.ve = vEnd;\r\n      objLastLine.distMm = this.getDistMm(objLastLine.vs, objLastLine.ve);\r\n      const MIN_DIST_MM = 0.00001;\r\n      if (objLastLine.distMm > MIN_DIST_MM) {\r\n        // invoke render event\r\n        this.m_objGraphics2d.forceUpdate();\r\n      } // if last line is long enough\r\n    } // if num lines more 0\r\n  }\r\n\r\n  onMouseUp() { // omitted args: xScr, yScr, store\r\n    this.m_mouseDown = false;\r\n    const numLines = this.m_lines.length;\r\n    if (numLines > 0) {\r\n      const objLastLine = this.m_lines[numLines - 1];\r\n      objLastLine.distMm = this.getDistMm(objLastLine.vs, objLastLine.ve);\r\n      const MIN_DIST_MM = 0.00001;\r\n      if (objLastLine.distMm <= MIN_DIST_MM) {\r\n        // remove last line\r\n        this.m_lines.pop();\r\n        console.log('ToolDistance: pop last line');\r\n      } // if last line is long enough\r\n    } // if num lines more 0\r\n\r\n  }\r\n\r\n  clear() {\r\n    this.m_lines = [];\r\n  }\r\n\r\n  //\r\n  // render lines on screen\r\n  // \r\n  render(ctx, store) {\r\n    const numLines = this.m_lines.length;\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = 'yellow';\r\n    ctx.fillStyle = 'white';\r\n    const FONT_SZ = 16;\r\n    ctx.font = FONT_SZ.toString() + 'px Arial';\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'center';\r\n    for (let i = 0; i < numLines; i++) {\r\n      const objLine = this.m_lines[i];\r\n      const distMm = objLine.distMm;\r\n      const vsTex = objLine.vs;\r\n      const veTex = objLine.ve;\r\n      const vs = ToolDistance.textureToScreen(vsTex.x, vsTex.y, this.m_wScreen, this.m_hScreen, store);\r\n      const ve = ToolDistance.textureToScreen(veTex.x, veTex.y, this.m_wScreen, this.m_hScreen, store);\r\n      ctx.beginPath();\r\n      ctx.moveTo(vs.x, vs.y);\r\n      ctx.lineTo(ve.x, ve.y);\r\n      ctx.stroke();\r\n      // draw text\r\n      const xText = Math.floor((vs.x + ve.x) * 0.5);\r\n      const yText = Math.floor((vs.y + ve.y) * 0.5);\r\n      const strMsg = distMm.toFixed(3) + ' mm';\r\n      ctx.fillText(strMsg, xText, yText);\r\n    }\r\n  }\r\n\r\n} // end class\r\n\r\nexport default ToolDistance;\r\n","/**\r\n * @fileOverview ToolClear\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// **********************************************\r\n// Imports\r\n// **********************************************\r\n\r\n// **********************************************\r\n// Class\r\n// **********************************************\r\n\r\nclass ToolClear {\r\n  constructor(objGra) {\r\n    this.m_objGraphics2d = objGra;\r\n  }\r\n\r\n  clear() {\r\n    this.m_objGraphics2d.clear();\r\n  }\r\n}\r\nexport default ToolClear;\r\n","/**\r\n * @fileOverview ToolAngle\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// **********************************************\r\n// Imports\r\n// **********************************************\r\n\r\n// import Modes2d from '../../store/Modes2d';\r\nimport ToolDistance from './ToolDistance';\r\n\r\n// **********************************************\r\n// Class\r\n// **********************************************\r\n\r\nclass ToolAngle {\r\n  constructor(objGra) {\r\n    this.m_objGraphics2d = objGra;\r\n    this.m_wScreen = 0;\r\n    this.m_hScreen = 0;\r\n\r\n    const v0 = {\r\n      x: 0.0, y: 0.0\r\n    };\r\n    const v1 = {\r\n      x: 0.0, y: 0.0\r\n    };\r\n    const v2 = {\r\n      x: 0.0, y: 0.0\r\n    };\r\n    this.m_points = [ v0, v1, v2 ];\r\n    this.m_numClicks = 0;\r\n    this.m_angles = [];\r\n\r\n    this.m_objEdit = null;\r\n\r\n    this.m_xPixelSize = 0;\r\n    this.m_yPixelSize = 0;\r\n\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n    this.render = this.render.bind(this);\r\n  }\r\n\r\n  setScreenDim(wScr, hScr) {\r\n    this.m_wScreen = wScr;\r\n    this.m_hScreen = hScr;\r\n  }\r\n\r\n  setPixelSize(xs, ys) {\r\n    this.m_xPixelSize = xs;\r\n    this.m_yPixelSize = ys;\r\n  }\r\n\r\n  /**\r\n   * Determine intersection with points in lines set.\r\n   * Input - screen coordinates of pick point\r\n   * Output - volume coordinate\r\n   *  \r\n   * @param {object} vScr - screen coordinates of poick\r\n   * @param {object} store - global store \r\n   */\r\n  getEditPoint(vScr, store) {\r\n    const numObj = this.m_angles.length;\r\n    for (let i = 0; i < numObj; i++) {\r\n      const objAngle = this.m_angles[i];\r\n      const vScr0 = ToolDistance.textureToScreen(objAngle.points[0].x, objAngle.points[0].y, this.m_wScreen, this.m_hScreen, store);\r\n      const vScr1 = ToolDistance.textureToScreen(objAngle.points[1].x, objAngle.points[1].y, this.m_wScreen, this.m_hScreen, store);\r\n      const vScr2 = ToolDistance.textureToScreen(objAngle.points[2].x, objAngle.points[2].y, this.m_wScreen, this.m_hScreen, store);\r\n      const MIN_DIST = 4.0;\r\n      if (this.getDistMm(vScr, vScr0) <= MIN_DIST) {\r\n        this.m_objEdit = objAngle;\r\n        return objAngle.points[0];\r\n      }\r\n      if (this.getDistMm(vScr, vScr1) <= MIN_DIST) {\r\n        this.m_objEdit = objAngle;\r\n        return objAngle.points[1];\r\n      }\r\n      if (this.getDistMm(vScr, vScr2) <= MIN_DIST) {\r\n        this.m_objEdit = objAngle;\r\n        return objAngle.points[2];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  moveEditPoint(vVolOld, vVolNew) {\r\n    vVolOld.x = vVolNew.x;\r\n    vVolOld.y = vVolNew.y;\r\n    // update angle dist\r\n    this.getAngleForObj(this.m_objEdit);\r\n  }\r\n    \r\n  /**\r\n   * Remove highlighted object\r\n   */\r\n  deleteObject() {\r\n    if (this.m_objEdit != null) {\r\n      const ind = this.m_angles.indexOf(this.m_objEdit);\r\n      if (ind >= 0) {\r\n        this.m_angles.splice(ind, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  getDistMm(vs, ve) {\r\n    const dx = vs.x - ve.x;\r\n    const dy = vs.y - ve.y;\r\n    const dist = Math.sqrt(dx * dx * this.m_xPixelSize * this.m_xPixelSize +\r\n      dy * dy * this.m_yPixelSize * this.m_yPixelSize);\r\n    return dist;\r\n  }\r\n\r\n  getAngleForObj(objAngle) {\r\n    for (let i = 0; i < 3; i++) {\r\n      this.m_points[i].x = objAngle.points[i].x;\r\n      this.m_points[i].y = objAngle.points[i].y;\r\n    }\r\n    const ang = this.getAngle();\r\n    objAngle.angle = ang;\r\n  }\r\n\r\n  getAngle() {\r\n    const v1x = this.m_points[1].x - this.m_points[0].x;\r\n    const v1y = this.m_points[1].y - this.m_points[0].y;\r\n    const v2x = this.m_points[2].x - this.m_points[0].x;\r\n    const v2y = this.m_points[2].y - this.m_points[0].y;\r\n    const dotProd = v1x * v2x + v1y * v2y;\r\n    const v1len = Math.sqrt(v1x * v1x + v1y * v1y);\r\n    const v2len = Math.sqrt(v2x * v2x + v2y * v2y);\r\n    const cosAlp = dotProd / (v1len * v2len);\r\n    const M_180 = 180.0;\r\n    const M_PI = 3.1415926535;\r\n    if (cosAlp > 1.0) {\r\n      // console.log('get Angle > 1');\r\n      return 0.0;\r\n    }\r\n    if (cosAlp < -1.0) {\r\n      // console.log('get Angle < -1');\r\n      return 180.0;\r\n    }\r\n    const ang = Math.acos(cosAlp) * M_180 / M_PI;\r\n    return ang;\r\n  }\r\n\r\n  onMouseDown(xScr, yScr, store) {\r\n    const vTex = ToolDistance.screenToTexture(xScr, yScr, this.m_wScreen, this.m_hScreen, store);\r\n    if (this.m_numClicks === 0) {\r\n      // assign all 3 points at the same place\r\n      for (let i = 0; i < 3; i++) {\r\n        this.m_points[i].x = vTex.x;\r\n        this.m_points[i].y = vTex.y;\r\n      }\r\n\r\n      this.m_numClicks++;\r\n      // console.log('1st click: add 3 points');\r\n    } else if (this.m_numClicks === 1) {\r\n      this.m_numClicks++;\r\n      // console.log(`2st click: points are: ${this.m_points[0].x}, ${this.m_points[0].y} -> ${this.m_points[1].x}, ${this.m_points[1].y}`);\r\n    } else {\r\n      console.log('3rd click: finalize angle');\r\n      // this.m_numClicks === 2\r\n      const v0 = {\r\n        x: this.m_points[0].x,\r\n        y: this.m_points[0].y,\r\n      };\r\n      const v1 = {\r\n        x: this.m_points[1].x,\r\n        y: this.m_points[1].y,\r\n      };\r\n      const v2 = {\r\n        x: this.m_points[2].x,\r\n        y: this.m_points[2].y,\r\n      };\r\n      const ang = this.getAngle();\r\n\r\n      const objAngle = {\r\n        points: [ v0, v1, v2 ],\r\n        angle: ang,\r\n      };\r\n      this.m_angles.push(objAngle);\r\n      this.m_numClicks = 0;\r\n    }\r\n  }\r\n\r\n  onMouseMove(xScr, yScr, store) {\r\n    if (this.m_numClicks === 0) {\r\n      return;\r\n    }\r\n    // modify point in points array\r\n    const vTex = ToolDistance.screenToTexture(xScr, yScr, this.m_wScreen, this.m_hScreen, store);\r\n    const NUM_3 = 3;\r\n    for (let idx = this.m_numClicks; idx < NUM_3; idx++) {\r\n      this.m_points[idx].x = vTex.x;\r\n      this.m_points[idx].y = vTex.y;\r\n      // console.log(`onMouseMove. modify point[${idx}]: now = ${vTex.x}, ${vTex.y}`);\r\n    }\r\n    // invoke redraw\r\n    this.m_objGraphics2d.forceUpdate();\r\n  }\r\n\r\n  onMouseUp() { // ommited args: xScr, yScr, store\r\n  }\r\n\r\n  clear() {\r\n    this.m_angles = [];\r\n    this.m_numClicks = 0;\r\n  }\r\n\r\n  //\r\n  // render lines on screen\r\n  // \r\n  render(ctx, store) {\r\n    const NUM_3 = 3;\r\n\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = 'yellow';\r\n    ctx.fillStyle = 'white';\r\n    const FONT_SZ = 16;\r\n    ctx.font = FONT_SZ.toString() + 'px Arial';\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'top';\r\n\r\n    if (this.m_numClicks > 0) {\r\n      for(let i = 1; i < NUM_3; i++) {\r\n        const vTex0 = this.m_points[0];\r\n        const vTex1 = this.m_points[i];\r\n        const vs = ToolDistance.textureToScreen(vTex0.x, vTex0.y, this.m_wScreen, this.m_hScreen, store);\r\n        const ve = ToolDistance.textureToScreen(vTex1.x, vTex1.y, this.m_wScreen, this.m_hScreen, store);\r\n        const dx = vs.x - ve.x;\r\n        const dy = vs.y - ve.y;\r\n        const MIN_DIST2 = 2 * 2;\r\n        if ((dx * dx) + (dy * dy) >= MIN_DIST2) {\r\n          ctx.beginPath();\r\n          ctx.moveTo(vs.x, vs.y);\r\n          ctx.lineTo(ve.x, ve.y);\r\n          ctx.stroke();\r\n        } // if line is not degradate to point\r\n      } // for all 3 vertices\r\n      // draw angle\r\n      let ang = 0.0;\r\n      if (this.m_numClicks >= 2) {\r\n        ang = this.getAngle();\r\n      }\r\n      const strMsg = ang.toFixed(3) + '°';\r\n      const vTex0 = this.m_points[0];\r\n      const vs0 = ToolDistance.textureToScreen(vTex0.x, vTex0.y, this.m_wScreen, this.m_hScreen, store);\r\n      const SHIFT_UP = 8;\r\n      const xText = vs0.x;\r\n      const yText = vs0.y + SHIFT_UP;\r\n      ctx.fillText(strMsg, xText, yText);\r\n\r\n    } // if we have angle under build\r\n\r\n    // draw ready angles\r\n    const numAngles = this.m_angles.length;\r\n    for (let a = 0; a < numAngles; a++) {\r\n      const objAngle = this.m_angles[a];\r\n      for (let i = 1; i < NUM_3; i++) {\r\n        const vTex0 = objAngle.points[0];\r\n        const vTex1 = objAngle.points[i];\r\n        const vs = ToolDistance.textureToScreen(vTex0.x, vTex0.y, this.m_wScreen, this.m_hScreen, store);\r\n        const ve = ToolDistance.textureToScreen(vTex1.x, vTex1.y, this.m_wScreen, this.m_hScreen, store);\r\n        ctx.beginPath();\r\n        ctx.moveTo(vs.x, vs.y);\r\n        ctx.lineTo(ve.x, ve.y);\r\n        ctx.stroke();\r\n      } // for points in angle\r\n      // draw angle\r\n      const strMsg = objAngle.angle.toFixed(3) + '°';\r\n      const vTex0 = objAngle.points[0];\r\n      const vs0 = ToolDistance.textureToScreen(vTex0.x, vTex0.y, this.m_wScreen, this.m_hScreen, store);\r\n      const SHIFT_UP = 8;\r\n      const xText = vs0.x;\r\n      const yText = vs0.y + SHIFT_UP;\r\n      ctx.fillText(strMsg, xText, yText);\r\n\r\n    } // for all angles\r\n  } // end render\r\n\r\n\r\n} // end class\r\nexport default ToolAngle;\r\n\r\n","/**\r\n * @fileOverview ToolArea\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// **********************************************\r\n// Imports\r\n// **********************************************\r\n\r\nimport Modes2d from '../../store/Modes2d';\r\nimport ToolDistance from './ToolDistance';\r\n\r\n// **********************************************\r\n// Class\r\n// **********************************************\r\n\r\nclass ToolArea {\r\n  constructor(objGra) {\r\n    this.m_objGraphics2d = objGra;\r\n    this.m_wScreen = 0;\r\n    this.m_hScreen = 0;\r\n\r\n    this.m_areas = [];\r\n    this.m_inCreateMode = false;\r\n    this.m_objSelfIntersect = null;\r\n\r\n    this.m_xPixelSize = 0;\r\n    this.m_yPixelSize = 0;\r\n\r\n    this.m_objEdit = null;\r\n    this.store = null;\r\n\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n    this.render = this.render.bind(this);\r\n  }\r\n\r\n  setScreenDim(wScr, hScr) {\r\n    this.m_wScreen = wScr;\r\n    this.m_hScreen = hScr;\r\n  }\r\n\r\n  setPixelSize(xs, ys) {\r\n    this.m_xPixelSize = xs;\r\n    this.m_yPixelSize = ys;\r\n  }\r\n\r\n  clear() {\r\n    this.m_areas = [];\r\n    this.m_inCreateMode = false;\r\n    this.m_objSelfIntersect = null;\r\n  }\r\n\r\n  /**\r\n   * Determine intersection with points in areas set.\r\n   * Input - screen coordinates of pick point\r\n   * Output - volume coordinate\r\n   *  \r\n   * @param {object} vScr - screen coordinates of poick\r\n   * @param {object} store - global store\r\n   */\r\n  getEditPoint(vScr, store) {\r\n    this.store = store;\r\n    const numAreas = this.m_areas.length;\r\n    for(let i = 0 ; i < numAreas; i++) {\r\n      const objArea = this.m_areas[i];\r\n      for (let j = 0; j < objArea.m_points.length; j++) {\r\n        const vScrProj = ToolDistance.textureToScreen(objArea.m_points[j].x, objArea.m_points[j].y, this.m_wScreen, this.m_hScreen, store);\r\n        const MIN_DIST = 4.0;\r\n        if (this.getDistMm(vScr, vScrProj) <= MIN_DIST) {\r\n          this.m_objEdit = objArea;\r\n          return objArea.m_points[j];\r\n        } // if too close pick\r\n      } // for (j) all point in area\r\n    } // for (i) all areas\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Move edited point into new pos\r\n   * \r\n   * @param {object} vVolOld \r\n   * @param {object} vVolNew \r\n   */\r\n  moveEditPoint(vVolOld, vVolNew) {\r\n    const x = vVolOld.x;\r\n    const y = vVolOld.y;\r\n    vVolOld.x = vVolNew.x;\r\n    vVolOld.y = vVolNew.y;\r\n    //const vObjSelfInters = ToolArea.getSelfIntersectPoint(this.m_objEdit.m_points);\r\n    //if (vObjSelfInters !== null) {\r\n    const hasInters = ToolArea.hasSelfIntersection(this.m_objEdit.m_points);\r\n    if (hasInters) {\r\n      // console.log('ToolArea. self inters found');\r\n      vVolOld.x = x;\r\n      vVolOld.y = y;\r\n    }\r\n    // update line len\r\n    const store = this.store;\r\n    this.m_objEdit.m_area = this.getPolyArea(this.m_objEdit.m_points, store);\r\n  }\r\n\r\n  /**\r\n   * Remove highlighted object\r\n   */\r\n  deleteObject() {\r\n    if (this.m_objEdit != null) {\r\n      const ind = this.m_areas.indexOf(this.m_objEdit);\r\n      if (ind >= 0) {\r\n        this.m_areas.splice(ind, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  getDistMm(vs, ve) {\r\n    const dx = vs.x - ve.x;\r\n    const dy = vs.y - ve.y;\r\n    const dist = Math.sqrt(dx * dx * this.m_xPixelSize * this.m_xPixelSize +\r\n      dy * dy * this.m_yPixelSize * this.m_yPixelSize);\r\n    return dist;\r\n  }\r\n\r\n  /**\r\n   * Get lines intersection in 2d\r\n   * \r\n   * @param {object} v0 \r\n   * @param {object} v1 \r\n   * @param {object} v2 \r\n   * @param {object} v3 \r\n   * @return {object} point (object with x,y) of intersection or null\r\n   */\r\n  static getLineIntersection(v0, v1, v2, v3) {\r\n    const v23 = {\r\n      x: v3.x - v2.x,\r\n      y: v3.y - v2.y,\r\n    };\r\n    const n23 = {\r\n      x: -v23.y,\r\n      y: v23.x,\r\n    };\r\n    const v01 = {\r\n      x: v1.x - v0.x,\r\n      y: v1.y - v0.y,\r\n    };\r\n    const v02 = {\r\n      x: v2.x - v0.x,\r\n      y: v2.y - v0.y,\r\n    };\r\n    const dotUp = v02.x * n23.x + v02.y * n23.y;\r\n    const dotDn = v01.x * n23.x + v01.y * n23.y;\r\n    const TOO_SMALL = 1.0e-6;\r\n    if (Math.abs(dotDn) < TOO_SMALL) {\r\n      return null;\r\n    }\r\n    const t01 = dotUp / dotDn; // should be in [0..1]\r\n    if ((t01 < 0.0) || (t01 > 1.0)) {\r\n      return null;\r\n    }\r\n    // check intersect from 2nd line\r\n    const v20 = {\r\n      x: -v02.x,\r\n      y: -v02.y,\r\n    };\r\n    const n01 = {\r\n      x: -v01.y,\r\n      y: v01.x\r\n    };\r\n    const dotProdDn = v23.x * n01.x + v23.y * n01.y;\r\n    if (Math.abs(dotProdDn) < TOO_SMALL) {\r\n      return null;\r\n    }\r\n    const dotProdUp = v20.x * n01.x + v20.y * n01.y;\r\n    const t23 = dotProdUp / dotProdDn; // should be in [0..1]\r\n    if ((t23 < 0.0) || (t23 > 1.0)) {\r\n      return null;\r\n    }\r\n    const vIntersection = {\r\n      x: v0.x + v01.x * t01,\r\n      y: v0.y + v01.y * t01\r\n    };\r\n    return vIntersection;\r\n  }\r\n\r\n  static hasSelfIntersection(points) {\r\n    let i, j;\r\n    for (i = 0; i < points.length; i++) {\r\n      const iNext = (i + 1 < points.length) ? (i + 1) : 0;\r\n      const vA = points[i];\r\n      const vB = points[iNext];\r\n      for (j = 0; j < points.length; j++) {\r\n        const jNext = (j + 1 < points.length) ? (j + 1) : 0;\r\n        if ((i !== j) && (i !== jNext) && (iNext !== j) && (iNext !== jNext)) {\r\n          const vC = points[j];\r\n          const vD = points[jNext];\r\n          const vIntersect = ToolArea.getLineIntersection(vA, vB, vC, vD);\r\n          if (vIntersect !== null) {\r\n            return true;\r\n          }\r\n        } // if not same index\r\n        \r\n      } // for (j)\r\n    } // for (i)\r\n    return false;\r\n  }\r\n\r\n  static getSelfIntersectPoint(points) {\r\n    const numPoints = points.length;\r\n    if (numPoints <= 3) {\r\n      return null;\r\n    }\r\n    const vLast0 = points[numPoints - 2];\r\n    const vLast1 = points[numPoints - 1];\r\n    const limPoints = numPoints - 3;\r\n    for (let i = 0; i < limPoints; i++) {\r\n      const vLine0 = points[i + 0];\r\n      const vLine1 = points[i + 1];\r\n      const vIntersect = ToolArea.getLineIntersection(vLast0, vLast1, vLine0, vLine1);\r\n      if (vIntersect !== null) {\r\n        const objInter = {\r\n          m_vIntersection: vIntersect,\r\n          m_lineIndex: i\r\n        }\r\n        return objInter;\r\n      }\r\n    } // for (i) checked points in poly\r\n    // check dist to first\r\n    const dx = vLast1.x - points[0].x;\r\n    const dy = vLast1.y - points[0].y;\r\n    const MIN_DIST = 2.5;\r\n    const MIN_DIST_SQ = MIN_DIST * MIN_DIST;\r\n    if (dx * dx + dy * dy <= MIN_DIST_SQ) {\r\n      const vInter = {\r\n        x: vLast1.x,\r\n        y: vLast1.y,\r\n      };\r\n      const objInter = {\r\n        m_vIntersection: vInter,\r\n        m_lineIndex: 0\r\n      }\r\n      // console.log('getSelfIntersection: detect with start');\r\n      return objInter;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {object} vNew - new added point\r\n   * @param {array} points - array of polygon's points\r\n   * @return true, if polygon is finished\r\n   */\r\n  addPointToPolygon(vNew, points) {\r\n    const numPoints = points.length;\r\n    if (numPoints === 0) {\r\n      points.push(vNew);\r\n      return false;\r\n    }\r\n    const objInter = this.m_objSelfIntersect;\r\n    if (objInter !== null) {\r\n      const polyNew = [];\r\n      polyNew.push(objInter.m_vIntersection);\r\n      for (let i = objInter.m_lineIndex + 1; i < numPoints - 1; i++) {\r\n        const vAdd = {\r\n          x: points[i].x,\r\n          y: points[i].y\r\n        }\r\n        polyNew.push(vAdd);\r\n      }\r\n      // copy to points\r\n      points.length = polyNew.length;\r\n      for (let i = 0; i < polyNew.length; i++) {\r\n        points[i].x = polyNew[i].x;\r\n        points[i].y = polyNew[i].y;\r\n      }\r\n      this.m_objSelfIntersect = null;\r\n      return true;\r\n    } // if has some intersect point\r\n\r\n    // just add point to poly\r\n    points.push(vNew);\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {array} points - array of points (x,y) props\r\n   */\r\n  getPolyArea(points, store) {\r\n    const volSet = store.volumeSet;\r\n    const volIndex = store.volumeIndex;\r\n    const vol = volSet.getVolume(volIndex);\r\n\r\n    const xSize = vol.m_boxSize.x;\r\n    const ySize = vol.m_boxSize.y;\r\n    const zSize = vol.m_boxSize.z;\r\n    const mode2d = store.mode2d;\r\n    const xDim = vol.m_xDim;\r\n    const yDim = vol.m_yDim;\r\n    const zDim = vol.m_zDim;\r\n    // const zDim = vol.m_zDim;\r\n    let xScale = 0.0, yScale = 0.0;\r\n    if (mode2d === Modes2d.TRANSVERSE) {\r\n      // z const\r\n      xScale = xSize / xDim;\r\n      yScale = ySize / yDim;\r\n    } else if (mode2d === Modes2d.SAGGITAL) {\r\n      // x const\r\n      xScale = ySize / xDim;\r\n      // yScale = zSize / yDim;\r\n      yScale = zSize / zDim;\r\n    } else {\r\n      // y const\r\n      xScale = xSize / xDim;\r\n      // yScale = zSize / yDim;\r\n      yScale = zSize / zDim;\r\n    }\r\n\r\n    let area = 0.0;\r\n    const numPoints = points.length;\r\n    let j = numPoints - 1;\r\n    for (let i = 0; i < numPoints; i++) {\r\n      const vi = points[i];\r\n      const vj = points[j];\r\n      let areaTri = (vj.x + vi.x) * (vj.y - vi.y) * xScale * yScale;\r\n      areaTri = (areaTri > 0.0) ? areaTri : (-areaTri);\r\n      area += areaTri;\r\n      j = i;\r\n    }\r\n    return area * 0.5;\r\n  }\r\n\r\n  /**\r\n   * When mouse button is pressed\r\n   * \r\n   * @param {number} xScr - x screen coordinate\r\n   * @param {number} yScr - y screen coordinate\r\n   * @param {object} store  - global store with all app parameters\r\n   */\r\n  onMouseDown(xScr, yScr, store) {\r\n    const vTex = ToolDistance.screenToTexture(xScr, yScr, this.m_wScreen, this.m_hScreen, store);\r\n    if (!this.m_inCreateMode) {\r\n      this.m_inCreateMode = true;\r\n      // create new area\r\n      const v0 = {\r\n        x: vTex.x,\r\n        y: vTex.y,\r\n      }\r\n      const v1 = {\r\n        x: vTex.x,\r\n        y: vTex.y,\r\n      }\r\n      const objArea = {\r\n        m_isClosed: false,\r\n        m_points: [],\r\n        m_area: 0.0\r\n      };\r\n      objArea.m_points.push(v0);\r\n      objArea.m_points.push(v1);\r\n      this.m_areas.push(objArea);\r\n    } else {\r\n      // add new point to polygon\r\n      const vNew = {\r\n        x: vTex.x,\r\n        y: vTex.y\r\n      };\r\n      const numAreas = this.m_areas.length;\r\n      const objArea = this.m_areas[numAreas - 1];\r\n\r\n      const isFinished = this.addPointToPolygon(vNew, objArea.m_points);\r\n      if (isFinished) {\r\n        objArea.m_isClosed = true;\r\n        objArea.m_area = this.getPolyArea(objArea.m_points, store);\r\n        console.log(`ToolArea. area = ${objArea.m_area}`);\r\n        // prepare to new added polygon\r\n        this.m_inCreateMode = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When mouse is moved\r\n   * \r\n   * @param {number} xScr - x screen coordinate\r\n   * @param {number} yScr - y screen coordinate\r\n   * @param {object} store  - global store with all app parameters\r\n   */\r\n  onMouseMove(xScr, yScr, store) {\r\n    if (!this.m_inCreateMode) {\r\n      return;\r\n    }\r\n    const vTex = ToolDistance.screenToTexture(xScr, yScr, this.m_wScreen, this.m_hScreen, store);\r\n    // modify last point in last area\r\n    const numAreas = this.m_areas.length;\r\n    const objArea = this.m_areas[numAreas - 1];\r\n    const numPoints = objArea.m_points.length;\r\n    objArea.m_points[numPoints - 1].x = vTex.x;\r\n    objArea.m_points[numPoints - 1].y = vTex.y;\r\n    const pt = ToolArea.getSelfIntersectPoint(objArea.m_points);\r\n    this.m_objSelfIntersect = pt;\r\n    this.m_objGraphics2d.forceUpdate();\r\n  }\r\n\r\n  onMouseUp() { // ommited args: xScr, yScr, store\r\n  }\r\n\r\n  /**\r\n   * Render all areas on screen in 2d mode\r\n   * \r\n   * @param {object} ctx - html5 canvas context\r\n   * @param {object} store - global store with app parameters\r\n   */\r\n  render(ctx, store) {\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = 'yellow';\r\n    ctx.fillStyle = 'white';\r\n    const FONT_SZ = 16;\r\n    ctx.font = FONT_SZ.toString() + 'px Arial';\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'bottom';\r\n\r\n    // render possible self intersect point\r\n    if (this.m_objSelfIntersect !== null) {\r\n      const vTex = this.m_objSelfIntersect.m_vIntersection;\r\n      const vScr = ToolDistance.textureToScreen(vTex.x, vTex.y, this.m_wScreen, this.m_hScreen, store);\r\n      ctx.strokeStyle = 'red';\r\n      ctx.beginPath();\r\n      const RAD_CIRCLE = 5.0;\r\n      const M_PI = 3.1415926535;\r\n      const TWO = 2;\r\n      ctx.arc(vScr.x, vScr.y, RAD_CIRCLE, 0.0, TWO * M_PI);\r\n      ctx.stroke();\r\n\r\n    }\r\n\r\n    ctx.strokeStyle = 'yellow';\r\n    const numAreas = this.m_areas.length;\r\n    for (let a = 0; a < numAreas; a++) {\r\n      const objArea = this.m_areas[a];\r\n      const isClosed = objArea.m_isClosed;\r\n      const numPoints = (isClosed) ? (objArea.m_points.length + 1) : (objArea.m_points.length);\r\n      // console.log(`ToolArea. render ${numPoints} points in poly`);\r\n\r\n      // calc area centroid in screen\r\n      let xScrCenter = 0.0;\r\n      let yScrCenter = 0.0;\r\n\r\n      ctx.beginPath();\r\n      for (let i = 0; i < numPoints; i++) {\r\n        const iPoly = (i < objArea.m_points.length) ? (i) : 0;\r\n        const vTex0 = objArea.m_points[iPoly];\r\n        // console.log(`ToolArea. render point ${vTex0.x}, ${vTex0.y} `);\r\n        const vScr = ToolDistance.textureToScreen(vTex0.x, vTex0.y, this.m_wScreen, this.m_hScreen, store);\r\n        if (i === 0) {\r\n          ctx.moveTo(vScr.x, vScr.y);\r\n        } else {\r\n          ctx.lineTo(vScr.x, vScr.y);\r\n        }\r\n        xScrCenter += vScr.x;\r\n        yScrCenter += vScr.y;\r\n      } // for (i) all points in poly\r\n      ctx.stroke();\r\n\r\n      if (numPoints > 0) {\r\n        xScrCenter /= numPoints;\r\n        yScrCenter /= numPoints;\r\n      }\r\n\r\n      // draw area\r\n      if (isClosed) {\r\n        const strMsg = objArea.m_area.toFixed(2) + ' mm^2';\r\n        // const SHIFT_UP = 8;\r\n        //const vTex0 = objArea.m_points[0];\r\n        //const vs0 = ToolDistance.textureToScreen(vTex0.x, vTex0.y, this.m_wScreen, this.m_hScreen, store);\r\n        //const xText = vs0.x;\r\n        //const yText = vs0.y - SHIFT_UP;\r\n        // ctx.fillText(strMsg, xText, yText);\r\n\r\n        ctx.fillText(strMsg, xScrCenter, yScrCenter);\r\n      } // if this poly closed\r\n    } // for (a) all polys\r\n  }\r\n\r\n} // end class\r\nexport default ToolArea;\r\n","/**\r\n * @fileOverview ToolRect\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// **********************************************\r\n// Imports\r\n// **********************************************\r\n\r\nimport ToolDistance from './ToolDistance';\r\nimport Modes2d from '../../store/Modes2d';\r\n\r\n// **********************************************\r\n// Class\r\n// **********************************************\r\n\r\nclass ToolRect {\r\n  constructor(objGra) {\r\n    this.m_objGraphics2d = objGra;\r\n    this.m_wScreen = 0;\r\n    this.m_hScreen = 0;\r\n\r\n    this.m_rects = [];\r\n    this.m_inCreateMode = false;\r\n\r\n    this.m_xPixelSize = 0;\r\n    this.m_yPixelSize = 0;\r\n\r\n    this.m_store = null;\r\n    this.m_objEdit = null;\r\n\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n    this.render = this.render.bind(this);\r\n  }\r\n\r\n  setScreenDim(wScr, hScr) {\r\n    this.m_wScreen = wScr;\r\n    this.m_hScreen = hScr;\r\n  }\r\n\r\n  setPixelSize(xs, ys) {\r\n    this.m_xPixelSize = xs;\r\n    this.m_yPixelSize = ys;\r\n  }\r\n\r\n  clear() {\r\n    this.m_rects = [];\r\n    this.m_inCreateMode = false;\r\n  }\r\n\r\n  getDistMm(vs, ve) {\r\n    const dx = vs.x - ve.x;\r\n    const dy = vs.y - ve.y;\r\n    const dist = Math.sqrt(dx * dx * this.m_xPixelSize * this.m_xPixelSize +\r\n      dy * dy * this.m_yPixelSize * this.m_yPixelSize);\r\n    return dist;\r\n  }\r\n\r\n  /**\r\n   * Determine intersection with points in rect set.\r\n   * Input - screen coordinates of pick point\r\n   * Output - volume coordinate\r\n   *  \r\n   * @param {object} vScr - screen coordinates of pick\r\n   * @param {object} store - global store\r\n   */\r\n  getEditPoint(vScr, store) {\r\n    const numRects = this.m_rects.length;\r\n    for (let i = 0; i < numRects; i++) {\r\n      const objRect = this.m_rects[i];\r\n      const vScrMin = ToolDistance.textureToScreen(objRect.vMin.x, objRect.vMin.y, this.m_wScreen, this.m_hScreen, store);\r\n      const vScrMax = ToolDistance.textureToScreen(objRect.vMax.x, objRect.vMax.y, this.m_wScreen, this.m_hScreen, store);\r\n\r\n      const MIN_DIST = 4.0;\r\n      if (this.getDistMm(vScr, vScrMin) <= MIN_DIST) {\r\n        this.m_objEdit = objRect;\r\n        return objRect.vMin;\r\n      }\r\n      if (this.getDistMm(vScr, vScrMax) <= MIN_DIST) {\r\n        this.m_objEdit = objRect;\r\n        return objRect.vMax;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Move edited point into new pos\r\n   * \r\n   * @param {object} vVolOld \r\n   * @param {object} vVolNew \r\n   */\r\n  moveEditPoint(vVolOld, vVolNew) {\r\n    vVolOld.x = vVolNew.x;\r\n    vVolOld.y = vVolNew.y;\r\n    // update line len\r\n    this.getRectArea(this.m_objEdit, this.m_store);\r\n  }\r\n\r\n  /**\r\n   * Remove highlighted object\r\n   * \r\n   */\r\n  deleteObject() {\r\n    if (this.m_objEdit != null) {\r\n      const ind = this.m_rects.indexOf(this.m_objEdit);\r\n      if (ind >= 0) {\r\n        this.m_rects.splice(ind, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  getRectArea(objRect, store) {\r\n    const volSet = store.volumeSet;\r\n    const volIndex = store.volumeIndex;\r\n    const vol = volSet.getVolume(volIndex);\r\n                                          \r\n    const xSize = vol.m_boxSize.x;\r\n    const ySize = vol.m_boxSize.y;\r\n    const zSize = vol.m_boxSize.z;\r\n    const mode2d = store.mode2d;\r\n    const xDim = vol.m_xDim;\r\n    const yDim = vol.m_yDim;\r\n    const zDim = vol.m_zDim;\r\n    let xScale = 0.0, yScale = 0.0;\r\n    if (mode2d === Modes2d.TRANSVERSE) {\r\n      // z const\r\n      xScale = xSize / xDim;\r\n      yScale = ySize / yDim;\r\n    } else if (mode2d === Modes2d.SAGGITAL) {\r\n      // x const\r\n      xScale = ySize / xDim;\r\n      yScale = zSize / zDim;\r\n    } else {\r\n      // y const\r\n      xScale = xSize / xDim;\r\n      yScale = zSize / zDim;\r\n    }\r\n    const dx = Math.abs(objRect.vMax.x - objRect.vMin.x); \r\n    const dy = Math.abs(objRect.vMax.y - objRect.vMin.y); \r\n    objRect.area = xScale * yScale * dx * dy; \r\n  }\r\n\r\n  onMouseDown(xScr, yScr, store) {\r\n    this.m_store = store;\r\n    const vTex = ToolDistance.screenToTexture(xScr, yScr, this.m_wScreen, this.m_hScreen, store);\r\n    if (!this.m_inCreateMode)\r\n    {\r\n      this.m_inCreateMode = true;\r\n      // start add rect\r\n      const objRect = {\r\n        vMin: {\r\n          x: vTex.x,\r\n          y: vTex.y,\r\n        },\r\n        vMax: {\r\n          x: vTex.x,\r\n          y: vTex.y,\r\n        },\r\n        area: 0.0,\r\n      };\r\n      this.m_rects.push(objRect);\r\n    } else {\r\n      this.m_inCreateMode = false;\r\n    }\r\n  }\r\n\r\n  onMouseMove(xScr, yScr, store) {\r\n    if (this.m_inCreateMode) {\r\n      const vTex = ToolDistance.screenToTexture(xScr, yScr, this.m_wScreen, this.m_hScreen, store);\r\n      const numRects = this.m_rects.length;\r\n      const objRect = this.m_rects[numRects - 1];\r\n      objRect.vMax.x = vTex.x;\r\n      objRect.vMax.y = vTex.y;\r\n      this.getRectArea(objRect, store);\r\n      this.m_objGraphics2d.forceUpdate();\r\n    } // if in create rect mode\r\n  }\r\n\r\n  onMouseUp() { // ommitred args: xScr, yScr, store\r\n  }\r\n\r\n  /**\r\n   * Render all areas on screen in 2d mode\r\n   * \r\n   * @param {object} ctx - html5 canvas context\r\n   * @param {object} store - global store with app parameters\r\n   */\r\n  render(ctx, store) {\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = 'yellow';\r\n    ctx.fillStyle = 'white';\r\n    const FONT_SZ = 16;\r\n    ctx.font = FONT_SZ.toString() + 'px Arial';\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'bottom';\r\n\r\n    const numRects = this.m_rects.length;\r\n    for (let i = 0; i < numRects; i++) {\r\n      const objRect = this.m_rects[i];\r\n      const vTexMin = objRect.vMin;\r\n      const vTexMax = objRect.vMax;\r\n      const vScrMin = ToolDistance.textureToScreen(vTexMin.x, vTexMin.y, this.m_wScreen, this.m_hScreen, store);\r\n      const vScrMax = ToolDistance.textureToScreen(vTexMax.x, vTexMax.y, this.m_wScreen, this.m_hScreen, store);\r\n      ctx.beginPath();\r\n      ctx.moveTo(vScrMin.x, vScrMin.y);\r\n      ctx.lineTo(vScrMax.x, vScrMin.y);\r\n      ctx.lineTo(vScrMax.x, vScrMax.y);\r\n      ctx.lineTo(vScrMin.x, vScrMax.y);\r\n      ctx.lineTo(vScrMin.x, vScrMin.y);\r\n      ctx.stroke();\r\n      // draw text\r\n      const xText = Math.floor((vScrMin.x + vScrMax.x) * 0.5);\r\n      const yText = Math.floor((vScrMin.y + vScrMax.y) * 0.5);\r\n      const strMsg = objRect.area.toFixed(2) + ' mm^2';\r\n      ctx.fillText(strMsg, xText, yText);\r\n\r\n    } // for (i) all rects\r\n  } // end render\r\n} // end class ToolRect\r\n\r\nexport default ToolRect;\r\n","/**\r\n * @fileOverview ToolText\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// **********************************************\r\n// Imports\r\n// **********************************************\r\n\r\nimport ToolDistance from './ToolDistance';\r\n// import UiModalText from '../../ui/UiModalText';\r\n\r\n// **********************************************\r\n// Class\r\n// **********************************************\r\n\r\nclass ToolText {\r\n  constructor(objGra) {\r\n    this.m_objGraphics2d = objGra;\r\n    this.m_wScreen = 0;\r\n    this.m_hScreen = 0;\r\n\r\n    this.m_texts = [];\r\n    this.m_pointPressed = null;\r\n\r\n    this.m_objEdit = null;\r\n\r\n    this.m_xPixelSize = 0;\r\n    this.m_yPixelSize = 0;\r\n\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n    this.render = this.render.bind(this);\r\n    this.setText = this.setText.bind(this);\r\n  }\r\n\r\n  setScreenDim(wScr, hScr) {\r\n    this.m_wScreen = wScr;\r\n    this.m_hScreen = hScr;\r\n  }\r\n\r\n  setPixelSize(xs, ys) {\r\n    this.m_xPixelSize = xs;\r\n    this.m_yPixelSize = ys;\r\n  }\r\n\r\n  /**\r\n   * Determine intersection with points in all texts.\r\n   * Input - screen coordinates of pick point\r\n   * Output - volume coordinate\r\n   *  \r\n   * @param {object} vScr - screen coordinates of poick\r\n   * @param {object} store - global store\r\n   */\r\n  getEditPoint(vScr, store) {\r\n    const numTexts = this.m_texts.length;\r\n    for (let i = 0; i < numTexts; i++) {\r\n      const objText = this.m_texts[i];\r\n      const vScrProj = ToolDistance.textureToScreen(objText.point.x, objText.point.y, this.m_wScreen, this.m_hScreen, store);\r\n      const MIN_DIST = 4.0;\r\n      if (this.getDistMm(vScr, vScrProj) <= MIN_DIST) {\r\n        this.m_objEdit = objText;\r\n        return objText.point;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Move edited point into new pos\r\n   * \r\n   * @param {object} vVolOld \r\n   * @param {object} vVolNew \r\n   */\r\n  moveEditPoint(vVolOld, vVolNew) {\r\n    vVolOld.x = vVolNew.x;\r\n    vVolOld.y = vVolNew.y;\r\n    // update info about text\r\n  }\r\n\r\n  /**\r\n   * Remove highlighted object\r\n   * \r\n   */\r\n  deleteObject() {\r\n    if (this.m_objEdit != null) {\r\n      const ind = this.m_texts.indexOf(this.m_objEdit);\r\n      if (ind >= 0) {\r\n        this.m_texts.splice(ind, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  getDistMm(vs, ve) {\r\n    const dx = vs.x - ve.x;\r\n    const dy = vs.y - ve.y;\r\n    const dist = Math.sqrt(dx * dx * this.m_xPixelSize * this.m_xPixelSize +\r\n      dy * dy * this.m_yPixelSize * this.m_yPixelSize);\r\n    return dist;\r\n  }\r\n\r\n  setText(str) {\r\n    this.m_text = str;\r\n    console.log(`set text = ${str}`);\r\n    const objText = {\r\n      point: {\r\n        x: this.m_pointPressed.x,\r\n        y: this.m_pointPressed.y\r\n      },\r\n      text: str\r\n    };\r\n    this.m_texts.push(objText);\r\n    // invoke render\r\n    this.m_objGraphics2d.forceUpdate();\r\n  }\r\n\r\n  clear() {\r\n    this.m_texts = [];\r\n  }\r\n\r\n  /**\r\n   * When mouse pressed down\r\n   * \r\n   * @param {number} xScr - x coordinate of click on screen\r\n   * @param {number} yScr - y coordinate of click on screen\r\n   * @param {object} store - global storage\r\n   */  \r\n  onMouseDown(xScr, yScr, store) {\r\n    const vTex = ToolDistance.screenToTexture(xScr, yScr, this.m_wScreen, this.m_hScreen, store);\r\n    this.m_pointPressed = vTex;\r\n\r\n    const uiApp = store.uiApp;\r\n    uiApp.onShowModalText();\r\n  }\r\n\r\n  onMouseMove() { // args ommited: xScr, yScr, store\r\n  }\r\n\r\n  onMouseUp() { // args ommited: xScr, yScr, store\r\n  }\r\n\r\n  /**\r\n   * Render all areas on screen in 2d mode\r\n   * \r\n   * @param {object} ctx - html5 canvas context\r\n   * @param {object} store - global store with app parameters\r\n   */\r\n  render(ctx, store) {\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = 'yellow';\r\n    ctx.fillStyle = 'white';\r\n    const FONT_SZ = 16;\r\n    ctx.font = FONT_SZ.toString() + 'px Arial';\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'bottom';\r\n\r\n    const numTexts = this.m_texts.length;\r\n    for (let i = 0; i < numTexts; i++) {\r\n      const objText = this.m_texts[i];\r\n      const vTex = objText.point;\r\n      const vScr = ToolDistance.textureToScreen(vTex.x, vTex.y, this.m_wScreen, this.m_hScreen, store);\r\n      const strMsg = objText.text;\r\n      ctx.fillText(strMsg, vScr.x, vScr.y);\r\n    } // for (i)\r\n\r\n    /*\r\n    const numRects = this.m_rects.length;\r\n    for (let i = 0; i < numRects; i++) {\r\n      const objRect = this.m_rects[i];\r\n      const vTexMin = objRect.vMin;\r\n      const vTexMax = objRect.vMax;\r\n      const vScrMin = ToolDistance.textureToScreen(vTexMin.x, vTexMin.y, this.m_wScreen, this.m_hScreen, store);\r\n      const vScrMax = ToolDistance.textureToScreen(vTexMax.x, vTexMax.y, this.m_wScreen, this.m_hScreen, store);\r\n      ctx.beginPath();\r\n      ctx.moveTo(vScrMin.x, vScrMin.y);\r\n      ctx.lineTo(vScrMax.x, vScrMin.y);\r\n      ctx.lineTo(vScrMax.x, vScrMax.y);\r\n      ctx.lineTo(vScrMin.x, vScrMax.y);\r\n      ctx.lineTo(vScrMin.x, vScrMin.y);\r\n      ctx.stroke();\r\n      // draw text\r\n      const xText = Math.floor((vScrMin.x + vScrMax.x) * 0.5);\r\n      const yText = Math.floor((vScrMin.y + vScrMax.y) * 0.5);\r\n      const strMsg = objRect.area.toFixed(2) + ' mm^2';\r\n      ctx.fillText(strMsg, xText, yText);\r\n\r\n    } // for (i) all rects\r\n    */\r\n  } // end render\r\n} // end class ToolText\r\n\r\nexport default ToolText;\r\n","/**\r\n * @fileOverview ToolEdit\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// **********************************************\r\n// Imports\r\n// **********************************************\r\n\r\nimport ToolDistance from \"./ToolDistance\";\r\n\r\n// **********************************************\r\n// Class\r\n// **********************************************\r\n\r\nclass ToolEdit {\r\n  constructor(objGra) {\r\n    this.m_objGraphics2d = objGra;\r\n    this.m_wScreen = 0;\r\n    this.m_hScreen = 0;\r\n\r\n    this.m_xPixelSize = 0;\r\n    this.m_yPixelSize = 0;\r\n\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n    this.render = this.render.bind(this);\r\n\r\n    this.m_mousePressed = false;\r\n    this.m_pointTracked = null;\r\n    this.m_toolTracked = null;\r\n  }\r\n\r\n  setScreenDim(wScr, hScr) {\r\n    this.m_wScreen = wScr;\r\n    this.m_hScreen = hScr;\r\n  }\r\n\r\n  setPixelSize(xs, ys) {\r\n    this.m_xPixelSize = xs;\r\n    this.m_yPixelSize = ys;\r\n  }\r\n\r\n  clear() {\r\n    this.m_mousePressed = false;\r\n    this.m_pointTracked = null;\r\n    this.m_toolTracked = null;\r\n  }\r\n\r\n  /**\r\n   * When mouse pressed down\r\n   * \r\n   * @param {number} xScr - x coordinate of click on screen\r\n   * @param {number} yScr - y coordinate of click on screen\r\n   * @param {object} store - global storage\r\n   */  \r\n  onMouseDown() { // ommited args: xScr, yScr, store\r\n    this.m_mousePressed = true;\r\n  }\r\n\r\n  onMouseMove(xScr, yScr, store) {\r\n    if (!this.m_mousePressed) {\r\n      // fly mouse over objects on 2d screen\r\n      // const vTex = ToolDistance.screenToTexture(xScr, yScr, this.m_wScreen, this.m_hScreen, store);\r\n      const vScr = {\r\n        x: xScr, y: yScr\r\n      };\r\n\r\n      const toolDist = this.m_objGraphics2d.m_toolDistance;\r\n      const toolAngle = this.m_objGraphics2d.m_toolAngle;\r\n      const toolArea = this.m_objGraphics2d.m_toolArea;\r\n      const toolRect = this.m_objGraphics2d.m_toolRect;\r\n      const toolText = this.m_objGraphics2d.m_toolText;\r\n      const tools = [\r\n        toolDist, toolAngle, toolArea, toolRect, toolText\r\n      ];\r\n      const trackedBefore = (this.m_pointTracked !== null);\r\n      this.m_pointTracked = null;\r\n      const numTools = tools.length;\r\n      for (let i = 0; i < numTools; i++) {\r\n        const objTool = tools[i];\r\n        const vDetect = objTool.getEditPoint(vScr, store);\r\n        if (vDetect !== null) {\r\n          // console.log(`ToolEdit. point tracked: ${vDetect.x}, ${vDetect.y}`);\r\n          this.m_pointTracked = vDetect;\r\n          this.m_toolTracked = objTool;\r\n          break;\r\n        }\r\n      } // for i all tools\r\n      const trackedNow = (this.m_pointTracked !== null);\r\n      if (trackedNow || (trackedBefore && !trackedNow)) {\r\n        // invoke forced 2d render\r\n        this.m_objGraphics2d.forceUpdate();\r\n      }\r\n\r\n    } else {\r\n      if (this.m_pointTracked !== null) {\r\n        const vTexNew = ToolDistance.screenToTexture(xScr, yScr, this.m_wScreen, this.m_hScreen, store);\r\n        this.m_toolTracked.moveEditPoint(this.m_pointTracked, vTexNew);\r\n        // invoke forced 2d render\r\n        this.m_objGraphics2d.forceUpdate();\r\n      } // if we have tracked point\r\n    }\r\n  }\r\n\r\n  onMouseUp() { // ommited args : xScr, yScr, store\r\n    this.m_mousePressed = false;\r\n  }\r\n\r\n  /**\r\n   * Render all areas on screen in 2d mode\r\n   * \r\n   * @param {object} ctx - html5 canvas context\r\n   * @param {object} store - global store with app parameters\r\n   */\r\n  render(ctx, store) {\r\n    if (this.m_pointTracked !== null) {\r\n      const vScr = ToolDistance.textureToScreen(this.m_pointTracked.x, this.m_pointTracked.y, this.m_wScreen, this.m_hScreen, store);\r\n      const RAD_CIRCLE_EDIT = 4;\r\n      //ctx.lineWidth = 2;\r\n      //ctx.strokeStyle = 'green';\r\n      ctx.fillStyle = 'rgb(120, 250, 120)';\r\n      ctx.beginPath();\r\n      ctx.arc(vScr.x, vScr.y, RAD_CIRCLE_EDIT, 0.0, 2 * 3.1415962, false);\r\n      // ctx.stroke();\r\n      ctx.fill();\r\n    }\r\n  } // end render\r\n} // end class ToolText\r\n\r\nexport default ToolEdit;\r\n","/**\r\n * @fileOverview ToolDelete\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// **********************************************\r\n// Imports\r\n// **********************************************\r\n\r\nimport ToolDistance from './ToolDistance';\r\n\r\n// **********************************************\r\n// Class\r\n// **********************************************\r\n\r\nclass ToolDelete {\r\n  constructor(objGra) {\r\n    this.m_objGraphics2d = objGra;\r\n    this.m_wScreen = 0;\r\n    this.m_hScreen = 0;\r\n\r\n    this.m_xPixelSize = 0;\r\n    this.m_yPixelSize = 0;\r\n\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n    this.render = this.render.bind(this);\r\n\r\n    this.m_mousePressed = false;\r\n    this.m_pointTracked = null;\r\n    this.m_toolTracked = null;\r\n  }\r\n\r\n  setScreenDim(wScr, hScr) {\r\n    this.m_wScreen = wScr;\r\n    this.m_hScreen = hScr;\r\n  }\r\n\r\n  setPixelSize(xs, ys) {\r\n    this.m_xPixelSize = xs;\r\n    this.m_yPixelSize = ys;\r\n  }\r\n\r\n  clear() {\r\n    this.m_mousePressed = false;\r\n    this.m_pointTracked = null;\r\n    this.m_toolTracked = null;\r\n  }\r\n\r\n  /**\r\n   * When mouse pressed down\r\n   */  \r\n  onMouseDown() { // ommited args: xScr, yScr, store\r\n    this.m_mousePressed = true;\r\n\r\n    if (this.m_pointTracked !== null) {\r\n      this.m_toolTracked.deleteObject(this.m_pointTracked);\r\n      this.m_pointTracked = null;\r\n      // invoke forced 2d render\r\n      this.m_objGraphics2d.forceUpdate();\r\n    }\r\n  }\r\n\r\n  onMouseMove(xScr, yScr, store) {\r\n    if (!this.m_mousePressed) {\r\n      // fly mouse over objects on 2d screen\r\n      const vScr = {\r\n        x: xScr, y: yScr\r\n      };\r\n\r\n      const toolDist = this.m_objGraphics2d.m_toolDistance;\r\n      const toolAngle = this.m_objGraphics2d.m_toolAngle;\r\n      const toolArea = this.m_objGraphics2d.m_toolArea;\r\n      const toolRect = this.m_objGraphics2d.m_toolRect;\r\n      const toolText = this.m_objGraphics2d.m_toolText;\r\n      const tools = [\r\n        toolDist, toolAngle, toolArea, toolRect, toolText\r\n      ];\r\n      const trackedBefore = (this.m_pointTracked !== null);\r\n      this.m_pointTracked = null;\r\n      const numTools = tools.length;\r\n      for (let i = 0; i < numTools; i++) {\r\n        const objTool = tools[i];\r\n        const vDetect = objTool.getEditPoint(vScr, store);\r\n        if (vDetect !== null) {\r\n          // console.log(`ToolEdit. point tracked: ${vDetect.x}, ${vDetect.y}`);\r\n          this.m_pointTracked = vDetect;\r\n          this.m_toolTracked = objTool;\r\n          break;\r\n        }\r\n      } // for i all tools\r\n      const trackedNow = (this.m_pointTracked !== null);\r\n      if (trackedNow || (trackedBefore && !trackedNow)) {\r\n        // invoke forced 2d render\r\n        this.m_objGraphics2d.forceUpdate();\r\n      }\r\n\r\n    } else {\r\n      /*\r\n      if (this.m_pointTracked !== null) {\r\n        const vTexNew = ToolDistance.screenToTexture(xScr, yScr, this.m_wScreen, this.m_hScreen, store);\r\n        this.m_toolTracked.moveEditPoint(this.m_pointTracked, vTexNew);\r\n        // invoke forced 2d render\r\n        this.m_objGraphics2d.forceUpdate();\r\n      } // if we have tracked point\r\n      */\r\n    }\r\n  }\r\n\r\n  onMouseUp() { // ommited args: xScr, yScr, store\r\n    this.m_mousePressed = false;\r\n  }\r\n\r\n  /**\r\n   * Render all areas on screen in 2d mode\r\n   * \r\n   * @param {object} ctx - html5 canvas context\r\n   * @param {object} store - global store with app parameters\r\n   */\r\n  render(ctx, store) {\r\n    if (this.m_pointTracked !== null) {\r\n      const vScr = ToolDistance.textureToScreen(this.m_pointTracked.x, this.m_pointTracked.y, this.m_wScreen, this.m_hScreen, store);\r\n      const RAD_CIRCLE_EDIT = 4;\r\n      //ctx.lineWidth = 2;\r\n      //ctx.strokeStyle = 'green';\r\n      ctx.fillStyle = 'rgb(250, 120, 120)';\r\n      ctx.beginPath();\r\n      ctx.arc(vScr.x, vScr.y, RAD_CIRCLE_EDIT, 0.0, 2 * 3.1415962, false);\r\n      // ctx.stroke();\r\n      ctx.fill();\r\n    }\r\n  } // end render\r\n} // end class ToolText\r\n\r\nexport default ToolDelete;\r\n","/**\r\n * @fileOverview ToolTypes\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n \r\nconst Tools2dType = {\r\n  INTENSITY: 0,\r\n  DISTANCE: 1,\r\n  ANGLE: 2,\r\n  AREA: 3,\r\n  RECT: 4,\r\n  TEXT: 5,\r\n  EDIT: 6,\r\n  DELETE: 7,\r\n  CLEAR: 8,\r\n  ZOOM: 9,\r\n  DEFAULT: 10,\r\n  FILTER: 11,\r\n  NONE: 12,\r\n};\r\nexport default Tools2dType;\r\n","/**\r\n * @fileOverview Segm2d\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n// ********************************************************\r\n// Imports\r\n// ********************************************************\r\n\r\nimport * as tf from '@tensorflow/tfjs';\r\n\r\n// ********************************************************\r\n// Const\r\n// ********************************************************\r\n\r\n// where VGG_UNET ready model file located to download\r\n// this folder should contain following files:\r\n// - model.json: description of machine learning model koefficienst\r\n// - group1-shard1of12.bin: 1st binary koeeficient file\r\n// - group1-shard2of12.bin: 2nd binary koeeficient file\r\n// - ...\r\n// - group1-shard12of12.bin: last binary koeeficient file\r\n// - .htaccess: file to prevent CORS issue\r\n\r\nconst PATH_MODEL = 'http://lugachai.ru/med3web/tfjs/model.json';\r\n\r\n// stages\r\nconst STAGE_MODEL_NOT_LOADED = 0;\r\nconst STAGE_MODEL_IS_LOADING = 1;\r\nconst STAGE_MODEL_READY = 2;\r\nconst STAGE_IMAGE_PROCESSED = 3;\r\nconst STAGE_SEGMENTATION_READY = 4;\r\n// const STAGE_READY_NEXT_IMAGE = 5;\r\n\r\n\r\nconst OUT_W = 240;\r\nconst OUT_H = 160;\r\nconst NUM_CLASSES = 96;\r\n\r\n\r\n// ********************************************************\r\n// Class\r\n// ********************************************************\r\n\r\nclass Segm2d\r\n{\r\n  constructor(objGraphics2d) {\r\n    this.stage = STAGE_MODEL_NOT_LOADED;\r\n    this.objGraphics2d = objGraphics2d;\r\n    this.model = null;\r\n    this.tensorIndices = null;\r\n    this.imgData = null;\r\n    this.pixels = null;\r\n\r\n    // source image for segmentation\r\n    this.srcImageData = null;\r\n    this.wSrc = -1;\r\n    this.hSrc = -1;\r\n\r\n    this.onLoadModel = this.onLoadModel.bind(this);\r\n    this.startApplyImage = this.startApplyImage.bind(this);\r\n\r\n    this.m_needApplySegmentation = false;\r\n  }\r\n\r\n  // debug\r\n  printTensor(tensor, numValues = 64 * 3) {\r\n    console.log('tensor shape = ' + tensor.shape);\r\n    const tensorData = tensor.dataSync();\r\n    let strDebug = ''\r\n    for (let i = 0; i < numValues; i++) {\r\n      strDebug += tensorData[i].toString() + \", \";\r\n    }\r\n    console.log(\"tensor raw data = \" + strDebug);\r\n  }\r\n\r\n  // debug\r\n  printTensorIndices(tensor) {\r\n    const numCols = tensor.shape[1];\r\n    const numRows = tensor.shape[0];\r\n    const tensorData = tensor.dataSync();\r\n    console.log('Tensor indices');\r\n    let i = 0;\r\n    for (let y = 0; y < numRows; y++) {\r\n      let strOut = '';\r\n      for (let x = 0; x < numCols; x++) {\r\n        const val = tensorData[i++];\r\n        strOut += val.toString();\r\n      } // for (x)\r\n      console.log(strOut);\r\n    } // for (y)\r\n  }\r\n\r\n  scaleUp(pixelsSrcInt, wSrc, hSrc, pixelsDst, wDst, hDst) {\r\n    // float scales\r\n    const xScale = wSrc / wDst;\r\n    const yScale = hSrc / hDst;\r\n    let ySrcAcc = 0.0;\r\n    let iDst = 0;\r\n    for (let y = 0; y < hDst; y++, ySrcAcc += yScale) {\r\n      const ySrcBase = Math.floor(ySrcAcc);\r\n      const yRem = ySrcAcc - ySrcBase;\r\n      const ySrcInd = (yRem < 0.5) ? 0 : 1;\r\n      const ySrc = ySrcBase + ySrcInd;\r\n      const ySrcOff = ySrc * wSrc;\r\n\r\n      let xSrcAcc = 0.0;\r\n      for (let x = 0; x < wDst; x++, xSrcAcc += xScale) {\r\n        const xSrcBase = Math.floor(xSrcAcc);\r\n        const xRem = xSrcAcc - xSrcBase;\r\n        const xSrcInd = (xRem < 0.5) ? 0 : 1;\r\n        const xSrc = xSrcBase + xSrcInd;\r\n        pixelsDst[iDst++] = pixelsSrcInt[xSrc + ySrcOff];\r\n          \r\n      } // for (x)\r\n    } // for (y)\r\n  }\r\n\r\n  //\r\n  // Load model\r\n  async onLoadModel() {\r\n    this.stage = STAGE_MODEL_IS_LOADING;\r\n    this.pixels = null;\r\n\r\n    console.log('Loading tfjs model...');\r\n    const modelLoaded = await tf.loadLayersModel(PATH_MODEL, { strict: false } );\r\n\r\n    this.model = modelLoaded;\r\n    this.stage = STAGE_MODEL_READY;\r\n\r\n    // print success model loading\r\n    console.log(\"Model is loaded shape = \" + modelLoaded.output.shape);\r\n    //this.objGraphics2d.forceUpdate();\r\n    this.startApplyImage();\r\n  }\r\n\r\n  async startApplyImage() {\r\n    this.stage = STAGE_IMAGE_PROCESSED;\r\n    console.log(\"Start apply segm to image ...\");\r\n\r\n    // prepare tensor\r\n    const imgTensor = tf.browser.fromPixels(this.srcImageData).toFloat();\r\n    // this.printTensor(imgTensor);\r\n\r\n    // resize\r\n    const IN_W = 320;\r\n    const IN_H = 480;\r\n    const imgResized = imgTensor.resizeBilinear([IN_W, IN_H]);\r\n\r\n    // normalize to [-127..+127]\r\n    const mean = tf.tensor([123.0, 116.0, 103.0])\r\n    const imgNormalized = imgResized.sub(mean);\r\n\r\n    // reshape tensor => [1, 320, 480, 3]\r\n    const imgReshaped = imgNormalized.reshape([1, IN_W, IN_H, 3]); \r\n\r\n    // apply prediction\r\n    const prediction = this.model.predict(imgReshaped);\r\n    // this.printTensor(prediction, 150*3);\r\n\r\n    const outpTensor = prediction.as2D(OUT_W * OUT_H, NUM_CLASSES);\r\n    const outRes = outpTensor.reshape([OUT_H, OUT_W, NUM_CLASSES]);\r\n\r\n    // get argmax: replace vec float[96] with index of maximum element\r\n    const tensorPreData = outRes.dataSync();\r\n    this.tensorIndices = new tf.zeros([OUT_H, OUT_W], 'int32');\r\n    const tensorIndData = this.tensorIndices.dataSync();\r\n\r\n    let iSrc = 0;\r\n    let iDst = 0;\r\n\r\n    for (let y = 0; y < OUT_H; y++) {\r\n      for (let x = 0; x < OUT_W; x++) {\r\n        let bestIndex = -1;\r\n        let valMax = -0.1;\r\n        for (let i = 0; i < NUM_CLASSES; i++) {\r\n          if (tensorPreData[iSrc + i] > valMax) {\r\n            valMax = tensorPreData[iSrc + i];\r\n            bestIndex = i;\r\n          } // if\r\n        } // for (i)\r\n        tensorIndData[iDst] = bestIndex;\r\n        iSrc += NUM_CLASSES;\r\n        iDst += 1;\r\n      } // for (x)\r\n    } // for (y)\r\n\r\n    // debug print tesor indices\r\n    // this.printTensorIndices(this.tensorIndices, 200*3);\r\n\r\n    // scale up image with indices\r\n    const pixelsUpScale = new Uint8ClampedArray(this.wSrc * this.hSrc);\r\n    this.scaleUp(tensorIndData, OUT_W, OUT_H, pixelsUpScale, this.wSrc, this.hSrc);\r\n\r\n    // generate 96-colors palette\r\n    const palette = new Uint8ClampedArray(256 * 4);\r\n    let i, j;\r\n    i = 0; j = 0;\r\n    // fill 5 first elements by hand\r\n    palette[j++] = 0;\r\n    palette[j++] = 0;\r\n    palette[j++] = 255;\r\n    palette[j++] = 255;\r\n    i++;\r\n\r\n    palette[j++] = 0;\r\n    palette[j++] = 255;\r\n    palette[j++] = 0;\r\n    palette[j++] = 255;\r\n    i++;\r\n\r\n    palette[j++] = 255;\r\n    palette[j++] = 0;\r\n    palette[j++] = 0;\r\n    palette[j++] = 255;\r\n    i++;\r\n\r\n    palette[j++] = 255;\r\n    palette[j++] = 0;\r\n    palette[j++] = 255;\r\n    palette[j++] = 255;\r\n    i++;\r\n\r\n    palette[j++] = 64;\r\n    palette[j++] = 200;\r\n    palette[j++] = 255;\r\n    palette[j++] = 255;\r\n    i++;\r\n\r\n    for (; i < 256; i++, j += 4) {\r\n      palette[j + 0] = Math.floor(Math.random() * 255);\r\n      palette[j + 1] = Math.floor(Math.random() * 255);\r\n      palette[j + 2] = Math.floor(Math.random() * 255);\r\n      palette[j + 3] = 255;\r\n    }\r\n\r\n    // convert 96-classes output image into colors image\r\n    this.pixels = new Uint8ClampedArray(this.wSrc * this.hSrc * 4);\r\n    const pixels = this.pixels;\r\n\r\n    const w = this.wSrc;\r\n    const h = this.hSrc;\r\n\r\n    i = 0; j = 0;\r\n    for (let y = 0; y < h; y++) {\r\n      for (let x = 0; x < w; x++) {\r\n        const ind = pixelsUpScale[i];\r\n        pixels[j + 0] = palette[ind * 4 + 0];\r\n        pixels[j + 1] = palette[ind * 4 + 1];\r\n        pixels[j + 2] = palette[ind * 4 + 2];\r\n        pixels[j + 3] = 255;\r\n\r\n        i++; j += 4;\r\n      }\r\n    }\r\n\r\n    this.stage = STAGE_SEGMENTATION_READY;\r\n    console.log(\"Segm complete now \");\r\n\r\n    this.objGraphics2d.forceRender();\r\n  }\r\n\r\n  getStageString() {\r\n    const msgArr = [\r\n      'Wait. Model is not loaded', // const STAGE_MODEL_NOT_LOADED = 0;\r\n      'Wait. Model is loading ...',  // const STAGE_MODEL_IS_LOADING = 1;\r\n      'Model is ready', // const STAGE_MODEL_READY = 2;\r\n      'Image is processed ...',  // const STAGE_IMAGE_PROCESSED = 3;\r\n      'Segmentation is ready', // const STAGE_SEGMENTATION_READY = 4;\r\n    ];\r\n    const strMessage = msgArr[this.stage];\r\n    return strMessage;\r\n  }\r\n\r\n  setImageData(imgData) {\r\n    this.srcImageData = imgData;\r\n  }\r\n\r\n  render(ctx, w, h, imgData) {\r\n    this.srcImageData = imgData;\r\n    this.wSrc = w;\r\n    this.hSrc = h;\r\n\r\n    // debug\r\n    console.log('Segm2d render. VGG model ' + ((this.model === null) ? 'not loaded' : 'loaded') );\r\n    const strMessage = this.getStageString();\r\n    console.log('Segm2d render. stage = ' + strMessage );\r\n\r\n    /*\r\n    // load model\r\n    if (this.model === null) {\r\n      this.onLoadModel();\r\n    } else {\r\n      // change slider or similar: need to rebuild segm for the new source image\r\n      if (this.stage === STAGE_MODEL_READY) {\r\n        this.startApplyImage();\r\n        return;\r\n      }\r\n    } // if model non null\r\n    */\r\n    \r\n    if ((this.stage === STAGE_SEGMENTATION_READY) && (this.pixels !== null)) {\r\n      // draw pixels array on screen\r\n      this.imgData = ctx.createImageData(w, h);\r\n      const pixDst = this.imgData.data;\r\n      // this.imgData.data = this.pixels;\r\n      const numBytes = w * h * 4;\r\n      for (let i = 0; i < numBytes; i++) {\r\n        pixDst[i] = this.pixels[i];\r\n      }\r\n      ctx.putImageData(this.imgData, 0, 0);\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    // clear screen\r\n    ctx.fillStyle = 'rgb(64, 64, 64)';\r\n    ctx.fillRect(0,0, w, h);\r\n    // draw cross\r\n    ctx.strokeStyle = '#FF0000';\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 0);\r\n    ctx.lineTo(w - 1, h - 1);\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(w - 1 , 0);\r\n    ctx.lineTo(0, h - 1);\r\n    ctx.stroke();\r\n    // draw wait message\r\n    const strMsgPrint = this.getStageString();\r\n    ctx.font = '24px serif';\r\n    ctx.fillStyle = 'rgb(64, 255, 64)';\r\n    ctx.fillText(strMsgPrint, w / 2, h / 2);\r\n  }\r\n}\r\n\r\nexport default Segm2d;\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n'License'); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n/**\r\n* Nifti file loader\r\n* @module lib/scripts/loaders/roipalette\r\n*/\r\n\r\n// ******************************************************************\r\n// imports\r\n// ******************************************************************\r\n\r\n// ******************************************************************\r\n// Class\r\n// ******************************************************************\r\n\r\nexport default class RoiPalette {\r\n  /**\r\n  * Create loader\r\n  */\r\n  constructor() {\r\n    this.m_palette = [\r\n      {\r\n        'name': 'amygdala',\r\n        'roiColor': '0.247059 0.584314 0.270588 1',\r\n        'roiId': 139,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'amygdala',\r\n        'roiColor': '0.309804 0.929412 0.054902 1',\r\n        'roiId': 118,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'angular gyrus',\r\n        'roiColor': '0.686275 0.231373 0.152941 1',\r\n        'roiId': 19,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'angular gyrus',\r\n        'roiColor': '0.811765 0.486275 0.117647 1',\r\n        'roiId': 159,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'anterior limb of internal capsule',\r\n        'roiColor': '0.309804 0.203922 0.462745 1',\r\n        'roiId': 128,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'anterior limb of internal capsule',\r\n        'roiColor': '0.435294 0.733333 0.027451 1',\r\n        'roiId': 43,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'roiColor': '0.937255 0.94902 0.513725 1',\r\n        'roiId': 20,\r\n        'name': 'brain stem',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'caudate nucleus',\r\n        'roiColor': '0.74902 0.278431 0.141176 1',\r\n        'roiId': 53,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'caudate nucleus',\r\n        'roiColor': '0.184314 0.0745098 0.356863 1',\r\n        'roiId': 39,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'cerebellum',\r\n        'roiColor': '0.811765 0.458824 0.952941 1',\r\n        'roiId': 76,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'cerebellum',\r\n        'roiColor': '0.247059 0.113725 0.843137 1',\r\n        'roiId': 67,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'cingulate region',\r\n        'roiColor': '0.623529 0.45098 0.666667 1',\r\n        'roiId': 7,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'cingulate region',\r\n        'roiColor': '0.937255 0.631373 0.505882 1',\r\n        'roiId': 27,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'roiColor': '0.937255 0.301961 0.470588 1',\r\n        'roiId': 133,\r\n        'name': 'corpus callosum',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'cuneus',\r\n        'roiColor': '0.435294 0.513725 0.768627 1',\r\n        'roiId': 175,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'cuneus',\r\n        'roiColor': '0.937255 0.729412 0.192157 1',\r\n        'roiId': 54,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'fornix',\r\n        'roiColor': '0.937255 0.415686 0.847059 1',\r\n        'roiId': 254,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'fornix',\r\n        'roiColor': '0.811765 0.67451 0.980392 1',\r\n        'roiId': 29,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'roiColor': '0.247059 0.466667 0.105882 1',\r\n        'roiId': 233,\r\n        'name': 'fourth ventricle',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'frontal lobe WM',\r\n        'roiColor': '0.560784 0.290196 0.215686 1',\r\n        'roiId': 17,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'frontal lobe WM',\r\n        'roiColor': '0.498039 0.662745 0.101961 1',\r\n        'roiId': 30,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'globus palladus',\r\n        'roiColor': '0.0588235 0.843137 0.168627 1',\r\n        'roiId': 11,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'globus palladus',\r\n        'roiColor': '0.247059 0.74902 0.447059 1',\r\n        'roiId': 12,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'hippocampal formation',\r\n        'roiColor': '0.498039 0.709804 0.619608 1',\r\n        'roiId': 36,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'hippocampal formation',\r\n        'roiColor': '0.121569 0.4 0.972549 1',\r\n        'roiId': 101,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'inferior frontal gyrus',\r\n        'roiColor': '0.247059 0.85098 0.0666667 1',\r\n        'roiId': 75,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'inferior frontal gyrus',\r\n        'roiColor': '0.937255 0.662745 0.329412 1',\r\n        'roiId': 15,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'inferior occipital gyrus',\r\n        'roiColor': '0.0588235 0.643137 0.643137 1',\r\n        'roiId': 97,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'inferior occipital gyrus',\r\n        'roiColor': '0.247059 0.411765 0.568627 1',\r\n        'roiId': 37,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'inferior temporal gyrus',\r\n        'roiColor': '0.247059 0.00392157 0.796078 1',\r\n        'roiId': 140,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'inferior temporal gyrus',\r\n        'roiColor': '0.87451 0.819608 0.541176 1',\r\n        'roiId': 164,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'insula',\r\n        'roiColor': '0.623529 0.886275 0.356863 1',\r\n        'roiId': 4,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'insula',\r\n        'roiColor': '0.560784 0.698039 0.12549 1',\r\n        'roiId': 108,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'lateral front-orbital gyrus',\r\n        'roiColor': '0.435294 0.501961 0.203922 1',\r\n        'roiId': 6,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'lateral front-orbital gyrus',\r\n        'roiColor': '1 0.8 0.00784314 1',\r\n        'roiId': 90,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'lateral occipitotemporal gyrus',\r\n        'roiColor': '0.0588235 0.027451 0.470588 1',\r\n        'roiId': 99,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'lateral occipitotemporal gyrus',\r\n        'roiColor': '0.937255 0.101961 0.913725 1',\r\n        'roiId': 196,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'lateral ventricle',\r\n        'roiColor': '0.435294 0.176471 0.568627 1',\r\n        'roiId': 8,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'lateral ventricle',\r\n        'roiColor': '0.74902 0.764706 0.247059 1',\r\n        'roiId': 3,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'lingual gyrus',\r\n        'roiColor': '0.435294 0.458824 0.47451 1',\r\n        'roiId': 112,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'lingual gyrus',\r\n        'roiColor': '0.811765 0.0941176 0.301961 1',\r\n        'roiId': 69,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'medial front-orbital gyrus',\r\n        'roiColor': '0.87451 0.364706 0.384314 1',\r\n        'roiId': 1,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'medial front-orbital gyrus',\r\n        'roiColor': '0.811765 0.160784 0.247059 1',\r\n        'roiId': 85,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'medial frontal gyrus',\r\n        'roiColor': '0.435294 0.615686 0.0705882 1',\r\n        'roiId': 114,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'medial frontal gyrus',\r\n        'roiColor': '0.184314 0.372549 0.423529 1',\r\n        'roiId': 9,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'medial occipitotemporal gyrus',\r\n        'roiColor': '0.247059 0.368627 0.211765 1',\r\n        'roiId': 165,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'medial occipitotemporal gyrus',\r\n        'roiColor': '1 0.843137 0.254902 1',\r\n        'roiId': 119,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'middle frontal gyrus',\r\n        'roiColor': '0.623529 0.905882 0.113725 1',\r\n        'roiId': 2,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'middle frontal gyrus',\r\n        'roiColor': '0.686275 0.0901961 0.811765 1',\r\n        'roiId': 50,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'middle occipital gyrus',\r\n        'roiColor': '0.686275 0.933333 0.698039 1',\r\n        'roiId': 63,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'middle occipital gyrus',\r\n        'roiColor': '0.435294 0.0588235 0.964706 1',\r\n        'roiId': 154,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'middle temporal gyrus',\r\n        'roiColor': '0.937255 0.498039 0.67451 1',\r\n        'roiId': 130,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'middle temporal gyrus',\r\n        'roiColor': '0.498039 0.768627 0.439216 1',\r\n        'roiId': 64,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'nucleus accumbens',\r\n        'roiColor': '1 0.807843 0.529412 1',\r\n        'roiId': 25,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'nucleus accumbens',\r\n        'roiColor': '0.0588235 0.65098 0.0509804 1',\r\n        'roiId': 72,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'occipital lobe WM',\r\n        'roiColor': '0.0588235 0.368627 0.552941 1',\r\n        'roiId': 45,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'occipital lobe WM',\r\n        'roiColor': '0.0588235 0.639216 0.839216 1',\r\n        'roiId': 73,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'occipital pole',\r\n        'roiColor': '0.74902 0.494118 0.419608 1',\r\n        'roiId': 132,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'occipital pole',\r\n        'roiColor': '0.247059 0.807843 0.74902 1',\r\n        'roiId': 251,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'parahippocampal gyrus',\r\n        'roiColor': '0.121569 0.847059 0.00392157 1',\r\n        'roiId': 125,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'parahippocampal gyrus',\r\n        'roiColor': '0.247059 0.0705882 0.321569 1',\r\n        'roiId': 18,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'parietal lobe WM',\r\n        'roiColor': '1 0.4 0.223529 1',\r\n        'roiId': 105,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'parietal lobe WM',\r\n        'roiColor': '0.309804 0.678431 0.639216 1',\r\n        'roiId': 57,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'postcentral gyrus',\r\n        'roiColor': '0.560784 0.478431 0.2 1',\r\n        'roiId': 110,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'postcentral gyrus',\r\n        'roiColor': '0.498039 0.576471 0.027451 1',\r\n        'roiId': 74,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'posterior limb of internal capsule inc. cerebral peduncle',\r\n        'roiColor': '1 0.917647 0.576471 1',\r\n        'roiId': 35,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'posterior limb of internal capsule inc. cerebral peduncle',\r\n        'roiColor': '0.435294 0.490196 0.0784314 1',\r\n        'roiId': 34,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'precentral gyrus',\r\n        'roiColor': '0.184314 0.709804 0.615686 1',\r\n        'roiId': 5,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'precentral gyrus',\r\n        'roiColor': '0.87451 0.560784 1 1',\r\n        'roiId': 80,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'precuneus',\r\n        'roiColor': '1 0.654902 0.223529 1',\r\n        'roiId': 32,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'precuneus',\r\n        'roiColor': '1 0 0.211765 1',\r\n        'roiId': 56,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'putamen',\r\n        'roiColor': '1 0.831373 0.227451 1',\r\n        'roiId': 16,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'putamen',\r\n        'roiColor': '0.372549 0.678431 0.32549 1',\r\n        'roiId': 14,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'subthalamic nucleus',\r\n        'roiColor': '0.184314 0.545098 0.619608 1',\r\n        'roiId': 23,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'subthalamic nucleus',\r\n        'roiColor': '0.309804 0.686275 0.243137 1',\r\n        'roiId': 33,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'superior frontal gyrus',\r\n        'roiColor': '0.87451 0.380392 0.768627 1',\r\n        'roiId': 10,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'superior frontal gyrus',\r\n        'roiColor': '1 0.113725 0.396078 1',\r\n        'roiId': 70,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'superior occipital gyrus',\r\n        'roiColor': '0.372549 0.0431373 0.537255 1',\r\n        'roiId': 38,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'superior occipital gyrus',\r\n        'roiColor': '0.623529 0.301961 0.2 1',\r\n        'roiId': 98,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'superior parietal lobule',\r\n        'roiColor': '0.247059 0.843137 0.407843 1',\r\n        'roiId': 88,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'superior parietal lobule',\r\n        'roiColor': '0.87451 0.533333 0.254902 1',\r\n        'roiId': 52,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'superior temporal gyrus',\r\n        'roiColor': '0.498039 0.721569 0.996078 1',\r\n        'roiId': 145,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'superior temporal gyrus',\r\n        'roiColor': '1 0.67451 0.45098 1',\r\n        'roiId': 61,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'supramarginal gyrus',\r\n        'roiColor': '0.87451 0.45098 0.270588 1',\r\n        'roiId': 60,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'supramarginal gyrus',\r\n        'roiColor': '0.623529 0.0235294 0.654902 1',\r\n        'roiId': 41,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'temporal lobe WM',\r\n        'roiColor': '0.498039 0.603922 0.768627 1',\r\n        'roiId': 59,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'temporal lobe WM',\r\n        'roiColor': '0.87451 0.411765 0.368627 1',\r\n        'roiId': 83,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'thalamus',\r\n        'roiColor': '0.0588235 0.796078 0.866667 1',\r\n        'roiId': 203,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'thalamus',\r\n        'roiColor': '0.74902 0.984314 0.341176 1',\r\n        'roiId': 102,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'roiColor': '0.811765 0.258824 0.823529 1',\r\n        'roiId': 232,\r\n        'name': 'third ventricle',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'uncus',\r\n        'roiColor': '0.121569 0.352941 0.196078 1',\r\n        'roiId': 26,\r\n        'position': 'right',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'uncus',\r\n        'roiColor': '0.623529 0.117647 0.14902 1',\r\n        'roiId': 62,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'xxx_brain_internal',\r\n        'roiColor': '0.8 0.8 0.1 1',\r\n        'roiId': 150,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n      {\r\n        'name': 'xxx_brain_core',\r\n        'roiColor': '0.2 0.8 0.2 1',\r\n        'roiId': 250,\r\n        'position': 'left',\r\n        'isBrain': true,\r\n      },\r\n    ];\r\n    this.createBytePalette256();\r\n  }\r\n\r\n  /**\r\n  * Transform array of objects into uint32 color array with 256 entries\r\n  */\r\n  createBytePalette256() {\r\n    const PAL_SIZE = 256;\r\n    const MAX_PAL_COLOR = 255.0;\r\n    const BYTES_PER_COLOR = 4;\r\n    const OFFS_0 = 0;\r\n    const OFFS_1 = 1;\r\n    const OFFS_2 = 2;\r\n    const OFFS_3 = 3;\r\n    this.m_palette256 = new Uint8Array(PAL_SIZE * BYTES_PER_COLOR);\r\n    let i;\r\n    // init palette with black colors\r\n    for (i = 0; i < PAL_SIZE * BYTES_PER_COLOR; i++) {\r\n      this.m_palette256[i] = 0;\r\n    }\r\n    // load colors\r\n    const numPalColors = this.m_palette.length;\r\n    for (i = 0; i < numPalColors; i++) {\r\n      const strIndexPalette = this.m_palette[i].roiId;\r\n      const strColor = this.m_palette[i].roiColor;\r\n      const arrColor = strColor.split(' ');\r\n      const rCol = Math.floor(parseFloat(arrColor[OFFS_0]) * MAX_PAL_COLOR);\r\n      const gCol = Math.floor(parseFloat(arrColor[OFFS_1]) * MAX_PAL_COLOR);\r\n      const bCol = Math.floor(parseFloat(arrColor[OFFS_2]) * MAX_PAL_COLOR);\r\n      const aCol = 255;\r\n      const ind = parseInt(strIndexPalette, 10) * BYTES_PER_COLOR;\r\n      this.m_palette256[ind + OFFS_0] = rCol;\r\n      this.m_palette256[ind + OFFS_1] = gCol;\r\n      this.m_palette256[ind + OFFS_2] = bCol;\r\n      this.m_palette256[ind + OFFS_3] = aCol;\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Return palette array of objects\r\n  */\r\n  getPalette() {\r\n    return this.m_palette;\r\n  }\r\n\r\n  /**\r\n  * Return array of uints8 with 256 entries * 4\r\n  */\r\n  getPalette256() {\r\n    return this.m_palette256;\r\n  }\r\n}\r\n","/**\r\n * @fileOverview Graphics2d\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// ********************************************************\r\n// Imports\r\n// ********************************************************\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Modes2d from '../store/Modes2d';\r\nimport StoreActionType from '../store/ActionTypes';\r\nimport ToolPick from './tools2d/ToolPick';\r\nimport ToolZoom from './tools2d/ToolZoom';\r\nimport ToolDistance from './tools2d/ToolDistance';\r\nimport ToolClear from './tools2d/ToolClear';\r\nimport ToolAngle from './tools2d/ToolAngle';\r\nimport ToolArea from './tools2d/ToolArea';\r\nimport ToolRect from './tools2d/ToolRect';\r\nimport ToolText from './tools2d/ToolText';\r\nimport ToolEdit from './tools2d/ToolEdit';\r\nimport ToolDelete from './tools2d/ToolDelete';\r\n\r\nimport Tools2dType from './tools2d/ToolTypes';\r\nimport Segm2d  from './Segm2d';\r\n\r\nimport RoiPalette from './loaders/roipalette';\r\n\r\n// import { timingSafeEqual } from 'crypto';\r\n\r\n// ********************************************************\r\n// Const\r\n// ********************************************************\r\n\r\n// ********************************************************\r\n// Class\r\n// ********************************************************\r\n\r\n/**\r\n * Class Graphics2d some text later...\r\n */\r\nclass Graphics2d extends React.Component {\r\n  /**\r\n   * @param {object} props - props from up level object\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n    this.onMouseWheel = this.onMouseWheel.bind(this);\r\n\r\n    this.m_sliceRatio = 0.5;\r\n    this.m_mode2d = Modes2d.TRANSVERSE;\r\n\r\n    // scale\r\n    this.m_zoom = 1;\r\n    this.m_xPos = 0;\r\n    this.m_yPos = 0;\r\n    \r\n    // mounted\r\n    this.m_isMounted = false;\r\n\r\n    // animation\r\n    // this.animate = this.animate.bind(this);\r\n    // this.m_frameId = null;\r\n\r\n    // actual render window dimenison\r\n    this.state = {\r\n      wRender: 0,\r\n      hRender: 0,\r\n      stateMouseDown: false,\r\n      xMouse: -1,\r\n      yMouse: -1,\r\n    };\r\n    // segm 2d\r\n    this.segm2d = new Segm2d(this);\r\n    this.m_isSegmented = false;\r\n\r\n    // tools2d\r\n    this.m_toolPick = new ToolPick(this);\r\n    this.m_toolDistance = new ToolDistance(this);\r\n    this.m_toolZoom = new ToolZoom(this);\r\n    this.m_toolClear = new ToolClear(this);\r\n    this.m_toolAngle = new ToolAngle(this);\r\n    this.m_toolArea = new ToolArea(this);\r\n    this.m_toolRect = new ToolRect(this);\r\n    this.m_toolText = new ToolText(this);\r\n    this.m_toolEdit = new ToolEdit(this);\r\n    this.m_toolDelete = new ToolDelete(this);\r\n\r\n    // roi\r\n    this.m_roiPalette = new RoiPalette();\r\n\r\n    // store\r\n    const store = props;\r\n    store.dispatch({ type: StoreActionType.SET_GRAPHICS_2D, graphics2d: this });\r\n\r\n  }\r\n\r\n  /*\r\n  start() {\r\n    if (this.m_frameId === null) {\r\n      this.m_frameId = requestAnimationFrame(this.animate);\r\n    }\r\n  }\r\n  stop() {\r\n    cancelAnimationFrame(this.m_frameId);\r\n    this.m_frameId = null;\r\n  }\r\n  animate() {\r\n    // this.renderScene();\r\n    // this.m_frameId = window.requestAnimationFrame(this.animate);\r\n  }\r\n  */\r\n  componentDidMount() {\r\n    this.m_isMounted = true;\r\n    // this.start();\r\n    // this.renderScene();\r\n\r\n    this.prepareImageForRender();\r\n    this.renderReadyImage();\r\n\r\n\r\n    // detect actual render window dims\r\n    const w = this.m_mount.clientWidth;\r\n    const h = this.m_mount.clientHeight;\r\n    if (this.state.wRender === 0) {\r\n      this.setState({ wRender: w });\r\n      this.setState({ hRender: h });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.m_isMounted = false;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // this.prepareImageForRender();\r\n    if (this.m_isMounted) {\r\n      this.renderReadyImage();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get screenshot\r\n   * \r\n   * @param {nuimber} wShot - x size of screenshot\r\n   * @param {nuimber} hShot - y size of screenshot\r\n   */\r\n  screenshot(wShot, hShot) {\r\n    console.log(`get screenshot from 2d canvas: ${wShot}*${hShot}`);\r\n    const objCanvas = this.m_mount;\r\n    //const ctx = objCanvas.getContext('2d');\r\n    //const imageData = ctx.getImageData(0, 0, wShot, hShot);\r\n    //console.log(`image data: ${imageData}`);\r\n    const dataUrl = objCanvas.toDataURL();\r\n    return dataUrl;\r\n  }\r\n\r\n  /**\r\n   * Render text info about volume\r\n   * \r\n   * @param {object} ctx - render context\r\n   * @param {VolumeSet} volSet - volume set to rener\r\n   */\r\n  renderTextInfo(ctx, volSet, vol) {\r\n    let strMsg;\r\n    let xText = 4;\r\n    let yText = 4;\r\n    const FONT_SZ = 16;\r\n    ctx.font = FONT_SZ.toString() + 'px Arial';\r\n    ctx.textAlign = 'left';\r\n    ctx.textBaseline = 'top';\r\n    ctx.fillStyle = 'grey';\r\n\r\n    strMsg = 'volume dim = ' + vol.m_xDim.toString() + ' * ' + \r\n      vol.m_yDim.toString() + ' * ' + \r\n      vol.m_zDim.toString();\r\n    ctx.fillText(strMsg, xText, yText);\r\n    yText += FONT_SZ;\r\n\r\n    const xSize = Math.floor(vol.m_boxSize.x);\r\n    const ySize = Math.floor(vol.m_boxSize.y);\r\n    const zSize = Math.floor(vol.m_boxSize.z);\r\n    strMsg = 'vol phys size = ' + xSize.toString() + ' * ' + \r\n      ySize.toString() + ' * ' + \r\n      zSize.toString();\r\n    ctx.fillText(strMsg, xText, yText);\r\n    yText += FONT_SZ;\r\n\r\n    const patName = volSet.m_patientName;\r\n    if (patName.length > 1) {\r\n      strMsg = 'patient name = ' + patName; \r\n      ctx.fillText(strMsg, xText, yText);\r\n      yText += FONT_SZ;\r\n    }\r\n    const patBirth = volSet.m_patientBirth;\r\n    if (patBirth.length > 1) {\r\n      strMsg = 'patient birth = ' + patBirth;\r\n      ctx.fillText(strMsg, xText, yText);\r\n      yText += FONT_SZ;\r\n    }\r\n    const seriesDescr = volSet.m_seriesDescr;\r\n    if (seriesDescr.length > 1) {\r\n      strMsg = 'series descr = ' + seriesDescr;\r\n      ctx.fillText(strMsg, xText, yText);\r\n      yText += FONT_SZ;\r\n    }\r\n    const institutionName = volSet.m_institutionName;\r\n    if (institutionName.length > 1) {\r\n      strMsg = 'institution name = ' + institutionName;\r\n      ctx.fillText(strMsg, xText, yText);\r\n      yText += FONT_SZ;\r\n    }\r\n    const operatorsName = volSet.m_operatorsName;\r\n    if (operatorsName.length > 1) {\r\n      strMsg = 'operators name = ' + operatorsName;\r\n      ctx.fillText(strMsg, xText, yText);\r\n      yText += FONT_SZ;\r\n    }\r\n    const physicansName = volSet.m_physicansName;\r\n    if (physicansName.length > 1) {\r\n      strMsg = 'physicans name = ' + physicansName;\r\n      ctx.fillText(strMsg, xText, yText);\r\n      yText += FONT_SZ;\r\n    }\r\n      \r\n  }\r\n\r\n  prepareImageForRender(volIndexArg) {\r\n    // console.log('prepareImageForRender ...');\r\n    const objCanvas = this.m_mount;\r\n    if (objCanvas === null) {\r\n      return;\r\n    }\r\n    const ctx = objCanvas.getContext('2d');\r\n    const w = objCanvas.clientWidth;\r\n    const h = objCanvas.clientHeight;\r\n    if (w * h === 0) {\r\n      return;\r\n    }\r\n\r\n    const store = this.props;\r\n\r\n    ctx.fillStyle = 'rgb(64, 64, 64)';\r\n    ctx.fillRect(0,0, w, h);\r\n    // console.log(`render scene 2d. screen = ${w} * ${h}`);\r\n\r\n    // Test draw chessboard\r\n    const NEED_TEST_RAINBOW = false;\r\n    if (NEED_TEST_RAINBOW) {\r\n      const wImg = 800;\r\n      const hImg = 600;\r\n      const imgData = ctx.createImageData(wImg, hImg);\r\n      const dataDst = imgData.data;\r\n      let j = 0;\r\n      for (let y = 0; y < hImg; y++) {\r\n        for (let x = 0; x < wImg; x++) {\r\n          dataDst[j + 0] = Math.floor(255 * x / wImg);\r\n          dataDst[j + 1] = Math.floor(255 * y / hImg);\r\n          dataDst[j + 2] = 120;\r\n          dataDst[j + 3] = 255;\r\n          j += 4;\r\n        } // for (x)\r\n      } // for (y)\r\n      ctx.putImageData(imgData, 0, 0); \r\n    }\r\n\r\n    const volSet = store.volumeSet;\r\n    // const volIndex = this.m_volumeIndex;\r\n    const volIndex = (volIndexArg !== undefined) ? volIndexArg : store.volumeIndex;\r\n\r\n    const vol = volSet.getVolume(volIndex);\r\n    const mode2d = this.m_mode2d;\r\n    const sliceRatio = store.slider2d;\r\n\r\n    if (vol !== null) {\r\n      if (vol.m_dataArray === null) {\r\n        console.log('Graphics2d. Volume has no data array');\r\n        return;\r\n      }\r\n      const xDim = vol.m_xDim;\r\n      const yDim = vol.m_yDim;\r\n      const zDim = vol.m_zDim;\r\n      const xyDim = xDim * yDim;\r\n      const dataSrc = vol.m_dataArray; // 1 or 4 bytes array of pixels\r\n      if (dataSrc.length !== xDim * yDim * zDim * vol.m_bytesPerVoxel) {\r\n        console.log(`Bad src data len = ${dataSrc.length}, but expect ${xDim}*${yDim}*${zDim}`);\r\n      }\r\n\r\n      // console.log(`Graphics2d. prepareImageForRender. mode= ${mode2d}`);\r\n\r\n      const ONE = 1;\r\n      const FOUR = 4;\r\n      const OFF_3 = 3;\r\n\r\n      let imgData = null;\r\n      let dataDst = null;\r\n\r\n      const roiPal256 = this.m_roiPalette.getPalette256();\r\n\r\n      // determine actual render square (not w * h - viewport)\r\n      // calculate area using physical volume dimension\r\n      const TOO_SMALL = 1.0e-5;\r\n      const pbox = vol.m_boxSize;\r\n      if (pbox.x * pbox.y * pbox.z < TOO_SMALL) {\r\n        console.log(`Bad physical dimensions for rendered volume = ${pbox.x}*${pbox.y}*${pbox.z} `);\r\n      }\r\n      let wScreen = 0, hScreen = 0;\r\n\r\n      const xPos = store.render2dxPos;\r\n      const yPos = store.render2dyPos;\r\n      const zoom = store.render2dZoom;\r\n      // console.log(`Gra2d. RenderScene. zoom=${zoom}, xyPos=${xPos}, ${yPos}`);\r\n      if (mode2d === Modes2d.TRANSVERSE) {\r\n        // calc screen rect based on physics volume slice size (z slice)\r\n        const xyRratio = pbox.x / pbox.y;\r\n        wScreen = w;\r\n        hScreen = Math.floor(w / xyRratio);\r\n        if (hScreen > h) {\r\n          hScreen = h;\r\n          wScreen = Math.floor(h * xyRratio);\r\n          if (wScreen > w) {\r\n            console.log(`logic error! wScreen * hScreen = ${wScreen} * ${hScreen}`);\r\n          }\r\n        }\r\n        hScreen = (hScreen > 0) ? hScreen : 1;\r\n        // console.log(`gra2d. render: wScreen*hScreen = ${wScreen} * ${hScreen}, but w*h=${w}*${h} `);\r\n\r\n        this.m_toolPick.setScreenDim(wScreen, hScreen);\r\n        this.m_toolZoom.setScreenDim(wScreen, hScreen);\r\n        this.m_toolDistance.setScreenDim(wScreen, hScreen);\r\n        this.m_toolAngle.setScreenDim(wScreen, hScreen);\r\n        this.m_toolArea.setScreenDim(wScreen, hScreen);\r\n        this.m_toolRect.setScreenDim(wScreen, hScreen);\r\n        this.m_toolText.setScreenDim(wScreen, hScreen);\r\n        this.m_toolEdit.setScreenDim(wScreen, hScreen);\r\n        this.m_toolDelete.setScreenDim(wScreen, hScreen);\r\n\r\n        // setup pixel size for 2d tools\r\n        const xPixelSize = vol.m_boxSize.x / xDim;\r\n        const yPixelSize = vol.m_boxSize.y / yDim;\r\n        // console.log(`xyPixelSize = ${xPixelSize} * ${yPixelSize}`);\r\n        this.m_toolDistance.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolAngle.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolArea.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolRect.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolText.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolEdit.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolDelete.setPixelSize(xPixelSize, yPixelSize);\r\n\r\n        // create image data\r\n        imgData = ctx.createImageData(wScreen, hScreen);\r\n        dataDst = imgData.data;\r\n        if (dataDst.length !== wScreen * hScreen * 4) {\r\n          console.log(`Bad dst data len = ${dataDst.length}, but expect ${wScreen}*${hScreen}*4`);\r\n        }\r\n  \r\n        // z slice\r\n        let zSlice = Math.floor(zDim * sliceRatio);\r\n        zSlice = (zSlice < zDim) ? zSlice : (zDim - 1);\r\n        const zOff = zSlice * xyDim;\r\n        const xStep = zoom * xDim / wScreen;\r\n        const yStep = zoom * yDim / hScreen;\r\n        let j = 0;\r\n        let ay = yPos * yDim;\r\n        if (vol.m_bytesPerVoxel === ONE) {\r\n          for (let y = 0; y < hScreen; y++, ay += yStep) {\r\n            const ySrc = Math.floor(ay);\r\n            const yOff = ySrc * xDim;\r\n            let ax = xPos * xDim;\r\n            for (let x = 0; x < wScreen; x++, ax += xStep) {\r\n              const xSrc = Math.floor(ax);\r\n              const val = dataSrc[zOff + yOff + xSrc];\r\n              dataDst[j + 0] = val;\r\n              dataDst[j + 1] = val;\r\n              dataDst[j + 2] = val;\r\n              dataDst[j + 3] = 255; // opacity\r\n              j += 4;\r\n            } // for (x)\r\n          } // for (y)\r\n\r\n        } else if (vol.m_bytesPerVoxel === FOUR) {\r\n          for (let y = 0; y < hScreen; y++, ay += yStep) {\r\n            const ySrc = Math.floor(ay);\r\n            const yOff = ySrc * xDim;\r\n            let ax = xPos * xDim;\r\n            for (let x = 0; x < wScreen; x++, ax += xStep) {\r\n              const xSrc = Math.floor(ax);\r\n              const val = dataSrc[(zOff + yOff + xSrc) * FOUR + OFF_3];\r\n              const val4 = val * FOUR;\r\n              const rCol = roiPal256[val4 + 0];\r\n              const gCol = roiPal256[val4 + 1];\r\n              const bCol = roiPal256[val4 + 2];\r\n  \r\n              dataDst[j + 0] = bCol;\r\n              dataDst[j + 1] = gCol;\r\n              dataDst[j + 2] = rCol;\r\n              dataDst[j + 3] = 255;\r\n              j += 4;\r\n            } // for (x)\r\n          } // for (y)\r\n\r\n        } // if 4 bpp\r\n\r\n      } else if (mode2d === Modes2d.SAGGITAL) {\r\n        // calc screen rect based on physics volume slice size (x slice)\r\n        const yzRatio = pbox.y / pbox.z;\r\n        wScreen = w;\r\n        hScreen = Math.floor(w / yzRatio);\r\n        if (hScreen > h) {\r\n          hScreen = h;\r\n          wScreen = Math.floor(h * yzRatio);\r\n          if (wScreen > w) {\r\n            console.log(`logic error! wScreen * hScreen = ${wScreen} * ${hScreen}`);\r\n          }\r\n        }\r\n        hScreen = (hScreen > 0) ? hScreen : 1;\r\n        // console.log(`gra2d. render: wScreen*hScreen = ${wScreen} * ${hScreen}, but w*h=${w}*${h} `);\r\n\r\n        this.m_toolPick.setScreenDim(wScreen, hScreen);\r\n        this.m_toolZoom.setScreenDim(wScreen, hScreen);\r\n        this.m_toolDistance.setScreenDim(wScreen, hScreen);\r\n        this.m_toolAngle.setScreenDim(wScreen, hScreen);\r\n        this.m_toolArea.setScreenDim(wScreen, hScreen);\r\n        this.m_toolRect.setScreenDim(wScreen, hScreen);\r\n        this.m_toolText.setScreenDim(wScreen, hScreen);\r\n        this.m_toolEdit.setScreenDim(wScreen, hScreen);\r\n        this.m_toolDelete.setScreenDim(wScreen, hScreen);\r\n\r\n        // setup pixel size for 2d tools\r\n        const xPixelSize = vol.m_boxSize.y / yDim;\r\n        const yPixelSize = vol.m_boxSize.z / zDim;\r\n        // console.log(`xyPixelSize = ${xPixelSize} * ${yPixelSize}`);\r\n        this.m_toolDistance.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolAngle.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolArea.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolRect.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolText.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolEdit.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolDelete.setPixelSize(xPixelSize, yPixelSize);\r\n\r\n        // create image data\r\n        imgData = ctx.createImageData(wScreen, hScreen);\r\n        dataDst = imgData.data;\r\n        if (dataDst.length !== wScreen * hScreen * 4) {\r\n          console.log(`Bad dst data len = ${dataDst.length}, but expect ${wScreen}*${hScreen}*4`);\r\n        }\r\n\r\n        // x slice\r\n        let xSlice = Math.floor(xDim * sliceRatio);\r\n        xSlice = (xSlice < xDim) ? xSlice : (xDim - 1);\r\n\r\n        const yStep = zoom * yDim / wScreen;\r\n        const zStep = zoom * zDim / hScreen;\r\n        let j = 0;\r\n        let az = yPos * zDim;\r\n        if (vol.m_bytesPerVoxel === ONE) {\r\n          for (let y = 0; y < hScreen; y++, az += zStep) {\r\n            const zSrc = Math.floor(az);\r\n            const zOff = zSrc * xDim * yDim;\r\n            let ay = xPos * yDim;\r\n            for (let x = 0; x < wScreen; x++, ay += yStep) {\r\n              const ySrc = Math.floor(ay);\r\n              const yOff = ySrc * xDim;\r\n              const val = dataSrc[zOff + yOff + xSlice];\r\n\r\n              dataDst[j + 0] = val;\r\n              dataDst[j + 1] = val;\r\n              dataDst[j + 2] = val;\r\n              dataDst[j + 3] = 255; // opacity\r\n\r\n              j += 4;\r\n            } // for (x)\r\n          } // for (y)\r\n        } else if (vol.m_bytesPerVoxel === FOUR) {\r\n          for (let y = 0; y < hScreen; y++, az += zStep) {\r\n            const zSrc = Math.floor(az);\r\n            const zOff = zSrc * xDim * yDim;\r\n            let ay = xPos * yDim;\r\n            for (let x = 0; x < wScreen; x++, ay += yStep) {\r\n              const ySrc = Math.floor(ay);\r\n              const yOff = ySrc * xDim;\r\n              const val = dataSrc[(zOff + yOff + xSlice) * FOUR + OFF_3];\r\n              const val4 = val * FOUR;\r\n              const rCol = roiPal256[val4 + 0];\r\n              const gCol = roiPal256[val4 + 1];\r\n              const bCol = roiPal256[val4 + 2];\r\n\r\n              dataDst[j + 0] = bCol;\r\n              dataDst[j + 1] = gCol;\r\n              dataDst[j + 2] = rCol;\r\n              dataDst[j + 3] = 255; // opacity\r\n\r\n              j += 4;\r\n            } // for (x)\r\n          } // for (y)\r\n        } // if 4 bppp\r\n      } else if (mode2d === Modes2d.CORONAL) {\r\n        // calc screen rect based on physics volume slice size (y slice)\r\n        const xzRatio = pbox.x / pbox.z;\r\n        wScreen = w;\r\n        hScreen = Math.floor(w / xzRatio);\r\n        if (hScreen > h) {\r\n          hScreen = h;\r\n          wScreen = Math.floor(h * xzRatio);\r\n          if (wScreen > w) {\r\n            console.log(`logic error! wScreen * hScreen = ${wScreen} * ${hScreen}`);\r\n          }\r\n        }\r\n        hScreen = (hScreen > 0) ? hScreen : 1;\r\n        // console.log(`gra2d. render: wScreen*hScreen = ${wScreen} * ${hScreen}, but w*h=${w}*${h} `);\r\n\r\n        this.m_toolPick.setScreenDim(wScreen, hScreen);\r\n        this.m_toolZoom.setScreenDim(wScreen, hScreen);\r\n        this.m_toolDistance.setScreenDim(wScreen, hScreen);\r\n        this.m_toolAngle.setScreenDim(wScreen, hScreen);\r\n        this.m_toolArea.setScreenDim(wScreen, hScreen);\r\n        this.m_toolRect.setScreenDim(wScreen, hScreen);\r\n        this.m_toolText.setScreenDim(wScreen, hScreen);\r\n        this.m_toolEdit.setScreenDim(wScreen, hScreen);\r\n        this.m_toolDelete.setScreenDim(wScreen, hScreen);\r\n\r\n        // setup pixel size for 2d tools\r\n        const xPixelSize = vol.m_boxSize.x / xDim;\r\n        const yPixelSize = vol.m_boxSize.z / zDim;\r\n        // console.log(`xyPixelSize = ${xPixelSize} * ${yPixelSize}`);\r\n        this.m_toolDistance.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolAngle.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolArea.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolRect.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolText.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolEdit.setPixelSize(xPixelSize, yPixelSize);\r\n        this.m_toolDelete.setPixelSize(xPixelSize, yPixelSize);\r\n\r\n        // create image data\r\n        imgData = ctx.createImageData(wScreen, hScreen);\r\n        dataDst = imgData.data;\r\n        if (dataDst.length !== wScreen * hScreen * 4) {\r\n          console.log(`Bad dst data len = ${dataDst.length}, but expect ${wScreen}*${hScreen}*4`);\r\n        }\r\n\r\n        // y slice\r\n        let ySlice = Math.floor(yDim * sliceRatio);\r\n        ySlice = (ySlice < yDim) ? ySlice : (yDim - 1);\r\n        const yOff = ySlice * xDim;\r\n\r\n        const xStep = zoom * xDim / wScreen;\r\n        const zStep = zoom * zDim / hScreen;\r\n        let j = 0;\r\n        let az = yPos * zDim;\r\n        if (vol.m_bytesPerVoxel === ONE) {\r\n          for (let y = 0; y < hScreen; y++, az += zStep) {\r\n            const zSrc = Math.floor(az);\r\n            const zOff = zSrc * xDim * yDim;\r\n            let ax = xPos * xDim;\r\n            for (let x = 0; x < wScreen; x++, ax += xStep) {\r\n              const xSrc = Math.floor(ax);\r\n              const val = dataSrc[zOff + yOff + xSrc];\r\n\r\n              dataDst[j + 0] = val;\r\n              dataDst[j + 1] = val;\r\n              dataDst[j + 2] = val;\r\n              dataDst[j + 3] = 255; // opacity\r\n\r\n              j += 4;\r\n            } // for (x)\r\n          } // for (y)\r\n        } else if (vol.m_bytesPerVoxel === FOUR) {\r\n          for (let y = 0; y < hScreen; y++, az += zStep) {\r\n            const zSrc = Math.floor(az);\r\n            const zOff = zSrc * xDim * yDim;\r\n            let ax = xPos * xDim;\r\n            for (let x = 0; x < wScreen; x++, ax += xStep) {\r\n              const xSrc = Math.floor(ax);\r\n              const val = dataSrc[(zOff + yOff + xSrc) * FOUR + OFF_3];\r\n              const val4 = val * FOUR;\r\n              const rCol = roiPal256[val4 + 0];\r\n              const gCol = roiPal256[val4 + 1];\r\n              const bCol = roiPal256[val4 + 2];\r\n\r\n              dataDst[j + 0] = bCol;\r\n              dataDst[j + 1] = gCol;\r\n              dataDst[j + 2] = rCol;\r\n              dataDst[j + 3] = 255; // opacity\r\n\r\n              j += 4;\r\n            } // for (x)\r\n          } // for (y)\r\n        } // end if 4 bpp\r\n      }\r\n\r\n      // check is segmentation 2d mode is active\r\n      // const isSegm = store.graphics2dModeSegmentation;\r\n      // console.log(\"Segm2d mode = \" + isSegm);\r\n\r\n      this.imgData = imgData;\r\n      this.segm2d.setImageData(imgData);\r\n    } // if vol not null\r\n  } // prepareImageForRender\r\n\r\n  renderReadyImage() {\r\n    // console.log('renderReadyImage ...');\r\n    if (!this.m_isMounted) {\r\n      return;\r\n    }\r\n\r\n    const objCanvas = this.m_mount;\r\n    if (objCanvas === null) {\r\n      return;\r\n    }\r\n    const ctx = objCanvas.getContext('2d');\r\n    const store = this.props;\r\n\r\n    const volSet = store.volumeSet;\r\n    if (volSet.getNumVolumes() === 0) {\r\n      return;\r\n    }\r\n    const volIndex = store.volumeIndex;\r\n    const vol = volSet.getVolume(volIndex);\r\n    if (vol === null) {\r\n      return;\r\n    }\r\n\r\n    const isSegm = this.m_isSegmented;\r\n    if (isSegm) {\r\n      const w = this.m_toolPick.m_wScreen;\r\n      const h = this.m_toolPick.m_hScreen;\r\n      this.segm2d.render(ctx, w, h, this.imgData);\r\n    } else {\r\n      ctx.putImageData(this.imgData, 0, 0);\r\n    }\r\n    // render text info\r\n    this.renderTextInfo(ctx, volSet, vol);\r\n    // render all tools\r\n    this.m_toolPick.render(ctx);\r\n    this.m_toolDistance.render(ctx, store);\r\n    this.m_toolAngle.render(ctx, store);\r\n    this.m_toolArea.render(ctx, store);\r\n    this.m_toolRect.render(ctx, store);\r\n    this.m_toolText.render(ctx, store);\r\n    this.m_toolEdit.render(ctx, store);\r\n    this.m_toolDelete.render(ctx, store);\r\n  }\r\n\r\n  onMouseWheel(evt) {\r\n    const store = this.props;\r\n    const indexTools2d = store.indexTools2d;\r\n    if (indexTools2d === Tools2dType.ZOOM) {\r\n      this.m_toolZoom.onMouseWheel(store, evt);\r\n    }\r\n  }\r\n\r\n  onMouseUp(evt) {\r\n    const store = this.props;\r\n    const indexTools2d = store.indexTools2d;\r\n    if (indexTools2d === Tools2dType.ZOOM) {\r\n      this.m_toolZoom.onMouseUp();\r\n    }\r\n    if (indexTools2d === Tools2dType.DISTANCE) {\r\n      const store = this.props;\r\n      const box = this.m_mount.getBoundingClientRect();\r\n      const xScr = evt.clientX - box.left;\r\n      const yScr = evt.clientY - box.top;\r\n      this.m_toolDistance.onMouseUp(xScr, yScr, store);\r\n    }\r\n    if (indexTools2d === Tools2dType.ANGLE) {\r\n      const store = this.props;\r\n      const box = this.m_mount.getBoundingClientRect();\r\n      const xScr = evt.clientX - box.left;\r\n      const yScr = evt.clientY - box.top;\r\n      this.m_toolAngle.onMouseUp(xScr, yScr, store);\r\n    }\r\n    if (indexTools2d === Tools2dType.AREA) {\r\n      const store = this.props;\r\n      const box = this.m_mount.getBoundingClientRect();\r\n      const xScr = evt.clientX - box.left;\r\n      const yScr = evt.clientY - box.top;\r\n      this.m_toolArea.onMouseUp(xScr, yScr, store);\r\n    }\r\n    if (indexTools2d === Tools2dType.RECT) {\r\n      const store = this.props;\r\n      const box = this.m_mount.getBoundingClientRect();\r\n      const xScr = evt.clientX - box.left;\r\n      const yScr = evt.clientY - box.top;\r\n      this.m_toolRect.onMouseUp(xScr, yScr, store);\r\n    }\r\n    if (indexTools2d === Tools2dType.EDIT) {\r\n      const store = this.props;\r\n      const box = this.m_mount.getBoundingClientRect();\r\n      const xScr = evt.clientX - box.left;\r\n      const yScr = evt.clientY - box.top;\r\n      this.m_toolEdit.onMouseUp(xScr, yScr, store);\r\n    }\r\n    if (indexTools2d === Tools2dType.DELETE) {\r\n      const store = this.props;\r\n      const box = this.m_mount.getBoundingClientRect();\r\n      const xScr = evt.clientX - box.left;\r\n      const yScr = evt.clientY - box.top;\r\n      this.m_toolDelete.onMouseUp(xScr, yScr, store);\r\n    }\r\n  }\r\n\r\n  onMouseMove(evt) {\r\n    const store = this.props;\r\n    const indexTools2d = store.indexTools2d;\r\n    const box = this.m_mount.getBoundingClientRect();\r\n    const xContainer = evt.clientX - box.left;\r\n    const yContainer = evt.clientY - box.top;\r\n    const xScr = xContainer;\r\n    const yScr = yContainer;\r\n\r\n    if (indexTools2d === Tools2dType.ZOOM) {\r\n      this.m_toolZoom.onMouseMove(store, xScr, yScr);\r\n    }\r\n    if (indexTools2d === Tools2dType.DISTANCE) {\r\n      this.m_toolDistance.onMouseMove(xScr, yScr, store);\r\n    }\r\n    if (indexTools2d === Tools2dType.ANGLE) {\r\n      this.m_toolAngle.onMouseMove(xScr, yScr, store);\r\n    }\r\n    if (indexTools2d === Tools2dType.AREA) {\r\n      this.m_toolArea.onMouseMove(xScr, yScr, store);\r\n    }\r\n    if (indexTools2d === Tools2dType.RECT) {\r\n      this.m_toolRect.onMouseMove(xScr, yScr, store);\r\n    }\r\n    if (indexTools2d === Tools2dType.EDIT) {\r\n      this.m_toolEdit.onMouseMove(xScr, yScr, store);\r\n    }\r\n    if (indexTools2d === Tools2dType.DELETE) {\r\n      this.m_toolDelete.onMouseMove(xScr, yScr, store);\r\n    }\r\n  }\r\n\r\n  onMouseDown(evt) {\r\n    const box = this.m_mount.getBoundingClientRect();\r\n    const xContainer = evt.clientX - box.left;\r\n    const yContainer = evt.clientY - box.top;\r\n    const xScr = xContainer;\r\n    const yScr = yContainer;\r\n    // console.log(`onMouseDown. down = ${xScr}, ${yScr}`);\r\n\r\n    const store = this.props;\r\n    const indexTools2d = store.indexTools2d;\r\n    // console.log(`onMouseDown. tool index = ${indexTools2d}`);\r\n\r\n\r\n    switch (indexTools2d) {\r\n    case Tools2dType.INTENSITY:\r\n      this.m_toolPick.onMouseDown(xScr, yScr, store);\r\n      break;\r\n    case Tools2dType.DISTANCE:\r\n      this.m_toolDistance.onMouseDown(xScr, yScr, store);\r\n      break;\r\n    case Tools2dType.ZOOM:\r\n      this.m_toolZoom.onMouseDown(xScr, yScr);\r\n      break;\r\n    case Tools2dType.ANGLE:\r\n      this.m_toolAngle.onMouseDown(xScr, yScr, store);\r\n      break;\r\n    case Tools2dType.AREA:\r\n      this.m_toolArea.onMouseDown(xScr, yScr, store);\r\n      break;\r\n    case Tools2dType.RECT:\r\n      this.m_toolRect.onMouseDown(xScr, yScr, store);\r\n      break;\r\n    case Tools2dType.TEXT:\r\n      this.m_toolText.onMouseDown(xScr, yScr, store);\r\n      break;\r\n    case Tools2dType.EDIT:\r\n      this.m_toolEdit.onMouseDown(xScr, yScr, store);\r\n      break;\r\n    case Tools2dType.DELETE:\r\n      this.m_toolDelete.onMouseDown(xScr, yScr, store);\r\n      break;\r\n    default:\r\n      // not defined\r\n    } // switch\r\n    // force update\r\n    this.forceUpdate();\r\n  } // onMouseDown\r\n\r\n  /**\r\n   * Invoke clear all tools\r\n   */\r\n  clear() {\r\n    this.m_toolDistance.clear();\r\n    this.m_toolAngle.clear();\r\n    this.m_toolArea.clear();\r\n    this.m_toolRect.clear();\r\n    this.m_toolText.clear();\r\n    this.m_toolEdit.clear();\r\n    this.m_toolDelete.clear();\r\n  }\r\n\r\n  /**\r\n   * Invoke forced rendering, after some tool visual changes\r\n   */\r\n  forceUpdate(volIndex) {\r\n    // console.log('forceUpdate ...');\r\n    this.prepareImageForRender(volIndex);\r\n    // this.forceRender();\r\n    if (this.m_isSegmented) { // need to draw segmented image\r\n      if (this.segm2d.model !== null) {\r\n        // we have loaded model: applt it to image\r\n        this.segm2d.startApplyImage();\r\n      }\r\n    } else {\r\n      this.forceRender();\r\n    } // if not segmented image\r\n  }\r\n\r\n  forceRender() {\r\n    if (this.m_isMounted) {\r\n      // console.log('forceRender ...');\r\n      this.setState({ state: this.state });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Main component render func callback\r\n   */\r\n  render() {\r\n    // const store = this.props;\r\n    // const volSet = store.volumeSet;\r\n    this.m_sliceRatio = this.props.sliderValue;\r\n    this.m_mode2d = this.props.mode2d;\r\n\r\n    const styleObj = {\r\n      width: '100%',\r\n      height: '100%',\r\n    };\r\n\r\n    const jsxGrapNonSized = <canvas ref={ (mount) => {this.m_mount = mount} } style={styleObj} />\r\n    const jsxGrapSized = <canvas ref={ (mount) => {this.m_mount = mount} } width={this.state.wRender} height={this.state.hRender}\r\n      onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp} onMouseMove={this.onMouseMove} onWheel={this.onMouseWheel} />\r\n    const jsx = (this.state.wRender > 0) ? jsxGrapSized : jsxGrapNonSized;\r\n    return jsx;\r\n  }\r\n}\r\n\r\nexport default connect(store => store)(Graphics2d);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport Graphics2d from \"../engine/Graphics2d\";\r\n\r\nclass UiMain2d extends React.Component {\r\n  render() {\r\n    const MIN_HEIGHT = 882;\r\n    const strMinHeight = {\r\n      minHeight: MIN_HEIGHT.toString() + \"px\",\r\n    };\r\n\r\n    const jsxMain2d = (\r\n      <Container fluid=\"true\" style={{ height: \"100%\", minHeight: \"100%\" }}>\r\n        <Row>\r\n          <Col\r\n            xs\r\n            md\r\n            lg=\"12\"\r\n            style={{ height: \"100%\", position: \"relative\" }}\r\n          ></Col>\r\n          <Col lg={8} style={strMinHeight}>\r\n            <Graphics2d />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n\r\n    return jsxMain2d;\r\n  }\r\n}\r\n\r\nexport default connect((store) => store)(UiMain2d);\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n// import * as THREE from 'three';\r\n\r\n/**\r\n* OpenGL, WebGL renderer selector\r\n* @module lib/scripts/graphics3d/glselector\r\n*/\r\n\r\nexport default class GlSelector {\r\n  /** constructor: defines fields\r\n  * @constructor\r\n  */\r\n  constructor() {\r\n    this.m_useWebGL2 = undefined;\r\n  }\r\n\r\n  /** Create compatible canvas\r\n   *\r\n   */\r\n  createWebGLContext() {\r\n    this.canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\r\n    let context = this.canvas.getContext('webgl2');\r\n    this.m_useWebGL2 = 1;\r\n    if (context == null) {\r\n      console.log('WebGL 2 not supported, moving to webgl 1');\r\n      context = this.canvas.getContext('webgl');\r\n      this.m_useWebGL2 = 0;\r\n    } else {\r\n      console.log('WebGL 2 context created');\r\n    }\r\n    return context;\r\n  }\r\n\r\n  /** return canvas */\r\n  getCanvas() {\r\n    return this.canvas;\r\n  }\r\n\r\n  /** Create compatible canvas\r\n   *\r\n   */\r\n  useWebGL2() {\r\n    return this.m_useWebGL2;\r\n  }\r\n}\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Orbit control\r\n* @module lib/scripts/controls/orbitcontrol\r\n*/\r\n\r\n// ******************************************************************\r\n// imports\r\n// ******************************************************************\r\n\r\n// absoulte imports\r\nimport * as THREE from 'three';\r\n\r\n// import MaterialVlm from '../gfx/matvlm';\r\n\r\n// const CONTROL_CAMERA_MIN_ZOOM = 1.1;\r\nconst CONTROL_CAMERA_MIN_ZOOM = 0.3;\r\nconst CONTROL_CAMERA_MAX_ZOOM = 2.5;\r\nconst CONTROL_CAMERA_ROTATION_SPEED = 0.008;\r\nconst CONTROL_CAMERA_ZOOM_SPEED = 0.2;\r\n\r\n// ******************************************************************\r\n// class\r\n// ******************************************************************\r\n\r\n/** Class Graphics2d is used for simple debug style 2d render */\r\nexport default class OrbitControl {\r\n\r\n  /**\r\n  * Initialize render\r\n  * @return {Object} Intsance of this class (singleton)\r\n  */\r\n  constructor(domElem, camera, scene, mesh, meshRotationCallback) {\r\n    this.m_callback = meshRotationCallback;\r\n    this.m_mesh = mesh;\r\n    this.m_wireMesh = null;\r\n    this.m_camera = camera;\r\n    this.m_target = new THREE.Vector3(0, 0, 0);\r\n    this.m_scene = scene;\r\n    this.m_button = OrbitControl.EVENT_BUTTON_NA;\r\n    this.domElem = domElem;\r\n    this.m_pressedLeft = false;\r\n    this.m_pressedRight = false;\r\n    this.m_prevMouse = { x: -1, y: -1 };\r\n    this.m_prevTime = -1;\r\n    this.m_deltaTime = 0;\r\n    this.m_spherical = new THREE.Spherical();\r\n    this.m_sphericalDelta = new THREE.Spherical();\r\n    this.m_spherical.set(0, 0, 0);\r\n    this.m_sphericalDelta.set(0, 0, 0);\r\n    this.m_autoRotate = false;\r\n\r\n    this.m_minDistance = CONTROL_CAMERA_MIN_ZOOM;\r\n    this.m_maxDistance = CONTROL_CAMERA_MAX_ZOOM;\r\n\r\n    this.m_minAzimuthAngle = -Infinity; // radians\r\n    this.m_maxAzimuthAngle = Infinity; // radians\r\n    // How far you can orbit vertically, upper and lower limits.\r\n    // Range is 0 to Math.PI radians.\r\n    this.m_minPolarAngle = 0; // radians\r\n    // eslint-disable-next-line\r\n    this.m_maxPolarAngle = Math.PI * 2.0; // radians\r\n\r\n    // Set to true to enable damping (inertia)\r\n    // If damping is enabled, you must call controls.update() in your animation loop\r\n    this.m_enableDamping = false;\r\n    this.m_dampingFactor = 0.25;\r\n    //console.log(`Mouse container: ${this.m_container.offsetLeft}, ${this.m_container.offsetTop}`);\r\n    this.isEraserMode = false;\r\n  }\r\n\r\n  setEraserMode(isOn) {\r\n    this.isEraserMode = isOn;\r\n  }\r\n\r\n  setMesh(mesh) {\r\n    this.m_mesh = mesh;\r\n  }\r\n\r\n  setWireMesh(wireMesh) {\r\n    this.m_wireMesh = wireMesh;\r\n  }\r\n\r\n  setScene(scene) {\r\n    this.m_scene = scene;\r\n  }\r\n\r\n  getX(xx) {\r\n    return xx - this.domElem.offsetLeft;\r\n  }\r\n\r\n  getY(yy) {\r\n    return yy - this.domElem.offsetTop;\r\n  }\r\n\r\n  // updateTime(dx, dy, useCallback = true) {\r\n  updateTime(dx, dy) {\r\n    if (dx === 0 && dy === 0) {\r\n      return;\r\n    }\r\n    // time update\r\n    const curTimeMs = new Date().getTime();\r\n    this.m_prevTime = (this.m_prevTime > 0) ? this.m_prevTime : curTimeMs;\r\n    this.m_deltaTime = curTimeMs - this.m_prevTime;\r\n    this.m_prevTime = curTimeMs;\r\n    if (!this.m_mesh) {\r\n      return;\r\n    }\r\n\r\n    // this.m_mesh.rotation.y += dx * CONTROL_CAMERA_ROTATION_SPEED;\r\n    // this.m_mesh.rotation.x += dy * CONTROL_CAMERA_ROTATION_SPEED;\r\n\r\n    const rotationY = new THREE.Matrix4();\r\n    const rotationX = new THREE.Matrix4();\r\n    const matrix = new THREE.Matrix4();\r\n    const camDir = new THREE.Vector3();\r\n\r\n    camDir.copy(this.m_target).sub(this.m_camera.position).normalize();\r\n    rotationX.makeRotationAxis(this.m_camera.up, dx * CONTROL_CAMERA_ROTATION_SPEED);\r\n    rotationY.makeRotationAxis(camDir.cross(this.m_camera.up), dy * CONTROL_CAMERA_ROTATION_SPEED);\r\n    matrix.identity();\r\n    matrix.multiply(rotationX).multiply(rotationY).multiply(this.m_mesh.matrix);\r\n\r\n    this.m_mesh.rotation.setFromRotationMatrix(matrix);\r\n    if (this.m_wireMesh) {\r\n      matrix.identity();\r\n      matrix.multiply(rotationX).multiply(rotationY).multiply(this.m_wireMesh.matrix);\r\n      this.m_wireMesh.rotation.setFromRotationMatrix(matrix);\r\n    }\r\n    this.m_callback();\r\n  }\r\n\r\n  onMouseDown(xMouse, yMouse, ctrlKey) {\r\n    this.m_pressedLeft = true;\r\n    this.m_prevMouse = { x: xMouse, y: yMouse };\r\n    this.m_spherical.set(0, 0, 0);\r\n    this.m_sphericalDelta.set(0, 0, 0);\r\n    this.m_prevTime = new Date().getTime();// -1;\r\n    this.ctrlKey = ctrlKey;\r\n  }\r\n\r\n  onMouseUp() {\r\n    this.m_pressedLeft = false;\r\n    this.m_prevMouse.x = -1;\r\n    this.m_prevMouse.y = -1;\r\n  }\r\n\r\n  onMouseMove(x, y) {\r\n    if (this.m_prevMouse.x < 0) {\r\n      this.m_prevMouse.x = x;\r\n      this.m_prevMouse.y = y;\r\n    }\r\n    const dx = x - this.m_prevMouse.x;\r\n    const dy = y - this.m_prevMouse.y;\r\n    // const dx = 1;\r\n    // const dy = 0;\r\n    this.m_prevMouse.x = x;\r\n    this.m_prevMouse.y = y;\r\n\r\n    if (this.m_pressedLeft) {\r\n      this.updateTime(dx, dy);\r\n    }\r\n  }\r\n\r\n  /*addCallbacks() {\r\n    this.m_container.on('mousedown', (event) => {\r\n      event = event || window.event;\r\n      const buttonIndex = event.which - 1;\r\n      this.m_button = buttonIndex;\r\n      // const arrButtonNames = ['Left', 'Center', 'Right'];\r\n      // console.log(`Mouse down event: ${arrButtonNames[buttonIndex]}`);\r\n      if (buttonIndex === OrbitControl.EVENT_BUTTON_LEFT) {\r\n      //console.log(\"X,Y: \"+this.getX(event.clientX)+ \" \"+ this.getY(event.clientY));\r\n        if (this.isEraserMode && event.ctrlKey) {\r\n          return;\r\n        }\r\n        this.onMouseDown(this.getX(event.clientX), this.getY(event.clientY));\r\n        // this.m_pressedLeft = true;\r\n        // this.m_prevMouse = { x: this.getX(event.clientX), y: this.getY(event.clientY) };\r\n        // this.m_spherical.set(0, 0, 0);\r\n        // this.m_sphericalDelta.set(0, 0, 0);\r\n        // this.m_prevTime = new Date().getTime();// -1;\r\n      }\r\n    });\r\n\r\n    this.m_container.on('mouseup', (event) => {\r\n      event = event || window.event;\r\n      const buttonIndex = event.which - 1;\r\n      this.m_button = buttonIndex;\r\n      if (buttonIndex === OrbitControl.EVENT_BUTTON_LEFT) {\r\n        if (this.isEraserMode && event.ctrlKey) {\r\n          return;\r\n        }\r\n        this.onMouseUp();\r\n        // this.m_pressedLeft = false;\r\n        // this.m_prevMouse.x = -1;\r\n        // this.m_prevMouse.y = -1;\r\n      }\r\n    });\r\n\r\n    this.m_container.on('mousemove', (event) => {\r\n      const x = this.getX(event.clientX);\r\n      const y = this.getY(event.clientY);\r\n      // console.log(`mouse move event at ${x}, ${y}`);\r\n      if (this.isEraserMode && event.ctrlKey) {\r\n        return;\r\n      }\r\n      this.onMouseMove(x, y);\r\n    });\r\n\r\n    this.m_container.on('mousewheel', (event) => {\r\n      const e = window.event || event; // old IE support\r\n      const delta = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail)));\r\n      // console.log(`mouse wheel event . delta = ${delta}`);\r\n      this.onZoom(delta);\r\n    });\r\n\r\n    this.m_container.on('touchstart', (event) => {\r\n      if (event.touches.length === 1) {\r\n        const domElem = this.m_container.get(0);\r\n        const box = domElem.getBoundingClientRect();\r\n        const d = domElem.ownerDocument.documentElement;\r\n        const scrLeft = box.left + window.pageXOffset - d.clientLeft;\r\n        const scrTop = box.top + window.pageYOffset - d.clientTop;\r\n        this.onMouseDown(event.touches[0].pageX - scrLeft, event.touches[0].pageY - scrTop);\r\n        // console.log(`touchstart: ${this.m_prevMouse.x},${this.m_prevMouse.y}`);\r\n      }\r\n    });*/\r\n  /*eslint-disable no-unused-vars*/\r\n  /*\r\n    this.m_container.on('touchend', (event) => {\r\n      this.onMouseUp();\r\n    });*/\r\n  /*eslint-enable no-unused-vars*/\r\n  /*\r\n    this.m_container.on('touchmove', (event) => {\r\n      const domElem = this.m_container.get(0);\r\n      const box = domElem.getBoundingClientRect();\r\n      const d = domElem.ownerDocument.documentElement;\r\n      const scrLeft = box.left + window.pageXOffset - d.clientLeft;\r\n      const scrTop = box.top + window.pageYOffset - d.clientTop;\r\n      const x = event.touches[0].pageX - scrLeft;\r\n      const y = event.touches[0].pageY - scrTop;\r\n      this.onMouseMove(x, y);\r\n    });\r\n\r\n    this.m_container.on('DOMMouseScroll', (event) => {\r\n      const e = window.event || event; // old IE support\r\n      const delta = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail)));\r\n      // console.log(`mouse scroll event . delta = ${delta}`);\r\n      this.onZoom(delta);\r\n    });\r\n  } // addCallbacks\r\n  */\r\n  onZoom(delta) {\r\n    const step = delta * CONTROL_CAMERA_ZOOM_SPEED;\r\n    let camPos = this.m_camera.position.length();\r\n    // console.log(`camPos = ${camPos}`);\r\n    const camDir = this.m_camera.position.sub(this.m_target);\r\n    // console.log(`camDirOld = ${camDir.x}, ${camDir.y}, ${camDir.z}`);\r\n    camDir.normalize();\r\n    camPos += step;\r\n    // console.log(`camPosNew = ${camPos}`);\r\n    camPos = Math.max(camPos, CONTROL_CAMERA_MIN_ZOOM);\r\n    camPos = Math.min(camPos, CONTROL_CAMERA_MAX_ZOOM);\r\n    // console.log(`camPosNewFixed = ${camPos}`);\r\n    camDir.multiplyScalar(camPos);\r\n    // console.log(`camDirNew = ${camDir.x}, ${camDir.y}, ${camDir.z}`);\r\n    this.m_camera.position.set(camDir.x, camDir.y, camDir.z);\r\n    this.m_camera.lookAt(this.m_target);\r\n    this.m_camera.updateMatrixWorld();\r\n  }\r\n\r\n} // class\r\n\r\nOrbitControl.EVENT_BUTTON_NA = -1;\r\nOrbitControl.EVENT_BUTTON_LEFT = 0;\r\nOrbitControl.EVENT_BUTTON_CENTER = 1;\r\nOrbitControl.EVENT_BUTTON_RIGHT = 2;\r\n","export default __webpack_public_path__ + \"static/media/backface.3dc9d515.vert\";","export default __webpack_public_path__ + \"static/media/backface.84a75448.frag\";","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Backface material, used for cube backface rendering\r\n* @module lib/scripts/gfx/matbackface\r\n*/\r\n\r\n// ******************************************************************\r\n// imports\r\n// ******************************************************************\r\n\r\n// absoulte imports\r\nimport * as THREE from 'three';\r\n\r\nimport BACK_FACE_VERTEX_SHADER from '../shaders/backface.vert';\r\nimport BACK_FACE_FRAGMENT_SHADER from '../shaders/backface.frag';\r\n\r\n/** Class @class MaterialBF for volume backface rendering */\r\nexport default class MaterialBF {\r\n  /** Backface material constructor\r\n  * @constructor\r\n  */\r\n  constructor() {\r\n    this.m_strShaderVertex = '';\r\n    this.m_strShaderFragment = '';\r\n  }\r\n\r\n  /** Backface material constructor\r\n  * @return {object} Three.js material with this shader\r\n  */\r\n  create(callbackMat) {\r\n    // Init uniforms\r\n\r\n    // create shader loaders\r\n    const vertexLoader = new THREE.FileLoader(THREE.DefaultLoadingManager);\r\n    vertexLoader.setResponseType('text');\r\n    const fragmentLoader = new THREE.FileLoader(THREE.DefaultLoadingManager);\r\n    fragmentLoader.setResponseType('text');\r\n\r\n    vertexLoader.load(BACK_FACE_VERTEX_SHADER, (strVertexSh) => {\r\n      this.m_strShaderVertex = strVertexSh;\r\n      // console.log(`Load callback success. text = : ${strVertexSh} ...`);\r\n      fragmentLoader.load(BACK_FACE_FRAGMENT_SHADER, (strFragmentSh) => {\r\n        this.m_strShaderFragment = strFragmentSh;\r\n\r\n        // log\r\n        // {\r\n        //   const strLoaded = JSON.stringify(this.m_strShaderVertex);\r\n        //   console.log(`Readed vertex shader is: ${strLoaded} ...`);\r\n        // }\r\n\r\n        const material = new THREE.ShaderMaterial({\r\n          vertexShader: this.m_strShaderVertex,\r\n          fragmentShader: this.m_strShaderFragment,\r\n          side: THREE.BackSide,\r\n          depthTest: true,\r\n          depthFunc: THREE.GreaterEqualDepth,\r\n          blending: THREE.NoBlending,\r\n        });\r\n        if (callbackMat) {\r\n          callbackMat(material);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/frontface.6197e7b1.vert\";","export default __webpack_public_path__ + \"static/media/frontface.7ecf0644.frag\";","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Frontface material, used for cube frontface rendering\r\n* @module lib/scripts/gfx/matfrontface\r\n*/\r\n\r\n// ******************************************************************\r\n// imports\r\n// ******************************************************************\r\n\r\n// absoulte imports\r\nimport * as THREE from 'three';\r\nimport FRONT_FACE_VERTEX_SHADER from '../shaders/frontface.vert'\r\nimport FRONT_FACE_FRAGMENT_SHADER from '../shaders/frontface.frag'\r\n\r\n\r\n/** Class @class MaterialFF for volume frontface rendering */\r\nexport default class MaterialFF {\r\n  /** Frontface material constructor\r\n  * @constructor\r\n  */\r\n  constructor() {\r\n    this.m_strShaderVertex = '';\r\n    this.m_strShaderFragment = '';\r\n    this.m_uniforms = {\r\n      texBF: { type: 't', value: null },\r\n      PlaneX: { type: 'v4', value: new THREE.Vector4(-1.0, 0.0, 0.0, 0.5) },\r\n      PlaneY: { type: 'v4', value: new THREE.Vector4(0.0, -1.0, 0.0, 0.5) },\r\n      PlaneZ: { type: 'v4', value: new THREE.Vector4(0.0, 0.0, -1.0, 0.5) },\r\n    };\r\n  }\r\n\r\n  /** Frontface material constructor\r\n  * @return {object} Three.js material with this shader\r\n  */\r\n  create(textureBF, callbackMat) {\r\n    // Init uniforms    \r\n    this.m_uniforms.texBF.value = textureBF;\r\n    // create shader loaders\r\n    const vertexLoader = new THREE.FileLoader(THREE.DefaultLoadingManager);\r\n    vertexLoader.setResponseType('text');\r\n    const fragmentLoader = new THREE.FileLoader(THREE.DefaultLoadingManager);\r\n    fragmentLoader.setResponseType('text');\r\n    vertexLoader.load(FRONT_FACE_VERTEX_SHADER, (strVertexSh) => {\r\n      this.m_strShaderVertex = strVertexSh;\r\n      //console.log(`Load callback success. text = : ${strVertexSh} ...`);\r\n      fragmentLoader.load(FRONT_FACE_FRAGMENT_SHADER, (strFragmentSh) => {\r\n        this.m_strShaderFragment = strFragmentSh;\r\n\r\n        const NEED_LOG = false;\r\n        if (NEED_LOG) {\r\n          const strLoadedVert = JSON.stringify(this.m_strShaderVertex);\r\n          console.log(`Readed vertex shader is: ${strLoadedVert} ...`);\r\n          const strLoadedFrag = JSON.stringify(this.m_strShaderFragment);\r\n          console.log(`Readed fragment shader is: ${strLoadedFrag} ...`);\r\n        }\r\n        const material = new THREE.ShaderMaterial({\r\n          uniforms: this.m_uniforms,\r\n          vertexShader: this.m_strShaderVertex,\r\n          fragmentShader: this.m_strShaderFragment,\r\n          side: THREE.FrontSide,\r\n          depthTest: true,\r\n          depthFunc: THREE.LessEqualDepth,\r\n          blending: THREE.NoBlending,\r\n        });\r\n        if (callbackMat) {\r\n          callbackMat(material);\r\n        }\r\n      },\r\n      /*(strFragmentSh) => {},*/\r\n      (e) => {\r\n        console.log(\"Shader load failed! because of error \" + e.target.status + \", \" + e.target.statusText);\r\n      });\r\n    });\r\n  }\r\n}\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Material to enable back/front face culling with wireframe geom\r\n* @module lib/scripts/gfx/matwireframecull\r\n*/\r\n\r\n// ******************************************************************\r\n// imports\r\n// ******************************************************************\r\n\r\n// absoulte imports\r\nimport * as THREE from 'three';\r\n\r\n/** Class @class MaterialWC back/front face culling with wireframe rendering */\r\nexport default class MaterialWC {\r\n\r\n  /** Wireframe material constructor\r\n  * @constructor\r\n  */\r\n  constructor() {\r\n    this.m_strShaderVertex = '';\r\n    this.m_strShaderFragment = '';\r\n    this.m_defines = {\r\n      backCullMode: 1,\r\n    };\r\n    this.m_uniforms = {\r\n      texBF: { type: 't', value: null },\r\n      texFF: { type: 't', value: null },\r\n    };\r\n  }\r\n\r\n  /** Wireframe material constructor\r\n  * @return {object} Three.js material with this shader\r\n  */\r\n  create(textureBF, textureFF) {\r\n    // Init uniforms\r\n    this.m_uniforms.texBF.value = textureBF;\r\n    this.m_uniforms.texFF.value = textureFF;\r\n\r\n    this.m_strShaderVertex = `\r\n      varying vec3 pos;\r\n      attribute vec3 uvw;\r\n      varying vec4 screenpos;\r\n      void main() {\r\n        pos = uvw;\r\n        screenpos = (projectionMatrix  * modelViewMatrix * vec4(position, 1.0));\r\n        gl_Position =  screenpos;\r\n      }\r\n    `;\r\n    this.m_strShaderFragment = `\r\n      precision highp float;\r\n      precision highp int;\r\n      uniform sampler2D texFF;\r\n      uniform sampler2D texBF;\r\n\r\n      varying vec3 pos;\r\n      varying vec4 screenpos;\r\n      void main() {\r\n      vec2 tc = screenpos.xy / screenpos.w * 0.5 + 0.5;\r\n      vec3 back  = texture2D(texBF, tc, 0.0).xyz;\r\n      vec3 front = texture2D(texFF, tc, 0.0).xyz;\r\n      float cullvalue = length(pos - back) - length(front - back);\r\n\r\n\r\n      #if backCullMode == 1\r\n        if (cullvalue < -0.001)\r\n          discard;\r\n      #endif\r\n      #if backCullMode == 0\r\n        if (cullvalue > 0.001)\r\n          discard;\r\n      #endif\r\n\r\n        gl_FragColor = vec4(0.5, 0.0, 1.0, 1.0);\r\n        //gl_FragColor = vec4(cullvalue, cullvalue, cullvalue, 1.0);\r\n        //gl_FragColor = vec4(front, 1.0);\r\n      }\r\n    `;\r\n    const material = new THREE.ShaderMaterial({\r\n      uniforms: this.m_uniforms,\r\n      defines: this.m_defines,\r\n      vertexShader: this.m_strShaderVertex,\r\n      fragmentShader: this.m_strShaderFragment,\r\n      side: THREE.FrontSide,\r\n      wireframe: true,\r\n      depthTest: false,\r\n      polygonOffset: false,\r\n      polygonOffsetFactor: -4.0,\r\n      polygonOffsetUnits: -4.0,\r\n    });\r\n    return material;\r\n  }\r\n}\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Material to map texture using screen positions of the fragments\r\n* @module lib/scripts/gfx/matscreentexmapping\r\n*/\r\n\r\n// ******************************************************************\r\n// imports\r\n// ******************************************************************\r\n\r\n// absoulte imports\r\nimport * as THREE from 'three';\r\n\r\n/** Class @class MaterialScreenTexMap to aux backface texture rendering for the\r\n *  frontface geometry to avoid z-fighting\r\n */\r\nexport default class MaterialScreenTexMap {\r\n  /** Wireframe material constructor\r\n  * @constructor\r\n  */\r\n  constructor() {\r\n    this.m_strShaderVertex = '';\r\n    this.m_strShaderFragment = '';\r\n\r\n    this.m_uniforms = {\r\n      texBuffer: { type: 't', value: null },\r\n    };\r\n  }\r\n\r\n  /** material constructor\r\n  * @return {object} Three.js material with this shader\r\n  */\r\n  create(texBuffer) {\r\n    // Init uniforms\r\n    this.m_uniforms.texBuffer.value = texBuffer;\r\n    this.m_strShaderVertex = `\r\n      varying vec4 screenpos;\r\n      void main() {\r\n        screenpos = (projectionMatrix  * modelViewMatrix * vec4(position, 1.0));\r\n        gl_Position =  screenpos;\r\n      }\r\n    `;\r\n    this.m_strShaderFragment = `\r\n      precision highp float;\r\n      precision highp int;\r\n      uniform sampler2D texBuffer;\r\n\r\n      varying vec4 screenpos;\r\n      void main() {\r\n        vec2 tc = screenpos.xy / screenpos.w * 0.5 + 0.5;\r\n        gl_FragColor = texture2D(texBuffer, tc, 0.0);\r\n      }\r\n    `;\r\n    const material = new THREE.ShaderMaterial({\r\n      uniforms: this.m_uniforms,\r\n      vertexShader: this.m_strShaderVertex,\r\n      fragmentShader: this.m_strShaderFragment,\r\n      side: THREE.FrontSide,\r\n      depthTest: true,\r\n      depthFunc: THREE.LessEqualDepth,\r\n      blending: THREE.NoBlending,\r\n    });\r\n    return material;\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/clipplane.7ba65be0.vert\";","export default __webpack_public_path__ + \"static/media/clipplane.d594e568.frag\";","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Clipping plane material, used for rendering of near camera plane as a part ray-casting pipeline\r\n* @module lib/scripts/gfx/matcliplane\r\n*/\r\n\r\n// ******************************************************************\r\n// imports\r\n// ******************************************************************\r\n\r\n// absoulte imports\r\nimport * as THREE from 'three';\r\n\r\nimport CLIP_VERTEX_SHADER from '../shaders/clipplane.vert';\r\nimport CLIP_FRAGMENT_SHADER from '../shaders/clipplane.frag';\r\n\r\n/** Class @class MaterialClipPlane for volume clip plane rendering */\r\nexport default class MaterialClipPlane {\r\n  /** ClipPlane material constructor\r\n  * @constructor\r\n  */\r\n  constructor() {\r\n    this.m_strShaderVertex = '';\r\n    this.m_strShaderFragment = '';\r\n    this.m_uniforms = {\r\n      MVP: { type: 'm4' },\r\n      texBF: { type: 't' },\r\n    };\r\n  }\r\n\r\n  /** Frontface material constructor\r\n  * @return {object} Three.js material with this shader\r\n  */\r\n  create(textureBF, callbackMat) {\r\n    // Init uniforms\r\n    this.m_uniforms.texBF.value = textureBF;\r\n    // create shader loaders\r\n    const vertexLoader = new THREE.FileLoader(THREE.DefaultLoadingManager);\r\n    vertexLoader.setResponseType('text');\r\n    const fragmentLoader = new THREE.FileLoader(THREE.DefaultLoadingManager);\r\n    fragmentLoader.setResponseType('text');\r\n\r\n    vertexLoader.load(CLIP_VERTEX_SHADER, (strVertexSh) => {\r\n      this.m_strShaderVertex = strVertexSh;\r\n      // console.log(`Load callback success. text = : ${strVertexSh} ...`);\r\n      fragmentLoader.load(CLIP_FRAGMENT_SHADER, (strFragmentSh) => {\r\n        this.m_strShaderFragment = strFragmentSh;\r\n\r\n        // log\r\n        // {\r\n        //   const strLoaded = JSON.stringify(this.m_strShaderVertex);\r\n        //   console.log(`Readed vertex shader is: ${strLoaded} ...`);\r\n        // }\r\n\r\n        const material = new THREE.ShaderMaterial({\r\n          uniforms: this.m_uniforms,\r\n          vertexShader: this.m_strShaderVertex,\r\n          fragmentShader: this.m_strShaderFragment,\r\n          side: THREE.DoubleSide,\r\n          depthTest: false,\r\n          depthWrite: false,\r\n        });\r\n        if (callbackMat) {\r\n          callbackMat(material);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/rendertotexture.b51229d9.vert\";","export default __webpack_public_path__ + \"static/media/rendertotexture.f0ef0a21.frag\";","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Low resolution isosurface rendering material for CT dataset\r\n* @module lib/scripts/gfx/matrendertotexture\r\n*/\r\n\r\n// ******************************************************************\r\n// imports\r\n// ******************************************************************\r\n\r\n// absoulte imports\r\nimport * as THREE from 'three';\r\n\r\nimport RENDER_TEXTURE_VERTEX_SHADER from '../shaders/rendertotexture.vert';\r\nimport RENDER_TEXTURE_FRAGMENT_SHADER from '../shaders/rendertotexture.frag';\r\n\r\n/** Class @class MaterialRenderToTexture for\r\n* rough isosurface computation: a ray-casting optimization\r\n*/\r\nexport default class MaterialRenderToTexture {\r\n  /** Simple material constructor\r\n  * @constructor\r\n  */\r\n  constructor() {\r\n    this.m_strShaderVertex = '';\r\n    this.m_strShaderFragment = '';\r\n    this.m_uniforms = {\r\n      texTF: { type: 't', value: null },\r\n      texVolume: { type: 't', value: null },\r\n      texRoiId: { type: 't', value: null },\r\n      texRoiColor: { type: 't', value: null },\r\n      RoiVolumeTex: { type: 't', value: null },\r\n      texVolumeMask: { type: 't', value: null },\r\n      texVolumeAO: { type: 't', value: null },\r\n      lightDir: { type: 'v3', value: new THREE.Vector3(0.0, 0.0, 0.0) },\r\n      texBF: { type: 't', value: null },\r\n      texFF: { type: 't', value: null },\r\n      t_function1min: { type: 'v4', value: new THREE.Vector4(0.0, 0.0, 0.0, 0.0) },\r\n      t_function1max: { type: 'v4', value: new THREE.Vector4(0.0, 0.0, 0.0, 0.0) },\r\n      t_function2min: { type: 'v4', value: new THREE.Vector4(0.0, 0.0, 0.0, 0.0) },\r\n      t_function2max: { type: 'v4', value: new THREE.Vector4(0.0, 0.0, 0.0, 0.0) },\r\n      stepSize: { type: 'v4', value: new THREE.Vector4(0.0, 0.0, 0.0, 0.0) },\r\n      texSize: { type: 'f', value: 0.0 },\r\n      isoThreshold: { type: 'f', value: 0.0 },\r\n      brightness3D: { type: 'f', value: 0.0 },\r\n      contrast3D: { type: 'f', value: 0.0 },\r\n      colorMap1D: { type: 't', value: null },\r\n      heatMap1D: { type: 't', value: null },\r\n      opacityBarrier: { type: 'f', value: 0.0 },\r\n      tileCountX: { type: 'f', value: 0.0 },\r\n      volumeSizeZ: { type: 'f', value: 0.0 },\r\n      xDim: { type: 'f', value: 0.0 },\r\n      yDim: { type: 'f', value: 0.0 },\r\n      zDim: { type: 'f', value: 0.0 },\r\n      ssaoOffsets: { type: 'v3v' },\r\n    };\r\n    this.m_defines = {\r\n      isoRenderFlag: 0,\r\n      MaskFlag: 0,\r\n      useAmbientTex: 0,\r\n      useWebGL2: 1,\r\n    };\r\n  }\r\n\r\n  /** Simple material constructor\r\n  * @return {object} Three.js material with this shader\r\n  */\r\n  create(texTF, texVol2d, texVolMask, texVolAO, texBackface, texFrontface, offsets, callbackMat) {\r\n    // Init uniforms\r\n    this.m_uniforms.texTF.value = texTF;\r\n    this.m_uniforms.texVolume.value = texVol2d;\r\n    this.m_uniforms.texVolumeMask.value = texVolMask;\r\n    this.m_uniforms.texVolumeAO.value = texVolAO;\r\n    this.m_uniforms.texBF.value = texBackface;\r\n    this.m_uniforms.texFF.value = texFrontface;\r\n    this.m_uniforms.ssaoOffsets.value = offsets;\r\n    // create shader loaders\r\n    const vertexLoader = new THREE.FileLoader(THREE.DefaultLoadingManager);\r\n    vertexLoader.setResponseType('text');\r\n    const fragmentLoader = new THREE.FileLoader(THREE.DefaultLoadingManager);\r\n    fragmentLoader.setResponseType('text');\r\n\r\n    vertexLoader.load(RENDER_TEXTURE_VERTEX_SHADER, (strVertexSh) => {\r\n      this.m_strShaderVertex = strVertexSh;\r\n      // console.log(`Load callback success. text = : ${strVertexSh} ...`);\r\n      fragmentLoader.load(RENDER_TEXTURE_FRAGMENT_SHADER, (strFragmentSh) => {\r\n        this.m_strShaderFragment = strFragmentSh;\r\n\r\n        const material = new THREE.ShaderMaterial({\r\n          uniforms: this.m_uniforms,\r\n          defines: this.m_defines,\r\n          vertexShader: this.m_strShaderVertex,\r\n          fragmentShader: this.m_strShaderFragment,\r\n          side: THREE.BackSide,\r\n          depthTest: true,\r\n          depthFunc: THREE.GreaterEqualDepth,\r\n          blending: THREE.NoBlending,\r\n        });\r\n        if (callbackMat) {\r\n          callbackMat(material);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/interpolation.ae2f2bf4.vert\";","export default __webpack_public_path__ + \"static/media/interpolation.b65fb94f.frag\";","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Final isosurface rendering material for CT dataset\r\n* @module lib/scripts/gfx/matinterpolation\r\n*/\r\n\r\n// ******************************************************************\r\n// imports\r\n// ******************************************************************\r\n\r\n// absoulte imports\r\nimport * as THREE from 'three';\r\n\r\nimport INTERP_VERTEX_SHADER from '../shaders/interpolation.vert';\r\nimport INTERP_FRAGMENT_SHADER from '../shaders/interpolation.frag';\r\n\r\n/** Class @class MaterialVolumeRender for create skull volume render shader material */\r\nexport default class MaterialInterpolation {\r\n\r\n  /** Simple material constructor\r\n  * @constructor\r\n  */\r\n  constructor() {\r\n    this.m_strShaderVertex = '';\r\n    this.m_strShaderFragment = '';\r\n    this.m_uniforms = {\r\n      isoSurfTexel: { type: 'v2', value: null },\r\n      texIsoSurface: { type: 't', value: null },\r\n    };\r\n    this.m_defines = {\r\n      isoRenderFlag: 0,\r\n    };\r\n  }\r\n\r\n  /** Simple material constructor\r\n  * @return {object} Three.js material with this shader\r\n  */\r\n  create(renderTexture, callbackMat) {\r\n    // Init uniforms\r\n    this.m_uniforms.texIsoSurface.value = renderTexture;\r\n\r\n    // create shader loaders\r\n    const vertexLoader = new THREE.FileLoader(THREE.DefaultLoadingManager);\r\n    vertexLoader.setResponseType('text');\r\n    const fragmentLoader = new THREE.FileLoader(THREE.DefaultLoadingManager);\r\n    fragmentLoader.setResponseType('text');\r\n\r\n    vertexLoader.load(INTERP_VERTEX_SHADER, (strVertexSh) => {\r\n      this.m_strShaderVertex = strVertexSh;\r\n      // console.log(`Load callback success. text = : ${strVertexSh} ...`);\r\n      fragmentLoader.load(INTERP_FRAGMENT_SHADER, (strFragmentSh) => {\r\n        this.m_strShaderFragment = strFragmentSh;\r\n\r\n        // log\r\n        // {\r\n        //   const strLoaded = JSON.stringify(this.m_strShaderVertex);\r\n        //   console.log(`Readed vertex shader is: ${strLoaded} ...`);\r\n        // }\r\n\r\n        const material = new THREE.ShaderMaterial({\r\n          uniforms: this.m_uniforms,\r\n          defines: this.m_defines,\r\n          vertexShader: this.m_strShaderVertex,\r\n          fragmentShader: this.m_strShaderFragment,\r\n          side: THREE.BackSide\r\n        });\r\n        if (callbackMat) {\r\n          callbackMat(material);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/volumerender.0fdf551f.vert\";","export default __webpack_public_path__ + \"static/media/volumerender.fb827430.frag\";","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Final isosurface rendering material for CT dataset\r\n* @module lib/scripts/gfx/matvolumerender\r\n*/\r\n\r\n// ******************************************************************\r\n// imports\r\n// ******************************************************************\r\n\r\n// absoulte imports\r\nimport * as THREE from 'three';\r\n\r\nimport VOL_RENDER_VERTEX_SHADER from '../shaders/volumerender.vert';\r\nimport VOL_RENDER_FRAGMENT_SHADER from '../shaders/volumerender.frag';\r\n\r\n/** Class @class MaterialVolumeRender for create skull volume render shader material */\r\nexport default class MaterialVolumeRender {\r\n\r\n  /** Simple material constructor\r\n  * @constructor\r\n  */\r\n  constructor() {\r\n    this.m_strShaderVertex = '';\r\n    this.m_strShaderFragment = '';\r\n    this.m_uniforms = {\r\n      isoSurfTexel: { type: 'v2', value: null },\r\n      lightDir: { type: 'v3', value: new THREE.Vector3(0.0, 0.0, 0.0) },\r\n      texTF: { type: 't', value: null },\r\n      texVolume: { value: null },\r\n      texRoiId: { type: 't', value: null },\r\n      texRoiColor: { type: 't', value: null },\r\n      RoiVolumeTex: { type: 't', value: null },\r\n      texVolumeMask: { type: 't', value: null },\r\n      texVolumeAO: { type: 't', value: null },\r\n      texBF: { type: 't', value: null },\r\n      texFF: { type: 't', value: null },\r\n      texIsoSurface: { type: 't', value: null },\r\n      colorMap1D: { type: 't', value: null },\r\n      heatMap1D: { type: 't', value: null },\r\n      t_function1min: { type: 'v4', value: new THREE.Vector4(0.0, 0.0, 0.0, 0.0) },\r\n      t_function1max: { type: 'v4', value: new THREE.Vector4(0.0, 0.0, 0.0, 0.0) },\r\n      t_function2min: { type: 'v4', value: new THREE.Vector4(0.0, 0.0, 0.0, 0.0) },\r\n      t_function2max: { type: 'v4', value: new THREE.Vector4(0.0, 0.0, 0.0, 0.0) },\r\n      stepSize: { type: 'v4', value: new THREE.Vector4(0.0, 0.0, 0.0, 0.0) },\r\n      texSize: { type: 'f', value: 0.0 },\r\n      isoThreshold: { type: 'f', value: 0.0 },\r\n      brightness3D: { type: 'f', value: 0.0 },\r\n      contrast3D: { type: 'f', value: 0.0 },\r\n      tileCountX: { type: 'f', value: 0.0 },\r\n      volumeSizeZ: { type: 'f', value: 0.0 },\r\n      opacityBarrier: { type: 'f', value: 0.0 },\r\n      xDim: { type: 'f', value: 0.0 },\r\n      yDim: { type: 'f', value: 0.0 },\r\n      zDim: { type: 'f', value: 0.0 },\r\n      ssaoOffsets: { type: 'v3v' },\r\n    };\r\n    this.m_defines = {\r\n      isoRenderFlag: 0,\r\n      MaskFlag: 0,\r\n      useAmbientTex: 0,\r\n      useWebGL2: 1,\r\n    };\r\n  }\r\n\r\n  /** Simple material constructor\r\n  * @return {object} Three.js material with this shader\r\n  */\r\n  create(texTF, texVol2d,\r\n    texVolMask, texVolAO, texBackface, texFrontface, renderTexture, offsets, callbackMat) {\r\n    // Init uniforms\r\n    this.m_uniforms.texTF.value = texTF;\r\n    this.m_uniforms.texVolume.value = texVol2d;\r\n    this.m_uniforms.texVolumeMask.value = texVolMask;\r\n    this.m_uniforms.texVolumeAO.value = texVolAO;\r\n    this.m_uniforms.texBF.value = texBackface;\r\n    this.m_uniforms.texFF.value = texFrontface;\r\n    this.m_uniforms.texIsoSurface.value = renderTexture;\r\n    this.m_uniforms.ssaoOffsets.value = offsets;\r\n\r\n    // create shader loaders\r\n    const vertexLoader = new THREE.FileLoader(THREE.DefaultLoadingManager);\r\n    vertexLoader.setResponseType('text');\r\n    const fragmentLoader = new THREE.FileLoader(THREE.DefaultLoadingManager);\r\n    fragmentLoader.setResponseType('text');\r\n\r\n    vertexLoader.load(VOL_RENDER_VERTEX_SHADER, (strVertexSh) => {\r\n      this.m_strShaderVertex = strVertexSh;\r\n      // console.log(`Load callback success. text = : ${strVertexSh} ...`);\r\n      fragmentLoader.load(VOL_RENDER_FRAGMENT_SHADER, (strFragmentSh) => {\r\n        this.m_strShaderFragment = strFragmentSh;\r\n\r\n        const material = new THREE.ShaderMaterial({\r\n          uniforms: this.m_uniforms,\r\n          defines: this.m_defines,\r\n          vertexShader: this.m_strShaderVertex,\r\n          fragmentShader: this.m_strShaderFragment,\r\n          side: THREE.BackSide,\r\n          depthTest: true,\r\n          depthFunc: THREE.GreaterEqualDepth,\r\n          blending: THREE.NoBlending,\r\n        });\r\n        if (callbackMat) {\r\n          callbackMat(material);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/blur.a62df0a0.vert\";","export default __webpack_public_path__ + \"static/media/blur.d95db93c.frag\";","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Blur material, used for rendering of blurred volume slices\r\n* @module lib/scripts/gfx/matblur\r\n*/\r\n\r\n// ******************************************************************\r\n// imports\r\n// ******************************************************************\r\n\r\n// absoulte imports\r\nimport * as THREE from 'three';\r\n\r\nimport BLUR_VERTEX_SHADER from '../shaders/blur.vert';\r\nimport BLUR_FRAGMENT_SHADER from '../shaders/blur.frag';\r\n\r\n/** Class @class MaterialBlur for volume slice blurring */\r\nexport default class MaterialBlur {\r\n  /** Backface material constructor\r\n  * @constructor\r\n  */\r\n  constructor() {\r\n    this.m_strShaderVertex = '';\r\n    this.m_strShaderFragment = '';\r\n    const TILE_COUNT_X = 16.0;\r\n    const VOL_SIZE_Z = 256.0;\r\n    const BLUR_SIGMA = 0.8;\r\n    const CONTRAST = 1.0;\r\n    const BRIGHTNESS = 0.0;\r\n    const SAVE_FLAG = true;\r\n    this.m_uniforms = {\r\n      texVolume: { type: 't', value: null },\r\n      texVolumeRoi: { type: 't', value: null },\r\n      texRoiColor: { type: 't', value: null },\r\n      texSegInUse: { type: 't', value: null },\r\n      texelSize: { type: 'v3', value: null },\r\n      tileCountX: { type: 'f', value: TILE_COUNT_X },\r\n      volumeSizeZ: { type: 'f', value: VOL_SIZE_Z },\r\n      xDim: { type: 'f', value: VOL_SIZE_Z },\r\n      yDim: { type: 'f', value: VOL_SIZE_Z },\r\n      blurSigma:   { type: 'f', value: BLUR_SIGMA },\r\n      contrast: { type: 'f', value: CONTRAST },\r\n      brightness: { type: 'f', value: BRIGHTNESS },\r\n      curZ: { type: 'f', value: 0.0 },\r\n      save_flag: { type: 'b', value: SAVE_FLAG }\r\n    };\r\n    this.m_defines = {\r\n      renderRoiMap: 0,\r\n      useWebGL2: 1,\r\n    };\r\n  }\r\n\r\n  /** Backface material constructor\r\n  * @return {object} Three.js material with this shader\r\n  */\r\n  create(texture, texRoi, texelSize, texRoiColor, texRoiId, callbackMat) {\r\n    // Init uniforms\r\n    this.m_uniforms.texVolume.value = texture;\r\n    this.m_uniforms.texVolume.value = texture;\r\n    this.m_uniforms.texVolumeRoi.value = texRoi;\r\n    this.m_uniforms.texRoiColor.value = texRoiColor;\r\n    this.m_uniforms.texSegInUse.value = texRoiId;\r\n    this.m_uniforms.texelSize.value = texelSize;\r\n    // create shader loaders\r\n    const vertexLoader = new THREE.FileLoader(THREE.DefaultLoadingManager);\r\n    vertexLoader.setResponseType('text');\r\n    const fragmentLoader = new THREE.FileLoader(THREE.DefaultLoadingManager);\r\n    fragmentLoader.setResponseType('text');\r\n\r\n    vertexLoader.load(BLUR_VERTEX_SHADER, (strVertexSh) => {\r\n      this.m_strShaderVertex = strVertexSh;\r\n      // console.log(`Load callback success. text = : ${strVertexSh} ...`);\r\n      fragmentLoader.load(BLUR_FRAGMENT_SHADER, (strFragmentSh) => {\r\n        this.m_strShaderFragment = strFragmentSh;\r\n\r\n        const material = new THREE.ShaderMaterial({\r\n          uniforms: this.m_uniforms,\r\n          defines: this.m_defines,\r\n          vertexShader: this.m_strShaderVertex,\r\n          fragmentShader: this.m_strShaderFragment\r\n        });\r\n        if (callbackMat) {\r\n          callbackMat(material);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Simple point link\r\n* @module lib/scripts/actvolume/pointlink\r\n*/\r\n\r\n// absolute imports\r\nimport * as THREE from 'three';\r\n\r\n// relative imports\r\n// import PointLink from './pointlink';\r\n\r\n/**\r\n* Class PointLink define link entry\r\n* @class PointLink\r\n*/\r\nexport default class PointLink {\r\n  /**\r\n  * Init all internal data\r\n  * @constructs PointLink\r\n  */\r\n  constructor() {\r\n    this.m_point = new THREE.Vector3();\r\n    this.m_next = null;\r\n  }\r\n}\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Simple point set with voxelization\r\n* @module lib/scripts/actvolume/pointset\r\n*/\r\n\r\n// absolute imports\r\n// import TetrahedronGenerator from 'tetra';\r\n\r\n// relative imports\r\nimport PointLink from './pointlink';\r\n\r\nconst PSET_NUM_VOXELS = 16;\r\nconst PSET_NUM_LINKS = (PSET_NUM_VOXELS * PSET_NUM_VOXELS * PSET_NUM_VOXELS);\r\n\r\n/**\r\n* Class PointSet define set of 3d points\r\n* @class PointSet\r\n*/\r\nexport default class PointSet {\r\n  /**\r\n  * Init all internal data\r\n  * @constructs PointSet\r\n  */\r\n  constructor(numPoints) {\r\n    this.create(numPoints);\r\n  }\r\n\r\n  /**\r\n  * create points set, not initialized\r\n  * @param {number} numPoints Number of points in set estimated\r\n  */\r\n  create(numPoints) {\r\n    this.m_numPoints = 0;\r\n    this.m_numAllocatedPoints = numPoints;\r\n    this.m_points = new Array(numPoints);\r\n    this.m_voxels = new Array(PSET_NUM_LINKS);\r\n    for (let i = 0; i < numPoints; i++) {\r\n      this.m_points[i] = new PointLink();\r\n      this.m_points[i].m_point.set(0.0, 0.0, 0.0);\r\n      this.m_points[i].m_next = null;\r\n    } // for (i) all points\r\n  }\r\n\r\n  getNumPoints() {\r\n    return this.m_numPoints;\r\n  }\r\n\r\n  findPointSlow(x, y, z) {\r\n    for (let i = 0; i < this.m_numPoints; i++) {\r\n      const dx = x - this.m_points[i].m_point.x;\r\n      const dy = y - this.m_points[i].m_point.y;\r\n      const dz = z - this.m_points[i].m_point.z;\r\n      const dist2 = dx * dx + dy * dy + dz * dz;\r\n      const TOO_SMALL = 1.0e-8;\r\n      if (dist2 < TOO_SMALL) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n  * Add point to set\r\n  * @param {number} x coordinate x\r\n  * @param {number} y coordinate y\r\n  * @param {number} z coordinate z\r\n  */\r\n  addPoint(x, y, z) {\r\n    const iSlow = this.findPointSlow(x, y, z);\r\n    // check if exist\r\n    if (iSlow >= 0) {\r\n      return iSlow;\r\n    }\r\n    // check allocated space\r\n    if (this.m_numPoints >= this.m_numAllocatedPoints) {\r\n      return -1;\r\n    }\r\n    // add new point\r\n    const index = this.m_numPoints;\r\n    this.m_points[index] = new PointLink();\r\n    this.m_points[index].m_point.set(x, y, z);\r\n    this.m_points[index].m_next = null;\r\n    this.m_numPoints++;\r\n    return index;\r\n  } // addPoint\r\n\r\n}\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Triangle indices\r\n* @module lib/scripts/actvolume/triindices\r\n*/\r\n\r\n// absolute imports\r\n// import TetrahedronGenerator from 'tetra';\r\n\r\n// relative imports\r\n// import TriangleIndices from './triindices';\r\n\r\n/**\r\n* Class TriangleIndices define 3 indices of triangle\r\n* @class TriangleIndices\r\n*/\r\nexport default class TriangleIndices {\r\n  /**\r\n  * Init all internal data\r\n  * @constructs TriangleIndices\r\n  */\r\n  constructor(ia, ib, ic) {\r\n    const NUM_VERTS_IN_TRIANGLE = 3;\r\n    this.m_indices = new Int32Array(NUM_VERTS_IN_TRIANGLE);\r\n    this.m_indices[0] = ia;\r\n    this.m_indices[1] = ib;\r\n    this.m_indices[2] = ic;\r\n  }\r\n}  // TriangleIndices\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Triangle set\r\n* @module lib/scripts/actvolume/triangleset\r\n*/\r\n\r\n// absolute imports\r\n// import TetrahedronGenerator from 'tetra';\r\n\r\n// relative imports\r\nimport TriangleIndices from './triindices';\r\n\r\n/**\r\n* Class TriangleSet define set of trinagles\r\n* @class TriangleSet\r\n*/\r\nexport default class TriangleSet {\r\n  /**\r\n  * Init all internal data\r\n  * @constructs TriangleSet\r\n  */\r\n  constructor(numTriangles) {\r\n    this.create(numTriangles);\r\n  } // constructor\r\n\r\n  create(numTriangles) {\r\n    this.m_numTriangles = 0;\r\n    this.m_numAllocatedTriangles = numTriangles;\r\n    this.m_triangles = new Array(numTriangles);\r\n    const STRANGE_VALUE = -1;\r\n    for (let i = 0; i < numTriangles; i++) {\r\n      this.m_triangles[i] = new TriangleIndices(STRANGE_VALUE, STRANGE_VALUE, STRANGE_VALUE);\r\n    }\r\n  } // create\r\n\r\n  /**\r\n  * Get number of triangles\r\n  * @return {number}\r\n  */\r\n  getNumTriangles() {\r\n    return this.m_numTriangles;\r\n  }\r\n\r\n  /**\r\n  * Add triangle to set\r\n  * @return 1, if success\r\n  */\r\n  addTriangle(ia, ib, ic) {\r\n    if (this.m_numTriangles >= this.m_numAllocatedTriangles) {\r\n      return -1;\r\n    }\r\n    this.m_triangles[this.m_numTriangles].m_indices[0] = ia;\r\n    this.m_triangles[this.m_numTriangles].m_indices[1] = ib;\r\n    this.m_triangles[this.m_numTriangles].m_indices[2] = ic;\r\n    this.m_numTriangles++;\r\n    return 1;\r\n  }\r\n}\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Single triagle\r\n* @module lib/scripts/actvolume/trianglesingle\r\n*/\r\n\r\n// absolute imports\r\nimport * as THREE from 'three';\r\n\r\n// relative imports\r\n\r\n/**\r\n* Class TriangleSingle is one triangle\r\n* @class TriangleSingle\r\n*/\r\nexport default class TriangleSingle {\r\n  constructor() {\r\n    this.va = new THREE.Vector3();\r\n    this.vb = new THREE.Vector3();\r\n    this.vc = new THREE.Vector3();\r\n  }\r\n}\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Triagle stack\r\n* @module lib/scripts/actvolume/trianglestack\r\n*/\r\n\r\n\r\n// relative imports\r\nimport TriangleSingle from './trianglesingle';\r\n\r\n/**\r\n* Class TriangleStack builds stack for triangles\r\n* @class TriangleStack\r\n*/\r\nexport default class TriangleStack {\r\n  constructor() {\r\n    this.m_numAllocated = 0;\r\n    this.m_numStacked = 0;\r\n    this.m_stack = null;\r\n  }\r\n\r\n  /*\r\n  * Create triangle stack\r\n  * @param {number} depthLevel number of triangles in stack\r\n  */\r\n  create(depthLevel) {\r\n    const ESTIM = 20;\r\n    const MUL_INCREMENT = 4;\r\n    let numTiEstimate = ESTIM;\r\n    for (let i = 0; i < depthLevel; i++) {\r\n      numTiEstimate *= MUL_INCREMENT;\r\n    }\r\n    this.m_numAllocated  = numTiEstimate;\r\n    this.m_stack         = new Array(this.m_numAllocated);\r\n    for (let i = 0; i < this.m_numAllocated; i++) {\r\n      this.m_stack[i] = new TriangleSingle();\r\n    }\r\n    this.m_numStacked    = 0;\r\n  } // create\r\n\r\n  /*\r\n  * Get stack depth\r\n  * @return {number} number of triangles in stack\r\n  */\r\n  getStackDepth() {\r\n    return this.m_numStacked;\r\n  }\r\n\r\n  /*\r\n  * Chech is stack empty\r\n  * @return {boolean} true, if empty\r\n  */\r\n  isEmpty() {\r\n    return (this.m_numStacked === 0);\r\n  }\r\n\r\n  /*\r\n  * Push triangle onto stack\r\n  * @param {object} va triangle a (THREE.Vector3)\r\n  * @param {object} vb triangle b (THREE.Vector3)\r\n  * @param {object} vc triangle c (THREE.Vector3)\r\n  */\r\n  push(va, vb, vc) {\r\n    if (this.m_numStacked >= this.m_numAllocated) {\r\n      return -1;\r\n    }\r\n    this.m_stack[this.m_numStacked].va = va;\r\n    this.m_stack[this.m_numStacked].vb = vb;\r\n    this.m_stack[this.m_numStacked].vc = vc;\r\n    this.m_numStacked++;\r\n    return 1;\r\n  } // push triangle\r\n\r\n  /*\r\n  * Pop triangle from stack\r\n  * @return {object} TriangleSingle object\r\n  */\r\n  pop() {\r\n    if (this.m_numStacked <= 0) {\r\n      return null;\r\n    }\r\n    this.m_numStacked--;\r\n    return this.m_stack[this.m_numStacked];\r\n  } // pop triangle\r\n\r\n}\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Tetrahedron generator\r\n* @module lib/scripts/actvolume/tetra\r\n*/\r\n\r\n// absolute imports\r\nimport * as THREE from 'three';\r\n\r\n// relative imports\r\nimport PointSet from './pointset';\r\nimport TriangleSet from './triangleset';\r\nimport TriangleStack from './trianglestack';\r\n\r\nconst NUM_VERTICES_TETRA = 12;\r\nconst NUM_TRIANGLES_TETRA = 20;\r\n\r\n/**\r\n* Class TetrahedronGenerator builds good sphere-looked tri mesh\r\n* @class TetrahedronGenerator\r\n*/\r\nexport default class TetrahedronGenerator {\r\n  /**\r\n  * Init all internal data\r\n  * @constructs TetrahedronGenerator\r\n  */\r\n  constructor() {\r\n    this.m_pointSet = null;\r\n    this.m_triangleSet = null;\r\n  }\r\n\r\n  /**\r\n  * Create triangle mesh structure\r\n  * @param {number} vRadiusEllipse Ellipse radius\r\n  * @param {number} numSubdividesOfOrigTetra number of sub divides\r\n  */\r\n  create(vRadiusEllipse, numSubdividesOfOrigTetra) {\r\n    // console.log(`vRadiusEllipse = ${vRadiusEllipse}`);\r\n    // console.log(`numSubdividesOfOrigTetra = ${numSubdividesOfOrigTetra}`);\r\n    const X = 0.5257311121;\r\n    const Z = 0.8506508083;\r\n    // { -X, 0.0f, Z },{ X, 0.0f, Z },{ -X, 0.0f, -Z },{ X, 0.0f, -Z },\r\n    // { 0.0f, Z, X },{ 0.0f, Z, -X },{ 0.0f, -Z, X },{ 0.0f, -Z, -X },\r\n    // { Z, X, 0.0f },{ -Z, X, 0.0f },{ Z, -X, 0.0f },{ -Z, -X, 0.0f }\r\n    const vdata = [\r\n      -X, 0.0, +Z,\r\n      +X, 0.0, +Z,\r\n      -X, 0.0, -Z,\r\n      +X, 0.0, -Z,\r\n      0.0, +Z, +X,\r\n      0.0, +Z, -X,\r\n      0.0, -Z, +X,\r\n      0.0, -Z, -X,\r\n      +Z, +X, 0.0,\r\n      -Z, +X, 0.0,\r\n      +Z, -X, 0.0,\r\n      -Z, -X, 0.0,\r\n    ];\r\n    /*eslint-disable no-magic-numbers*/\r\n    const tindices = [\r\n      0, 4, 1, 0, 9, 4, 9, 5, 4, 4, 5, 8, 4, 8, 1,\r\n      8, 10, 1, 8, 3, 10, 5, 3, 8, 5, 2, 3, 2, 7, 3,\r\n      7, 10, 3, 7, 6, 10, 7, 11, 6, 11, 0, 6, 0, 1, 6,\r\n      6, 1, 10, 9, 0, 11, 9, 11, 2, 9, 2, 5, 7, 2, 11\r\n    ];\r\n    this.m_pointSet = new PointSet(NUM_VERTICES_TETRA);\r\n    let i3 = 0;\r\n    for (let i = 0; i < NUM_VERTICES_TETRA; i++, i3 += 3) {\r\n      const x = vdata[i3 + 0];\r\n      const y = vdata[i3 + 1];\r\n      const z = vdata[i3 + 2];\r\n      this.m_pointSet.addPoint(x, y, z);\r\n    } // for (i) all vertices in tetrahedron structure\r\n    // m_triangleSet.create(NUM_TRIANGLES_TETRA);\r\n    this.m_triangleSet = new TriangleSet(NUM_TRIANGLES_TETRA);\r\n    i3 = 0;\r\n    for (let i = 0; i < NUM_TRIANGLES_TETRA; i++, i3 += 3) {\r\n      const ia = tindices[i3 + 0];\r\n      const ib = tindices[i3 + 1];\r\n      const ic = tindices[i3 + 2];\r\n      // use inverse points order to reach correct plane visibility and correct normal directions\r\n      this.m_triangleSet.addTriangle(ia, ic, ib);\r\n    }\r\n    this.subDivideMesh(numSubdividesOfOrigTetra);\r\n\r\n    // scale to given input ellipse\r\n    const numPoints = this.m_pointSet.getNumPoints();\r\n    for (let i = 0; i < numPoints; i++) {\r\n      this.m_pointSet.m_points[i].m_point.x *= vRadiusEllipse.x;\r\n      this.m_pointSet.m_points[i].m_point.y *= vRadiusEllipse.y;\r\n      this.m_pointSet.m_points[i].m_point.z *= vRadiusEllipse.z;\r\n      // console.log(`DEEP DEB. x = ${this.m_pointSet.m_points[i].m_point.x}`);\r\n    } // for (i) all points in set\r\n\r\n    // test save geo into file\r\n    // const TEST_FILE_NAME = 'tetra.obj';\r\n    // this.saveGeoToObjFile(TEST_FILE_NAME);\r\n\r\n    return 1;\r\n  } // create\r\n\r\n  getNumTriangles() {\r\n    return this.m_triangleSet.m_numTriangles;\r\n  }\r\n\r\n  getNumVertices() {\r\n    return this.m_pointSet.m_numPoints;\r\n  }\r\n\r\n  getVertex(i) {\r\n    return this.m_pointSet.m_points[i].m_point;\r\n  }\r\n\r\n  getTriangle(i) {\r\n    return this.m_triangleSet.m_triangles[i].m_indices;\r\n  }\r\n\r\n  /**\r\n  * Save tetrahedron geometry into given file (PLY type)\r\n  * see PLY format description here:\r\n  * https://en.wikipedia.org/wiki/PLY_(file_format)\r\n  */\r\n  saveGeoToPlyFile(fileName) {\r\n    let strOut = 'ply\\nformat ascii 1.0\\ncomment tetrahedron mesh\\n';\r\n    const numVertices = this.m_pointSet.m_numPoints;\r\n    const strNumVertices = numVertices.toString();\r\n    strOut = strOut.concat('element vertex ');\r\n    strOut = strOut.concat(strNumVertices);\r\n    strOut = strOut.concat('\\n');\r\n    strOut = strOut.concat('property float x\\nproperty float y\\nproperty float z\\n');\r\n    strOut = strOut.concat('element face ');\r\n    const numTriangles = this.m_triangleSet.m_numTriangles;\r\n    const strNumTriangles = numTriangles.toString();\r\n    strOut = strOut.concat(strNumTriangles);\r\n    strOut = strOut.concat('\\n');\r\n    strOut = strOut.concat('property list uchar int vertex_indices\\n');\r\n    strOut = strOut.concat('end_header\\n');\r\n\r\n    // Write vertices\r\n    for (let i = 0; i < numVertices; i++) {\r\n      const vert = this.m_pointSet.m_points[i].m_point;\r\n      const strX = vert.x.toString();\r\n      const strY = vert.y.toString();\r\n      const strZ = vert.z.toString();\r\n      // console.log(`DEEP DEB. xyz = ${strX} ${strY} ${strZ} `);\r\n      strOut = strOut.concat(strX);\r\n      strOut = strOut.concat(' ');\r\n      strOut = strOut.concat(strY);\r\n      strOut = strOut.concat(' ');\r\n      strOut = strOut.concat(strZ);\r\n      strOut = strOut.concat(' 1.0\\n');\r\n    }\r\n    // Write triangles\r\n    for (let i = 0; i < numTriangles; i++) {\r\n      const triIndices = this.m_triangleSet.m_triangles[i].m_indices;\r\n      // console.log(`DEEP DEB. indices = ${triIndices[0]} ${triIndices[1]} ${triIndices[2]} `);\r\n      const strIndices = `3 ${triIndices[0]} ${triIndices[1]} ${triIndices[2]}\\n`;\r\n      strOut = strOut.concat(strIndices);\r\n    }\r\n\r\n    const encoder = new TextEncoder();\r\n    const arr = encoder.encode(strOut);\r\n\r\n    const blob = new Blob([arr], { type: 'application/octet-stream' });\r\n    // saveAs(blob, TEST_FILE_NAME);\r\n    const url = URL.createObjectURL(blob);\r\n    const linkGen = document.createElement('a');\r\n    linkGen.setAttribute('href', url);\r\n    linkGen.setAttribute('download', fileName);\r\n    const eventGen = document.createEvent('MouseEvents');\r\n    eventGen.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n    linkGen.dispatchEvent(eventGen);\r\n  } // saveGeoToPlyFile\r\n\r\n  /**\r\n  * Save tetrahedron geometry into given file (OBJ type)\r\n  */\r\n  saveGeoToObjFile(fileName) {\r\n    let strOut = '# Tetrahedron test geo\\n';\r\n    const numVertices = this.m_pointSet.m_numPoints;\r\n    const strNumVertices = numVertices.toString();\r\n    const numTriangles = this.m_triangleSet.m_numTriangles;\r\n    const strNumTriangles = numTriangles.toString();\r\n\r\n    // Write vertices\r\n    for (let i = 0; i < numVertices; i++) {\r\n      const vert = this.m_pointSet.m_points[i].m_point;\r\n      const strX = vert.x.toString();\r\n      const strY = vert.y.toString();\r\n      const strZ = vert.z.toString();\r\n      strOut = strOut.concat('v  ');\r\n      strOut = strOut.concat(strX);\r\n      strOut = strOut.concat(' ');\r\n      strOut = strOut.concat(strY);\r\n      strOut = strOut.concat(' ');\r\n      strOut = strOut.concat(strZ);\r\n      strOut = strOut.concat('\\n');\r\n    }\r\n    // write num verts\r\n    const strNumVerts = `# ${strNumVertices} vertices\\n`;\r\n    strOut = strOut.concat(strNumVerts);\r\n    strOut = strOut.concat('g TetraObj\\n');\r\n\r\n    // Write triangles\r\n    for (let i = 0; i < numTriangles; i++) {\r\n      const triIndices = this.m_triangleSet.m_triangles[i].m_indices;\r\n      // console.log(`DEEP DEB. indices = ${triIndices[0]} ${triIndices[1]} ${triIndices[2]} `);\r\n      const i0 = 1 + triIndices[0];\r\n      const i1 = 1 + triIndices[1];\r\n      const i2 = 1 + triIndices[2];\r\n      const strIndices = `f ${i0} ${i1} ${i2}\\n`;\r\n      strOut = strOut.concat(strIndices);\r\n    }\r\n    // write num tri\r\n    const strNumTri = `# ${strNumTriangles} triangles\\n`;\r\n    strOut = strOut.concat(strNumTri);\r\n\r\n    const encoder = new TextEncoder();\r\n    const arr = encoder.encode(strOut);\r\n\r\n    const blob = new Blob([arr], { type: 'application/octet-stream' });\r\n    // saveAs(blob, TEST_FILE_NAME);\r\n    const url = URL.createObjectURL(blob);\r\n    const linkGen = document.createElement('a');\r\n    linkGen.setAttribute('href', url);\r\n    linkGen.setAttribute('download', fileName);\r\n    const eventGen = document.createEvent('MouseEvents');\r\n    eventGen.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n    linkGen.dispatchEvent(eventGen);\r\n  } // saveGeoToObjFile\r\n\r\n  /*\r\n  * Sub divide source mesh\r\n  * @param {number} numSubdividesOfOrigTetra number of sub divides\r\n  */\r\n  subDivideMesh(numSubdividesOfOrigTetra) {\r\n    if (numSubdividesOfOrigTetra === 0) {\r\n      return 1;\r\n    }\r\n    const triStackSrc = new TriangleStack();\r\n    triStackSrc.create(numSubdividesOfOrigTetra);\r\n    const triStackDst = new TriangleStack();\r\n    triStackDst.create(numSubdividesOfOrigTetra);\r\n\r\n    const numTriangles = this.m_triangleSet.getNumTriangles();\r\n    for (let t = 0; t < numTriangles; t++) {\r\n      const triIndices = this.m_triangleSet.m_triangles[t].m_indices;\r\n      const ia = triIndices[0];\r\n      const ib = triIndices[1];\r\n      const ic = triIndices[2];\r\n      const va = this.m_pointSet.m_points[ia].m_point;\r\n      const vb = this.m_pointSet.m_points[ib].m_point;\r\n      const vc = this.m_pointSet.m_points[ic].m_point;\r\n      const okPush = triStackSrc.push(va, vb, vc);\r\n      if (okPush < 1) {\r\n        return okPush;\r\n      }\r\n    } // for (t) all triangles, push em all\r\n    let stackSrc = triStackSrc;\r\n    let stackDst = triStackDst;\r\n    for (let iter = 0; iter < numSubdividesOfOrigTetra; iter++) {\r\n      const numStacked = stackSrc.getStackDepth();\r\n      for (let s = 0; s < numStacked; s++) {\r\n        // pop tri from stack\r\n        const triSingle = stackSrc.pop();\r\n        if (triSingle === null) {\r\n          return -1;\r\n        }\r\n        const v1 = triSingle.va;\r\n        const v2 = triSingle.vb;\r\n        const v3 = triSingle.vc;\r\n\r\n        // create additional vertices\r\n        const v12 = new THREE.Vector3();\r\n        const v23 = new THREE.Vector3();\r\n        const v31 = new THREE.Vector3();\r\n        v12.addVectors(v1, v2);\r\n        v12.normalize();\r\n        v23.addVectors(v2, v3);\r\n        v23.normalize();\r\n        v31.addVectors(v3, v1);\r\n        v31.normalize();\r\n\r\n        stackDst.push(v1, v12, v31);\r\n        stackDst.push(v2, v23, v12);\r\n        stackDst.push(v3, v31, v23);\r\n        stackDst.push(v12, v23, v31);\r\n      } // for (s) stacked triangles\r\n      // exchange stack\r\n      const stackTmp = stackSrc;\r\n      stackSrc = stackDst;\r\n      stackDst = stackTmp;\r\n    } // for (iter) all stack depth, subdivide iterations\r\n    // now we have stack src\r\n    const numTrisInStack = stackSrc.getStackDepth();\r\n    // vertices should not be more than 12/20 == 0.6\r\n    const estimateNumVertices = Math.floor(numTrisInStack * 3 * 0.6);\r\n    this.m_triangleSet.create(numTrisInStack);\r\n    this.m_pointSet.create(estimateNumVertices);\r\n    // let numTrisFromStack = 0;\r\n    while (!stackSrc.isEmpty()) {\r\n      // V3f va, vb, vc;\r\n      // stackSrc->pop(va, vb, vc);\r\n      const triSingle = stackSrc.pop();\r\n      const va = triSingle.va;\r\n      const vb = triSingle.vb;\r\n      const vc = triSingle.vc;\r\n      const indA = this.m_pointSet.addPoint(va.x, va.y, va.z);\r\n      const indB = this.m_pointSet.addPoint(vb.x, vb.y, vb.z);\r\n      const indC = this.m_pointSet.addPoint(vc.x, vc.y, vc.z);\r\n\r\n      const okAddTri = this.m_triangleSet.addTriangle(indA, indB, indC);\r\n      if (okAddTri !== 1) {\r\n        return okAddTri;\r\n      }\r\n      // numTrisFromStack++;\r\n    } // while\r\n    // assert(m_pointsSet.getNumPoints() <= estimateNumVertices);\r\n    // assert(m_triangleSet.getNumTriangles() <= numTrisInStack);\r\n    const numPts = this.m_pointSet.getNumPoints();\r\n    const numTris = this.m_triangleSet.getNumTriangles();\r\n    const ERR_ESTIMATE = -10;\r\n    if (numPts > estimateNumVertices) {\r\n      return ERR_ESTIMATE;\r\n    }\r\n    if (numTris > numTrisInStack) {\r\n      return ERR_ESTIMATE;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n}\r\n","import MaterialAO from './gfx/matAO';\r\nimport TetrahedronGenerator from './actvolume/tetra';\r\nimport * as THREE from 'three';\r\n\r\n/**\r\n * 3D ambient texture processing engine\r\n * @module lib/scripts/graphics3d/ambientTexture\r\n */\r\nexport default class AmbientTexture {\r\n  constructor(inParams) {\r\n    //this.rendererBlur.render(this.sceneBlur, this.cameraOrtho\r\n    this.rendererBlur = inParams.renderer;\r\n    this.sceneBlur = inParams.scene;\r\n    this.cameraOrtho = inParams.camera;\r\n    this.xDim = inParams.xDim;\r\n    this.yDim = inParams.yDim;\r\n    this.zDim = inParams.zDim;\r\n    this.texVolumeAO = null;\r\n    this.vectorsTex = null;\r\n  }\r\n\r\n  _setAOVectorTex() {\r\n    const VAL_4 = 4;\r\n    const VAL_255 = 255;\r\n    const gen = new TetrahedronGenerator();\r\n    const vRadius = new THREE.Vector3(0.5, 0.5, 0.5);\r\n    const NUM_SUBDIVIDES = 2;\r\n    const okCreateTetra = gen.create(vRadius, NUM_SUBDIVIDES);\r\n    if (okCreateTetra < 1) {\r\n      return;\r\n    }\r\n    this.numAOVectors = gen.getNumVertices();\r\n\r\n    this.vectors = new Uint8Array(VAL_4 * this.numAOVectors);\r\n\r\n    for (let i = 0; i < this.numAOVectors; i++) {\r\n      const vert = gen.getVertex(i);\r\n      this.vectors[i * VAL_4 + 0] = (vert.x + 0.5) * VAL_255;\r\n      this.vectors[i * VAL_4 + 1] = (vert.y + 0.5) * VAL_255;\r\n      this.vectors[i * VAL_4 + 2] = (vert.z + 0.5) * VAL_255;\r\n      this.vectors[i * VAL_4 + 3] = VAL_255;\r\n    }\r\n\r\n    this.vectorsTex = new THREE.DataTexture(this.vectors, this.numAOVectors, 1, THREE.RGBAFormat);\r\n    this.vectorsTex.wrapS = THREE.ClampToEdgeWrapping;\r\n    this.vectorsTex.wrapT = THREE.ClampToEdgeWrapping;\r\n    this.vectorsTex.magFilter = THREE.NearestFilter;\r\n    this.vectorsTex.minFilter = THREE.NearestFilter;\r\n    this.vectorsTex.needsUpdate = true;\r\n  }\r\n\r\n  set(texVolume, isoThreshold) {\r\n    if (this.vectorsTex === null) {\r\n      this._setAOVectorTex();\r\n    }\r\n    this.xDimAO = this.xDim;\r\n    this.yDimAO = this.yDim;\r\n    this.zDimAO = this.zDim;\r\n    this.bufferTextureAO = new THREE.WebGLRenderTarget(this.xDimAO,\r\n      this.yDimAO, {\r\n        minFilter: THREE.LinearFilter,\r\n        magFilter: THREE.LinearFilter,\r\n        format: THREE.RGBAFormat,\r\n        type: THREE.UnsignedByteType,\r\n        depthBuffer: false,\r\n      });\r\n\r\n    this.ambientVolumeTexCPU = new Uint8Array(this.xDimAO * this.yDimAO * this.zDimAO);\r\n    if (this.isWebGL2 === 0) {\r\n      this.texVolumeAO = new THREE.DataTexture(this.ambientVolumeTexCPU, this.xTex, this.yTex, THREE.AlphaFormat);\r\n    } else {\r\n      this.texVolumeAO = new THREE.DataTexture3D(this.ambientVolumeTexCPU, this.xDimAO, this.yDimAO, this.zDimAO);\r\n      this.texVolumeAO.format = THREE.RedFormat;\r\n      //this.texVolumeAO.type = THREE.UnsignedByteType;\r\n    }\r\n    this.texVolumeAO.wrapS = THREE.ClampToEdgeWrapping;\r\n    this.texVolumeAO.wrapT = THREE.ClampToEdgeWrapping;\r\n    this.texVolumeAO.wrapR = THREE.ClampToEdgeWrapping;\r\n    this.texVolumeAO.magFilter = THREE.LinearFilter;\r\n    this.texVolumeAO.minFilter = THREE.LinearFilter;\r\n    this.texVolumeAO.needsUpdate = true;\r\n\r\n    const texelSize = new THREE.Vector3(1.0 / this.xDim, 1.0 / this.yDim, 1.0 / this.zDim);\r\n    const matAO = new MaterialAO();\r\n    matAO.create(texVolume, texelSize, this.vectorsTex, this.numAOVectors, isoThreshold, (mat) => {\r\n      this.materialAO = mat;\r\n      mat.uniforms.tileCountX.value = this.zTexDivSqrt;\r\n      mat.uniforms.volumeSizeZ.value = this.zDim;\r\n      this.setAmbientTextureWebGL2();\r\n      this.texVolumeAO.needsUpdate = true;\r\n    });\r\n  }\r\n\r\n  setAmbientTextureWebGL2() {\r\n    const VAL_4 = 4;\r\n    const frameBuf = new Uint8Array(VAL_4 * this.xDimAO * this.yDimAO);\r\n    const gl = this.rendererBlur.getContext();\r\n    console.log('AO WebGL2');\r\n    for (let z = 0; z < this.zDimAO; ++z) {\r\n      this.materialAO.uniforms.curZ.value = z / (this.zDimAO - 1);\r\n      this.materialAO.uniforms.curZ.needsUpdate = true;\r\n      this.sceneBlur.overrideMaterial = this.materialAO;\r\n      this.rendererBlur.render(this.sceneBlur, this.cameraOrtho, this.bufferTextureAO);\r\n      this.sceneBlur.overrideMaterial = null;\r\n      gl.readPixels(0, 0, this.xDimAO, this.yDimAO, gl.RGBA, gl.UNSIGNED_BYTE, frameBuf);\r\n      const zOffs = z * this.xDimAO * this.yDimAO;\r\n      for (let y = 0; y < this.yDimAO; y++) {\r\n        for (let x = 0; x < this.xDimAO; x++) {\r\n          this.ambientVolumeTexCPU[x + y * this.xDimAO + zOffs] = \r\n            frameBuf[VAL_4 * (x + y * this.xDimAO)]; //256.0 * k / this.zDim;\r\n        }\r\n      }\r\n    }\r\n    console.log('AO WebGL2 End');\r\n  }\r\n\r\n  get() {\r\n    return this.texVolumeAO;\r\n  }\r\n}\r\n","/* eslint-disable no-magic-numbers */\r\n/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n * 3D volume processing engine: transfer texture\r\n * @module lib/scripts/graphics3d/transferTexture\r\n */\r\nimport * as THREE from 'three';\r\n/** Class for transfer texture computation and rendering */\r\nexport default class TransferTexture {\r\n  constructor() {    \r\n    this.selectedROIs = null;\r\n    this.transferFuncRgba = null;\r\n    this.transferFuncTexture = null;\r\n    this.texRoiColor = null;\r\n    this.texRoiId = null;    \r\n    this.numRois = 256;\r\n    this.m_handleColors = [\r\n      { r: 0, g: 0, b: 0 },\r\n      { r: 255, g: 128, b: 64 },\r\n      { r: 255, g: 0, b: 0 },\r\n      { r: 128, g: 64, b: 64 },\r\n      { r: 128, g: 0, b: 0 },\r\n      { r: 64, g: 64, b: 64 },\r\n      { r: 128, g: 128, b: 128 },\r\n      { r: 192, g: 192, b: 192 },\r\n      { r: 255, g: 255, b: 255 },\r\n      { r: 255, g: 255, b: 255 },\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Filtering the source data and building the normals on the GPU\r\n   * @param isRoiVolume\r\n   * @param roiColors Array of roi colors in RGBA format\r\n   */\r\n  init(isRoiVolume, roiColors) {\r\n    const c4 = 4; \r\n    // eslint-disable-next-line\r\n    this.selectedROIs = new Uint8Array(c4 * this.numRois);\r\n    this.numTfPixels = 256;\r\n    // eslint-disable-next-line\r\n    this.transferFuncRgba = new Uint8Array(c4 * this.numTfPixels);\r\n    this.texRoiColor = null;\r\n    if (isRoiVolume) {\r\n      this.texRoiId = this.createSelectedRoiMap();\r\n      this.texRoiColor = this.createRoiColorMap(roiColors);\r\n    }    \r\n  }\r\n\r\n  /**\r\n   * Create 2D texture containing transfer func colors\r\n  */\r\n  createTransferFuncTexture() {\r\n    let textureOut = null;\r\n    let alpha = 0;\r\n    const SCALE = 255;\r\n    const SCALE1 = 12.0;\r\n    const SCALE2 = 3.0;\r\n    const A1 = 0.09;\r\n    const A2 = 0.2;\r\n    const A3 = 0.3;\r\n    const A4 = 0.43;\r\n    const A5 = 0.53;\r\n    const a1 = A1 * SCALE;\r\n    const a2 = A2 * SCALE;\r\n    const a3 = A3 * SCALE;\r\n    const a4 = A4 * SCALE;\r\n    const a5 = A5 * SCALE;\r\n    const COLOR_R = 255;\r\n    const COLOR_G = 210;\r\n    const COLOR_B = 180;\r\n    const FOUR = 4;\r\n    for (let pix = 0; pix < this.numTfPixels; pix++) {\r\n      if (pix > a1 && pix < a2) {\r\n        alpha = (pix - a1) / (a2 - a1);\r\n      }\r\n      if (pix > a2 && pix < a3) {\r\n        alpha = (a3 - pix) / (a3 - a2);\r\n      }\r\n      if (pix > a4 && pix < a5) {\r\n        alpha = (pix - a4) / (a5 - a4);\r\n      }\r\n      if (pix > a5) {\r\n        alpha = 1;\r\n      }\r\n      // eslint-disable-next-line\r\n      this.transferFuncRgba[pix * FOUR + 0] = SCALE;\r\n      // eslint-disable-next-line\r\n      this.transferFuncRgba[pix * FOUR + 1] = 0;\r\n      // eslint-disable-next-line\r\n      this.transferFuncRgba[pix * FOUR + 1 + 1] = 0;\r\n      // eslint-disable-next-line\r\n      this.transferFuncRgba[pix * FOUR + 1 + 1 + 1] = SCALE * alpha / SCALE1;\r\n      if (pix > a4) {\r\n        this.transferFuncRgba[pix * FOUR + 0] = COLOR_R;\r\n        // eslint-disable-next-line\r\n        this.transferFuncRgba[pix * FOUR + 1] = COLOR_G;\r\n        // eslint-disable-next-line\r\n        this.transferFuncRgba[pix * FOUR + 1 + 1] = COLOR_B;\r\n        this.transferFuncRgba[pix * FOUR + 1 + 1 + 1] = SCALE * alpha / SCALE2;\r\n      }\r\n    }\r\n    textureOut = new THREE.DataTexture(this.transferFuncRgba, this.numTfPixels, 1, THREE.RGBAFormat);\r\n    textureOut.wrapS = THREE.ClampToEdgeWrapping;\r\n    textureOut.wrapT = THREE.ClampToEdgeWrapping;\r\n    textureOut.magFilter = THREE.NearestFilter;\r\n    textureOut.minFilter = THREE.NearestFilter;\r\n    textureOut.needsUpdate = true;\r\n    this.transferFuncTexture = textureOut;\r\n    return textureOut;\r\n  }\r\n\r\n  /**\r\n   * Creates transfer function color map\r\n   * @param ctrlPts Array of control points of type HEX  = color value\r\n   */\r\n  setTransferFuncColors(colors) {\r\n    this.transferFuncCtrlPtsRgb = [];\r\n    for (let i = 0; i < colors.length; i++) {\r\n      this.transferFuncCtrlPtsRgb.push(new THREE.Vector3(colors[i].r, colors[i].g, colors[i].b));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates transfer function color map\r\n   * @param ctrlPts Array of Vector2 where (x,y) = x coordinate in [0, 1], alpha value in [0, 1]\r\n   */\r\n  updateTransferFuncTexture(intensities, opacities) {\r\n    if (this.transferFuncRgba === null) {\r\n      return null;\r\n    }\r\n    for (let curPt = 0; curPt < intensities.length - 1; curPt++) {\r\n      const pixStart = Math.floor(intensities[curPt]);\r\n      const pixEnd = Math.floor(intensities[curPt + 1]);\r\n      for (let pix = pixStart; pix < pixEnd; pix++) {\r\n        const lerpVal = (pix - pixStart) / (pixEnd - pixStart);\r\n        const colorX = (1.0 - lerpVal) * this.m_handleColors[curPt].r + lerpVal * this.m_handleColors[curPt + 1].r\r\n        const colorY = (1.0 - lerpVal) * this.m_handleColors[curPt].g + lerpVal * this.m_handleColors[curPt + 1].g;\r\n        const colorZ = (1.0 - lerpVal) * this.m_handleColors[curPt].b + lerpVal * this.m_handleColors[curPt + 1].b;\r\n        // eslint-disable-next-line\r\n        this.transferFuncRgba[pix * 4 + 0] = colorX;\r\n        // eslint-disable-next-line\r\n        this.transferFuncRgba[pix * 4 + 1] = colorY;\r\n        // eslint-disable-next-line\r\n        this.transferFuncRgba[pix * 4 + 2] = colorZ;\r\n        // eslint-disable-next-line\r\n        const op1 = (opacities[curPt] > 0.0) ? opacities[curPt] : 0.0;\r\n        const op2 = (opacities[curPt + 1] > 0.0) ? opacities[curPt + 1] : 0.0;\r\n        this.transferFuncRgba[pix * 4 + 3] = (op2 * lerpVal + (1.0 - lerpVal) * op1) * 255;\r\n      }\r\n    }\r\n    this.transferFuncTexture.needsUpdate = true;\r\n    return this.transferFuncRgba;\r\n  }\r\n\r\n  /**\r\n   * Create 2D texture containing roi color map\r\n   * @param colorArray 256 RGBA roi colors\r\n   */\r\n  createRoiColorMap(colorArray) {\r\n    let textureOut = null;\r\n    if (colorArray !== null) {\r\n      //textureOut = new THREE.DataTexture(colorArray, this.numRois, 1, THREE.RGBAFormat);\r\n      textureOut = new THREE.DataTexture(colorArray, 256, 1, THREE.RGBAFormat);\r\n    } else {\r\n      // eslint-disable-next-line\r\n      const colorROIs = new Uint8Array(4 * this.numRois);\r\n      for (let pix = 0; pix < this.numRois; pix++) {\r\n        // eslint-disable-next-line\r\n        colorROIs[pix * 4 + 0] = 255;\r\n        // eslint-disable-next-line\r\n        colorROIs[pix * 4 + 1] = 0;\r\n        // eslint-disable-next-line\r\n        colorROIs[pix * 4 + 2] = 0;\r\n        // eslint-disable-next-line\r\n        colorROIs[pix * 4 + 3] = 255;\r\n      }\r\n      textureOut = new THREE.DataTexture(colorROIs, this.numRois, 1, THREE.RGBAFormat);\r\n    }\r\n    textureOut.wrapS = THREE.ClampToEdgeWrapping;\r\n    textureOut.wrapT = THREE.ClampToEdgeWrapping;\r\n    textureOut.magFilter = THREE.NearestFilter;\r\n    textureOut.minFilter = THREE.NearestFilter;\r\n    textureOut.needsUpdate = true;\r\n    return textureOut;\r\n  }\r\n\r\n  /**\r\n   * Create 2D texture containing selected ROIs\r\n   */\r\n  createSelectedRoiMap() {\r\n    const a1 = 50;\r\n    const a2 = 240;\r\n    const c1 = 1;\r\n    const c2 = 2;\r\n    const c3 = 3;\r\n    const BYTES_IN_COLOR = 4;\r\n    for (let pix = 0; pix < this.numRois; pix++) {\r\n      if (pix < a1 || pix > a2) {\r\n        this.selectedROIs[pix * BYTES_IN_COLOR] = 0;\r\n      } else {\r\n        this.selectedROIs[pix * BYTES_IN_COLOR] = 255;\r\n      }\r\n      this.selectedROIs[pix * BYTES_IN_COLOR + c1] = 0;\r\n      this.selectedROIs[pix * BYTES_IN_COLOR + c2] = 0;\r\n      this.selectedROIs[pix * BYTES_IN_COLOR + c3] = 0;\r\n    }\r\n    //const textureOut = new THREE.DataTexture(this.selectedROIs, this.numRois, 1, THREE.RGBAFormat);\r\n    const textureOut = new THREE.DataTexture(this.selectedROIs, 256, 1, THREE.RGBAFormat);\r\n    textureOut.wrapS = THREE.ClampToEdgeWrapping;\r\n    textureOut.wrapT = THREE.ClampToEdgeWrapping;\r\n    textureOut.magFilter = THREE.NearestFilter;\r\n    textureOut.minFilter = THREE.NearestFilter;\r\n    textureOut.needsUpdate = true;\r\n    return textureOut;\r\n  }\r\n\r\n  /**\r\n   * Create 2D texture containing selected ROIs\r\n   * @param selectedROIs 256 byte roi values\r\n   */\r\n  updateSelectedRoiMap(selectedROI) {\r\n    const roiTexelBpp = 4;\r\n    const roiSelectedTrue = 255;\r\n    const roiSelectedFalse = 0;\r\n    for (let pix = 0; pix < this.numRois; pix++) {\r\n      if (selectedROI[pix]) {\r\n        this.selectedROIs[pix * roiTexelBpp] = roiSelectedTrue;\r\n      } else {\r\n        this.selectedROIs[pix * roiTexelBpp] = roiSelectedFalse;\r\n      }\r\n    }\r\n    this.texRoiId.needsUpdate = true;\r\n    //this.setVolumeTexture(1.0);\r\n  }\r\n  /**\r\n   * Update roi selection map\r\n   * @param roiId ROI id from 0..255\r\n   * @param selectedState True if roi must be visible\r\n   */\r\n  // eslint-disable-next-line\r\n  updateSelectedRoi(roiId, selectedState) {\r\n    const roiTexelBpp = 4;\r\n    const roiChecked = 255;\r\n    const roiUnchecked = 0;\r\n    if (selectedState) {\r\n      this.selectedROIs[roiTexelBpp * roiId] = roiChecked;\r\n    } else {\r\n      this.selectedROIs[roiTexelBpp * roiId] = roiUnchecked;\r\n    }\r\n    console.log(`initMatBlure: ${this.initMatBlure}`);\r\n    this.texRoiId.needsUpdate = true;\r\n    //this.setVolumeTexture(1.0);\r\n  }\r\n} // class TransferTexture\r\n","/**\r\n * @fileOverview Eraser\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n// ********************************************************\r\n// Imports\r\n// ********************************************************/**\r\nimport * as THREE from 'three';\r\n// ********************************************************\r\n// Class Eraser is used for erasing of volume data part\r\n// ********************************************************\r\nexport default class Eraser {\r\n  constructor() {\r\n    this.bufferBF = null;\r\n    this.bufferFF = null;\r\n    this.bufferRenderToTexture = null;\r\n    this.isoThreshold = 0;\r\n    this.volTextureMask = null;\r\n    this.geometry = null;\r\n    this.lastSize = [];\r\n    this.lastDepth = [];\r\n    this.lastRotationVector = [];\r\n    this.lastTarget = [];\r\n    this.lastMode = [];\r\n    this.lastBackDistance = [];\r\n    this.resetflag = false;\r\n    this.bufferTextureCPU = null;\r\n  }\r\n\r\n  createUpdatableVolumeMask(params, buff) {\r\n    this.xDim = params.xDim;\r\n    this.yDim = params.yDim;\r\n    this.zDim = params.zDim;\r\n    this.bufferBF = params.bufBF;\r\n    this.bufferFF = params.bufFF;\r\n    this.bufferRenderToTexture = params.bufTex;\r\n    this.bufferMask = new Uint8Array(this.xDim * this.yDim * this.zDim);\r\n    this.bufferTextureCPU = buff;\r\n    for (let z = 0; z < this.zDim; z++) {\r\n      for (let y = 0; y < this.yDim; y++) {\r\n        for (let x = 0; x < this.xDim; x++) {\r\n          this.bufferMask[x + y * this.xDim + z * this.xDim * this.yDim] = 255;\r\n        }\r\n      }\r\n    }\r\n    if (this.updatableTextureMask) {\r\n      this.updatableTextureMask.dispose();\r\n    }\r\n    this.updatableTextureMask = new THREE.DataTexture3D(this.bufferMask, this.xDim, this.yDim, this.zDim);\r\n    this.updatableTextureMask.format = THREE.RedFormat;\r\n    this.updatableTextureMask.type = THREE.UnsignedByteType;\r\n    this.updatableTextureMask.wrapS = THREE.ClampToEdgeWrapping;\r\n    this.updatableTextureMask.wrapT = THREE.ClampToEdgeWrapping;\r\n    this.updatableTextureMask.magFilter = THREE.LinearFilter;\r\n    this.updatableTextureMask.minFilter = THREE.LinearFilter;\r\n    this.updatableTextureMask.needsUpdate = true;\r\n    return this.updatableTextureMask;\r\n  }\r\n\r\n  eraseStart(xx, yy, windowWidth, isoThreshold, startflag) {\r\n    this.isoThreshold = isoThreshold;\r\n    const x = Math.round(xx);\r\n    const y = Math.round(yy);\r\n    this.eraserMouseDown = true;\r\n    const OFF0 = 0;\r\n    const OFF1 = 1;\r\n    const OFF2 = 2;\r\n    const OFF3 = 3;\r\n    const GPU_CELL_SIZE = 4;\r\n    const cellInd = (y * windowWidth + x) * GPU_CELL_SIZE;\r\n    const THREE3 = 3;\r\n    const bigCellInd = (Math.floor(y / THREE3) * Math.floor(windowWidth / THREE3) +\r\n      Math.floor(x / THREE3)) * GPU_CELL_SIZE;\r\n    const dist = this.bufferRenderToTexture[bigCellInd + OFF3];\r\n    const NO_MATERIAL = 2;\r\n    if (dist === NO_MATERIAL) {\r\n      return;\r\n    }\r\n    let vX = this.bufferBF[cellInd + OFF0] - this.bufferFF[cellInd + OFF0];\r\n    let vY = this.bufferBF[cellInd + OFF1] - this.bufferFF[cellInd + OFF1];\r\n    let vZ = this.bufferBF[cellInd + OFF2] - this.bufferFF[cellInd + OFF2];\r\n    const vDir = new THREE.Vector3(vX, vY, vZ);\r\n    const length = Math.sqrt(vX * vX + vY * vY + vZ * vZ);\r\n    const COORD_SHIFT = 0.5;\r\n    vX = vX / length * dist + COORD_SHIFT + this.bufferFF[cellInd + OFF0];\r\n    vY = vY / length * dist + COORD_SHIFT + this.bufferFF[cellInd + OFF1];\r\n    vZ = vZ / length * dist + COORD_SHIFT + this.bufferFF[cellInd + OFF2];\r\n    this.erasePixels(vX, vY, vZ, vDir, startflag, dist);\r\n    this.updatableTextureMask.needsUpdate = true;\r\n  }\r\n\r\n  onMouseUp() {\r\n    this.orbitControl.onMouseUp();\r\n    this.lockEraserBuffersUpdating = false;\r\n    this.eraserMouseDown = false;\r\n    this.renderState = this.RENDER_STATE.ONCE;\r\n  }\r\n\r\n  setEraserRadius(radius) {\r\n    this.radius = radius;\r\n  }\r\n\r\n  setEraserDepth(depth) {\r\n    this.depth = depth;\r\n  }\r\n\r\n  erasePixels(x_, y_, z_, vDir, startflag, length) {\r\n    const targetX = Math.floor(x_ * this.xDim);\r\n    const targetY = Math.floor(y_ * this.yDim);\r\n    const targetZ = Math.floor(z_ * this.zDim);\r\n    const normal = new THREE.Vector3();\r\n    const normalGauss = new THREE.Vector3();\r\n    const GAUSS_R = 2;\r\n    const SIGMA = 1.4;\r\n    const SIGMA2 = SIGMA * SIGMA;\r\n    let nX = 0;\r\n    let nY = 0;\r\n    let nZ = 0;\r\n    let normFactor = 0;\r\n    let offDst = 0;\r\n    const VAL_2 = 2; // getting normal of surface\r\n    for (let k = -Math.min(GAUSS_R, targetZ); k <= Math.min(GAUSS_R, this.zDim - 1 - targetZ); k++) {\r\n      for (let j = -Math.min(GAUSS_R, targetY); j <= Math.min(GAUSS_R, this.yDim - 1 - targetY); j++) {\r\n        for (let i = -Math.min(GAUSS_R, targetX); i <= Math.min(GAUSS_R, this.xDim - 1 - targetX); i++) {\r\n          // handling voxel: (targetX + i; ,targetY+ j; targetZ + k);\r\n          const gX = targetX + i;\r\n          const gY = targetY + j;\r\n          const gZ = targetZ + k;\r\n          offDst = gX + gY * this.xDim + gZ * this.xDim * this.yDim;\r\n          const gauss = 1 - Math.exp(-(i * i + j * j + k * k) / (VAL_2 * SIGMA2));\r\n          normFactor += gauss;\r\n          const curVal = this.bufferTextureCPU[offDst];\r\n          nX += curVal * gauss * (-i / SIGMA2);\r\n          nY += curVal * gauss * (-j / SIGMA2);\r\n          nZ += curVal * gauss * (-k / SIGMA2);\r\n        }\r\n      }\r\n    }// end gauss summation\r\n    normalGauss.set(nX / normFactor, nY / normFactor, nZ / normFactor);\r\n    normal.copy(normalGauss);\r\n    normal.normalize();\r\n    const pi = 180;// pi (just for console output)\r\n    const radiusRatio = this.xDim / this.zDim;\r\n    const geometry = new THREE.CylinderGeometry(this.radius, this.radius, this.depth, pi, this.depth);\r\n    const mesh = new THREE.Mesh(geometry, null);\r\n    const axis = new THREE.Vector3(0, 0, 1);\r\n    mesh.quaternion.setFromUnitVectors(axis, normal.clone().normalize().multiplyScalar(-1));\r\n    mesh.position.copy(new THREE.Vector3(targetX, targetY, targetZ));\r\n\r\n    if (startflag === true) {\r\n      this.prevDistance = length;\r\n      this.resetflag = false;\r\n    }\r\n    const radius = 0.05;\r\n    if (this.resetflag === false) {\r\n      if (Math.abs(this.prevDistance - length) < radius) {\r\n        this.prevDistance = length;\r\n        this.point = new THREE.Vector3(0, 0, 0);\r\n        this.queue = [];\r\n        this.queue.push(this.point);\r\n        const normalBack = -5;\r\n        let backZ = 0;\r\n        backZ = normalBack;\r\n        let deleteflag = false;\r\n        while (this.queue.length > 0) {\r\n          this.point = this.queue.pop();\r\n          const RotPoint = this.point.clone();\r\n          RotPoint.z *= radiusRatio;\r\n          RotPoint.applyAxisAngle(new THREE.Vector3(1, 0, 0), -mesh.rotation.x);\r\n          RotPoint.applyAxisAngle(new THREE.Vector3(0, 1, 0), -mesh.rotation.y);\r\n          RotPoint.applyAxisAngle(new THREE.Vector3(0, 0, 1), mesh.rotation.z);\r\n          if (Math.sqrt(RotPoint.x * RotPoint.x + RotPoint.y * RotPoint.y) > this.radius ||\r\n            Math.abs(RotPoint.z) > this.depth || RotPoint.z < backZ) {\r\n            continue;\r\n          }\r\n          for (let x = this.point.x - 1; x <= this.point.x + 1; x++) {\r\n            for (let y = this.point.y - 1; y <= this.point.y + 1; y++) {\r\n              for (let z = this.point.z - 1; z <= this.point.z + 1; z++) {\r\n                const mainX = targetX + Math.round(x);\r\n                const mainY = targetY + Math.round(y);\r\n                const mainZ = targetZ + Math.round(z);\r\n                offDst = mainX + mainY * this.xDim + mainZ * this.xDim * this.yDim;\r\n                if (this.bufferMask[offDst] === 0) {\r\n                  continue;\r\n                }\r\n                const bitconst = 255.0;\r\n                const borderinclude = 0.01;\r\n                const isoSurfaceBorder = this.isoThreshold * bitconst - borderinclude * bitconst;\r\n                if (this.bufferTextureCPU[offDst] >= isoSurfaceBorder) {\r\n                  deleteflag = true;\r\n                  this.bufferMask[offDst] = 0;\r\n                  this.queue.push(new THREE.Vector3(x, y, z));\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (deleteflag === true) {\r\n          this.lastSize.push(this.radius);\r\n          this.lastDepth.push(this.depth);\r\n          this.lastRotationVector.push(new THREE.Vector3(-mesh.rotation.x, -mesh.rotation.y, mesh.rotation.z));\r\n          this.lastTarget.push(new THREE.Vector3(targetX, targetY, targetZ));\r\n          this.lastBackDistance.push(-Math.round(Math.abs(Math.tan(vDir.normalize().angleTo(normalGauss.normalize())))\r\n            * (this.radius)));\r\n        } \r\n        this.updatableTextureMask.needsUpdate = true;\r\n        \r\n      } else {\r\n        this.resetflag = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  undoLastErasing() {\r\n    if (this.lastSize.length === 0) {\r\n      return;\r\n    }\r\n    const targetLast = this.lastTarget.pop();\r\n    const lastRotation = this.lastRotationVector.pop();\r\n    const rxy = Math.round(this.lastSize.pop());\r\n    const lastDepth = this.lastDepth.pop();\r\n    const lastback = this.lastBackDistance.pop();\r\n    const radiusRatio = this.xDim / this.zDim;\r\n    this.point = new THREE.Vector3(0, 0, 0);\r\n    this.queue = [];\r\n    this.queue.push(this.point);\r\n    while (this.queue.length > 0) {\r\n      this.point = this.queue.pop();\r\n      const RotPoint = this.point.clone();\r\n      RotPoint.z *= radiusRatio;\r\n      RotPoint.applyAxisAngle(new THREE.Vector3(1, 0, 0), lastRotation.x);\r\n      RotPoint.applyAxisAngle(new THREE.Vector3(0, 1, 0), lastRotation.y);\r\n      RotPoint.applyAxisAngle(new THREE.Vector3(0, 0, 1), lastRotation.z);\r\n      if (Math.sqrt(RotPoint.x * RotPoint.x + RotPoint.y * RotPoint.y) > rxy ||\r\n        RotPoint.z > lastDepth || RotPoint.z < lastback) {\r\n        continue;\r\n      }\r\n      let offDst = 0;\r\n      for (let x = this.point.x - 1; x <= this.point.x + 1; x++) {\r\n        for (let y = this.point.y - 1; y <= this.point.y + 1; y++) {\r\n          for (let z = this.point.z - 1; z <= this.point.z + 1; z++) {\r\n            const mainX = targetLast.x + Math.round(x);\r\n            const mainY = targetLast.y + Math.round(y);\r\n            const mainZ = targetLast.z + Math.round(z);\r\n            offDst = mainX + mainY * this.xDim + mainZ * this.xDim * this.xDim;\r\n            if (this.bufferMask[offDst] === 0) {\r\n              this.bufferMask[offDst] = 255.0;\r\n              this.queue.push(new THREE.Vector3(x, y, z));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.updatableTextureMask.needsUpdate = true;\r\n  }\r\n} // class Eraser\r\n","\r\n/**\r\n * 3D volume processing engine: blur, contrast filter\r\n * @module lib/scripts/graphics3d/volumeFilter3d\r\n */\r\n\r\nimport * as THREE from 'three';\r\nimport MaterialBlur from './gfx/matblur';\r\nimport GlSelector from './GlSelector';\r\nimport AmbientTexture from './ambientTexture';\r\nimport TransferTexture from './transferTexture'\r\nimport Eraser from './Eraser';\r\n/** Class VolumeFilter3d is used for 3d render */\r\nexport default class VolumeFilter3d {\r\n  constructor() {\r\n    this.transferFunc = null;\r\n    this.xDim = 0;\r\n    this.yDim = 0;\r\n    this.zDim = 0;\r\n    this.bufferTextureCPU = null;\r\n    this.eraser = null;\r\n  }\r\n\r\n  /**\r\n   * Filtering the source data and building the normals on the GPU\r\n   * @param isRoiVolume\r\n   * @param roiColors Array of roi colors in RGBA format\r\n   */\r\n  initRenderer(isRoiVolume, roiColors) {\r\n    this.sceneBlur = new THREE.Scene();\r\n    const blurSigma = 0.8;\r\n    this.numRois = 256;\r\n    // eslint-disable-next-line\r\n    this.cameraOrtho = new THREE.OrthographicCamera(this.xDim / -2, this.xDim / 2, this.yDim / 2, this.yDim / -2, 0.1, 100);\r\n    const glSelector = new GlSelector();\r\n    this.context = glSelector.createWebGLContext();\r\n    this.canvas3d = glSelector.getCanvas();\r\n    this.rendererBlur = new THREE.WebGLRenderer({\r\n      canvas: this.canvas3d,\r\n      context: this.context\r\n    });\r\n    this.ambientTexture = new AmbientTexture({\r\n      xDim: this.xDim,\r\n      yDim: this.yDim,\r\n      zDim: this.zDim,\r\n      renderer: this.rendererBlur,\r\n      scene: this.sceneBlur,\r\n      camera: this.cameraOrtho,\r\n    });\r\n\r\n    console.log('rendererBlur done');\r\n    const geometryBlur = new THREE.PlaneGeometry(1.0, 1.0);\r\n    this.rendererBlur.setSize(this.xDim, this.yDim);\r\n    //\r\n    this.transferFunc = new TransferTexture();\r\n    this.transferFunc.init(isRoiVolume, roiColors);\r\n    const texelSize = new THREE.Vector3(1.0 / this.xDim, 1.0 / this.yDim, 1.0 / this.zDim);\r\n    const matBlur = new MaterialBlur();\r\n\r\n    matBlur.create(this.origVolumeTex, this.RoiVolumeTex, texelSize, this.transferFunc.texRoiColor, this.transferFunc.texRoiId, (mat) => {\r\n      const mesh = new THREE.Mesh(geometryBlur, mat);\r\n      mat.uniforms.volumeSizeZ.value = this.zDim;\r\n      mat.uniforms.xDim.value = this.xDim;\r\n      mat.uniforms.yDim.value = this.yDim;\r\n      mat.defines.useWebGL2 = this.isWebGL2;\r\n      this.material = mat;\r\n      this.sceneBlur.add(mesh);\r\n      if (isRoiVolume === false) {\r\n        this.switchToBlurRender();\r\n      } else {\r\n        this.switchToRoiMapRender();\r\n      }\r\n      // render with blur and copy pixels back to this.bufferRgba\r\n      console.log(`isRoiVolume: ${isRoiVolume}`);\r\n      this.setVolumeTexture(blurSigma);\r\n    });\r\n    this.vectorsTex = null;\r\n  }\r\n\r\n  /**\r\n   * Create 2D texture containing transfer func colors\r\n  */\r\n  createTransferFuncTexture() {\r\n    if (this.transferFunc !== null) {\r\n      return this.transferFunc.createTransferFuncTexture();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Creates transfer function color map\r\n   * @param ctrlPts Array of control points of type HEX  = color value\r\n   */\r\n  setTransferFuncColors(ctrlPtsColorsHex) {\r\n    this.transferFunc.setTransferFuncColors(ctrlPtsColorsHex);\r\n  }\r\n\r\n  /**\r\n   * Creates transfer function color map\r\n   * @param ctrlPts Array of Vector2 where (x,y) = x coordinate in [0, 1], alpha value in [0, 1]\r\n   * //intensity [0,255] opacity [0,1]\r\n   */\r\n  updateTransferFuncTexture(intensities, opacities) {\r\n    return this.transferFunc.updateTransferFuncTexture(intensities, opacities);\r\n  }\r\n\r\n  /**\r\n   * Setting a variable for conditional compilation (Roi Render)\r\n   */\r\n  switchToRoiMapRender() {\r\n    this.material.defines.renderRoiMap = 1;\r\n    this.material.needsUpdate = true;\r\n  }\r\n\r\n  /**\r\n   * Setting a variable for conditional compilation (Blur)\r\n   */\r\n  switchToBlurRender() {\r\n    this.material.defines.renderRoiMap = 0;\r\n    this.material.needsUpdate = true;\r\n  }\r\n\r\n  /**\r\n   * Filtering the source data and building the normals on the GPU\r\n   * @param blurSigma Gauss sigma parameter\r\n   */\r\n  setVolumeTexture(blurSigma) {\r\n    if ((!this.material) || (typeof this.material === 'undefined')) {\r\n      console.log('blur material null');\r\n      return;\r\n    }\r\n    console.log('blur material NOT null');\r\n    this.setVolumeTextureWebGL2(blurSigma);\r\n    this.updatableTexture.needsUpdate = true;\r\n  }\r\n\r\n  updateVolumeTextureWithMask() {\r\n    if (this.eraser.bufferMask === null){\r\n      console.log('volTextureMask null');\r\n    }\r\n    for (let z = 0; z < this.zDim; z++) {\r\n      const zVolOff = z * this.xDim * this.yDim;\r\n      for (let y = 0; y < this.yDim; y++) {\r\n        const yVol = y;\r\n        const yVolOff = yVol * this.xDim;\r\n        for (let x = 0; x < this.xDim; x++) {\r\n          const xVol = x;\r\n          const offSrc = (xVol + yVolOff + zVolOff);\r\n          let valInt = this.arrPixels[offSrc];\r\n          const offDst = offSrc;\r\n          if ((this.zDim > 5) && ((z === 0) || (z === this.zDim - 1) || (this.eraser.bufferMask[offSrc] === 0))) {\r\n            valInt = 0;\r\n          }\r\n          this.bufferR[offDst] = valInt;\r\n        }\r\n      }\r\n    }\r\n    this.origVolumeTex.needsUpdate = true;\r\n    this.setVolumeTexture(1.0);\r\n  }\r\n\r\n  setVolumeTextureWebGL2(blurSigma) {\r\n    this.material.uniforms.blurSigma.value = blurSigma;\r\n    this.material.uniforms.blurSigma.needsUpdate = true;\r\n    const VAL_1 = 1;\r\n    const VAL_2 = 2;\r\n    const VAL_3 = 3;\r\n    const VAL_4 = 4;\r\n    const frameBuf = new Uint8Array(VAL_4 * this.xDim * this.yDim);\r\n    const gl = this.rendererBlur.getContext();\r\n    for (let z = 1; z < this.zDim - 1; ++z) {\r\n      this.material.uniforms.curZ.value = z / this.zDim;\r\n      this.material.uniforms.curZ.needsUpdate = true;\r\n\r\n      this.rendererBlur.render(this.sceneBlur, this.cameraOrtho, this.bufferTexture);\r\n      gl.readPixels(0, 0, this.xDim, this.yDim, gl.RGBA, gl.UNSIGNED_BYTE, frameBuf);\r\n      const zOffs = z * this.xDim * this.yDim;\r\n      for (let y = 0; y < this.yDim; y++) {\r\n        for (let x = 0; x < this.xDim; x++) {\r\n          if (this.isRoiVolume) {\r\n            const indxR = VAL_4 * (x + y * this.xDim);\r\n            const indxL = indxR + zOffs * VAL_4;\r\n            this.bufferTextureCPU[indxL] = frameBuf[indxR];\r\n            this.bufferTextureCPU[indxL + VAL_1] = frameBuf[indxR + VAL_1];\r\n            this.bufferTextureCPU[indxL + VAL_2] = frameBuf[indxR + VAL_2];\r\n            this.bufferTextureCPU[indxL + VAL_3] = frameBuf[indxR + VAL_3];\r\n          } else {\r\n            this.bufferTextureCPU[x + y * this.xDim + zOffs] =\r\n            frameBuf[VAL_4 * (x + y * this.xDim)]; //256.0 * k / this.zDim;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Copies the source data into the buffer (bufferRgba) from which the 3� texture is created\r\n   */\r\n  set3DTextureFrom1Byte() {\r\n    const OFF0 = 0;\r\n    this.bufferTextureCPU = new Uint8Array(this.xDim * this.yDim * this.zDim);\r\n    this.bufferR = new Uint8Array(this.xDim * this.yDim * this.zDim);\r\n    // Fill initial rgba array\r\n    for (let z = 0; z < this.zDim; z++) {\r\n      const zVolOff = z * this.xDim * this.yDim;\r\n      for (let y = 0; y < this.yDim; y++) {\r\n        const yVol = y;\r\n        const yVolOff = yVol * this.xDim;\r\n        for (let x = 0; x < this.xDim; x++) {\r\n          const xVol = x;\r\n          const offSrc = (xVol + yVolOff + zVolOff);\r\n          let valInt = this.arrPixels[offSrc + 0];\r\n          const offDst = offSrc;\r\n          if (this.zDim > 5 && (z === 0 || z === this.zDim - 1)) {\r\n            valInt = 0;\r\n          }\r\n          this.bufferR[offDst + OFF0] = valInt;\r\n          this.bufferTextureCPU[offDst + OFF0] = valInt;\r\n        }\r\n      }\r\n    }\r\n    console.log('setBufferRgbaFrom1Bytes for 3d texture');\r\n  }\r\n\r\n  /**\r\n   * Copies the source data into the buffer (bufferRgba) from which the 3� texture is created\r\n   */\r\n  set3DTextureFrom4Bytes() {\r\n    const OFF0 = 0;\r\n    const OFF1 = 1;\r\n    const OFF2 = 2;\r\n    const OFF3 = 3;\r\n    const BID = 4;\r\n    if (this.isRoiVolume) {\r\n      this.bufferRoi = new Uint8Array(this.xDim * this.yDim * this.zDim);\r\n      this.bufferTextureCPU = new Uint8Array(BID * this.xDim * this.yDim * this.zDim);\r\n      console.log('ROI');\r\n    }\r\n    this.bufferR = new Uint8Array(this.xDim * this.yDim * this.zDim);\r\n    // Fill initial rgba array\r\n    for (let z = 0; z < this.zDim; z++) {\r\n      const zVolOff = z * this.xDim * this.yDim;\r\n      for (let y = 0; y < this.yDim; y++) {\r\n        const yVol = y;\r\n        const yVolOff = yVol * this.xDim;\r\n        for (let x = 0; x < this.xDim; x++) {\r\n          const xVol = x;\r\n\r\n          const offSrc = (xVol + yVolOff + zVolOff) * BID;\r\n          const valInt = this.arrPixels[offSrc + 0];\r\n          const valRoi = this.arrPixels[offSrc + OFF3];\r\n          //const valRoi = this.arrPixels[offSrc + 0];\r\n          //const valInt = this.arrPixels[offSrc + OFF3];\r\n          const offDst = xVol + yVolOff + zVolOff;\r\n          //if (x === 0 || x === this.xDim - 1 || y === 0 || y === this.yDim - 1 || z === 0 || z === this.zDim - 1)\r\n          if (x < 2 || x > this.xDim - 4 || y < 2 || y > this.yDim - 4 || z < 2 || z > this.zDim - 4)\r\n            this.bufferR[offDst + OFF0] = 0;\r\n          else\r\n            this.bufferR[offDst + OFF0] = valInt;\r\n          this.bufferTextureCPU[BID * offDst + OFF0] = valInt;\r\n          this.bufferTextureCPU[BID * offDst + OFF1] = valInt;\r\n          this.bufferTextureCPU[BID * offDst + OFF2] = valInt;\r\n          this.bufferTextureCPU[BID * offDst + OFF3] = valInt;\r\n          this.bufferRoi[offDst + OFF0] = valRoi;\r\n        }\r\n      }\r\n    }\r\n    console.log('setBufferRgbaFrom4Bytes for 3D texture');\r\n  }\r\n\r\n  /**\r\n   * Create 2D texture containing roi color map\r\n   * @param colorArray 256 RGBA roi colors\r\n   */\r\n  createRoiColorMap(colorArray) {\r\n    return this.transferFunc.createRoiColorMap(colorArray);\r\n  }\r\n\r\n  /**\r\n   * Create 2D texture containing selected ROIs\r\n   * @param colorArray 256 RGBA roi colors\r\n   */\r\n  createSelectedRoiMap() {\r\n    return this.createSelectedRoiMap();\r\n  }\r\n\r\n  /**\r\n   * Create 2D texture containing selected ROIs\r\n   * @param selectedROIs 256 byte roi values\r\n   */\r\n  updateSelectedRoiMap(selectedROIs) {\r\n    this.transferFunc.updateSelectedRoiMap(selectedROIs);\r\n    this.setVolumeTexture(1.0);\r\n  }\r\n  /**\r\n   * Update roi selection map\r\n   * @param roiId ROI id from 0..255\r\n   * @param selectedState True if roi must be visible\r\n   */\r\n  // eslint-disable-next-line\r\n  updateSelectedRoi(roiId, selectedState) {\r\n    this.transferFunc.updateSelectedRoi(roiId, selectedState);\r\n    this.setVolumeTexture(1.0);\r\n  }\r\n\r\n  /**\r\n   * Create 3D texture containing filtered source data and calculated normal values\r\n   * @param props An object that contains all volume-related info\r\n   * @param\r\n\r\n   * @param roiColors Array of roi colors in RGBA format\r\n   * @return (object) Created texture\r\n   */\r\n  createUpdatableVolumeTex(volume, isRoiVolume, roiColors) {\r\n    this.isWebGL2 = 1;\r\n    this.arrPixels = volume.m_dataArray;\r\n    const xDim = volume.m_xDim;\r\n    const yDim = volume.m_yDim;\r\n    const zDim = volume.m_zDim;\r\n    this.xDim = xDim;\r\n    this.yDim = yDim;\r\n    this.zDim = zDim;\r\n    this.isRoiVolume = isRoiVolume;\r\n\r\n    this.RoiVolumeTex = null;\r\n    if (!isRoiVolume) {\r\n      this.set3DTextureFrom1Byte();\r\n    } else {\r\n      this.set3DTextureFrom4Bytes();\r\n      this.RoiVolumeTex = new THREE.DataTexture3D(this.bufferRoi, this.xDim, this.yDim, this.zDim);\r\n      this.RoiVolumeTex.format = THREE.RedFormat; //RedFormat?\r\n      this.RoiVolumeTex.type = THREE.UnsignedByteType;\r\n      this.RoiVolumeTex.wrapS = THREE.ClampToEdgeWrapping;\r\n      this.RoiVolumeTex.wrapT = THREE.ClampToEdgeWrapping;\r\n      this.RoiVolumeTex.magFilter = THREE.NearestFilter;\r\n      this.RoiVolumeTex.minFilter = THREE.NearestFilter;\r\n      this.RoiVolumeTex.needsUpdate = true;\r\n    }\r\n    this.bufferTexture = new THREE.WebGLRenderTarget(this.xDim,\r\n      this.yDim, {\r\n        minFilter: THREE.LinearFilter,\r\n        magFilter: THREE.LinearFilter,\r\n        format: THREE.RGBAFormat,\r\n        type: THREE.UnsignedByteType,\r\n        depthBuffer: false,\r\n      });\r\n\r\n    if (this.origVolumeTex) {\r\n      this.origVolumeTex.dispose();\r\n    }\r\n\r\n    this.origVolumeTex = new THREE.DataTexture3D(this.bufferR, this.xDim, this.yDim, this.zDim);\r\n    this.origVolumeTex.format = THREE.RedFormat;\r\n    this.origVolumeTex.type = THREE.UnsignedByteType;\r\n    this.origVolumeTex.wrapR = THREE.ClampToEdgeWrapping;\r\n    this.origVolumeTex.wrapS = THREE.ClampToEdgeWrapping;\r\n    this.origVolumeTex.wrapT = THREE.ClampToEdgeWrapping;\r\n    this.origVolumeTex.magFilter = THREE.NearestFilter;//THREE.LinearFilter;\r\n    this.origVolumeTex.minFilter = THREE.NearestFilter;//THREE.LinearFilter;\r\n    this.origVolumeTex.needsUpdate = true;\r\n\r\n    let volTexFormat = THREE.RedFormat;\r\n    if (isRoiVolume) {\r\n      volTexFormat = THREE.RGBAFormat;\r\n    }\r\n    this.updatableTexture = new THREE.DataTexture3D(this.bufferTextureCPU, this.xDim, this.yDim, this.zDim);\r\n    this.updatableTexture.format = volTexFormat;\r\n    this.updatableTexture.type = THREE.UnsignedByteType;\r\n    this.updatableTexture.wrapR = THREE.ClampToEdgeWrapping;\r\n    this.updatableTexture.wrapS = THREE.ClampToEdgeWrapping;\r\n    this.updatableTexture.wrapT = THREE.ClampToEdgeWrapping;\r\n    this.updatableTexture.magFilter = THREE.LinearFilter;\r\n    this.updatableTexture.minFilter = THREE.LinearFilter;\r\n    if (this.zDim > 1) {\r\n      this.initRenderer(isRoiVolume, roiColors);\r\n    }\r\n    this.updatableTexture.needsUpdate = true;\r\n    this.eraser = new Eraser();\r\n    return this.updatableTexture;\r\n  }\r\n\r\n  /**\r\n   * Create 3D texture containing mask of data which were erase\r\n   * @param volume An object that contains all volume-related info\r\n   * @return (object) Created texture\r\n   */\r\n  createUpdatableVolumeMask(params) {\r\n    return this.eraser.createUpdatableVolumeMask(params, this.bufferTextureCPU);\r\n  }\r\n} // class VolumeFilter3d\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* 2d text render\r\n* @module lib/scripts/graphics2d/text2d\r\n*/\r\n\r\nimport * as THREE from 'three';\r\n\r\nimport CanvasText from './canvastext';\r\n\r\n/** Class Text2D is used for render text to canvas via HTML5 interface */\r\nexport default class Text2D extends THREE.Object3D {\r\n  constructor(strText) {\r\n    super();\r\n    this.m_canvas = new CanvasText();\r\n    this.m_align = new THREE.Vector2(0, 0);\r\n    this.m_side = THREE.DoubleSide;\r\n    this.m_antialias = true;\r\n    this.m_text = strText;\r\n  }\r\n\r\n  getText() {\r\n    return this.m_text;\r\n  }\r\n\r\n  setText(val) {\r\n    if (this.m_text !== val) {\r\n      this.m_text = val;\r\n      this.updateText();\r\n    }\r\n  }\r\n\r\n  getFont() {\r\n    return this.m_font;\r\n  }\r\n\r\n  updateText() {\r\n    console.log(`Use virtual method for ${this.m_text}`);\r\n  }\r\n\r\n  cleanUp() {\r\n    if (this.texture) {\r\n      this.texture.dispose();\r\n    }\r\n  }\r\n\r\n  applyAntiAlias() {\r\n    if (this.antialias === false) {\r\n      this.texture.magFilter = THREE.NearestFilter;\r\n      this.texture.minFilter = THREE.LinearMipMapLinearFilter;\r\n    }\r\n  }\r\n}\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Mesh with 2d text\r\n* @module lib/scripts/graphics2d/meshtext2d\r\n*/\r\n\r\nimport * as THREE from 'three';\r\n\r\nimport Text2D from './text2d';\r\nimport MaterialTexturePlain2d from '../gfx/mattplain';\r\n\r\nexport default class MeshText2D extends Text2D {\r\n  constructor(strText) {\r\n    super(strText);\r\n    this.m_mesh = null;\r\n    this.m_material = null;\r\n    this.m_renderedTextHeight = 0.0;\r\n    this.m_xMin = 3.0;\r\n    this.m_xMax = -3.0;\r\n    this.m_yMin = 3.0;\r\n    this.m_yMax = -3.0;\r\n  }\r\n\r\n  static getXMin(xc, xAlign, psx) {\r\n    if (xAlign === MeshText2D.ALIGN_LEFT) {\r\n      return xc;\r\n    } else if (xAlign === MeshText2D.ALIGN_RIGHT) {\r\n      return xc - psx;\r\n    } else if (xAlign === MeshText2D.ALIGN_CENTER) {\r\n      return xc - psx * 0.5;\r\n    }\r\n    return 0.0;\r\n  }\r\n\r\n  static getXMax(xc, xAlign, psx) {\r\n    if (xAlign === MeshText2D.ALIGN_LEFT) {\r\n      return xc + psx;\r\n    } else if (xAlign === MeshText2D.ALIGN_RIGHT) {\r\n      return xc;\r\n    } else if (xAlign === MeshText2D.ALIGN_CENTER) {\r\n      return xc + psx * 0.5;\r\n    }\r\n    return 0.0;\r\n  }\r\n\r\n  static getYMin(yc, yAlign, psy) {\r\n    if (yAlign === MeshText2D.ALIGN_TOP) {\r\n      return yc - psy;\r\n    } else if (yAlign === MeshText2D.ALIGN_BOTTOM) {\r\n      return yc;\r\n    } else if (yAlign === MeshText2D.ALIGN_CENTER) {\r\n      return yc - psy * 0.5;\r\n    }\r\n    return 0.0;\r\n  }\r\n\r\n  static getYMax(yc, yAlign, psy) {\r\n    if (yAlign === MeshText2D.ALIGN_TOP) {\r\n      return yc;\r\n    } else if (yAlign === MeshText2D.ALIGN_BOTTOM) {\r\n      return yc + psy;\r\n    } else if (yAlign === MeshText2D.ALIGN_CENTER) {\r\n      return yc + psy * 0.5;\r\n    }\r\n    return 0.0;\r\n  }\r\n\r\n  getRenderedTextHeight() {\r\n    return this.m_renderedTextHeight;\r\n  }\r\n\r\n  /**\r\n  * Update text 2d object: create mesh in desired position, content and width\r\n  * @param (object) container - object container for 3d rendering\r\n  * @param (int) xc - text anchor x coordinate\r\n  * @param (int) yc - text anchor y coordinate\r\n  * @param (float) letterHeight - single letter height in range [-1..+1]\r\n  * @param (string ) strTextBackColor - Background color, like rgba(255, 0, 0, 255), i.e. red color\r\n  */\r\n  updateText(xc, yc, letterHeight, xAlign, yAlign, strTextBackColor, strTextColor) {\r\n    // console.log('MeshText2D.updateText()...');\r\n    this.cleanUp();\r\n\r\n    if (this.m_mesh !== null) {\r\n      this.remove(this.m_mesh);\r\n      this.m_mesh = null;\r\n      this.m_material = null;\r\n    }\r\n\r\n    this.m_canvas.drawText(this.m_text, strTextColor);\r\n\r\n    this.m_renderedTextHeight = letterHeight;\r\n    const wPerHRatio = this.m_canvas.m_textWidth / this.m_canvas.m_textHeight;\r\n    const psy = letterHeight;\r\n    const psx = psy * wPerHRatio;\r\n\r\n    // console.log(`2dtext. text box = ${psx} * ${psy}, Ratio = ${wPerHRatio}`);\r\n\r\n    this.m_texture = new THREE.Texture(this.m_canvas.m_canvas);\r\n    this.m_texture.needsUpdate = true;\r\n    if (this.m_material === null) {\r\n      this.m_matTexturePlain = new MaterialTexturePlain2d();\r\n      this.m_matTexturePlain.create(this.m_texture);\r\n\r\n      this.m_material = this.m_matTexturePlain.m_material;\r\n\r\n      this.m_material.blending = THREE.CustomBlending;\r\n      this.m_material.blendEquation = THREE.AddEquation; // default\r\n      this.m_material.blendSrc = THREE.SrcAlphaFactor; // default\r\n      this.m_material.blendDst = THREE.OneMinusSrcAlphaFactor; // default\r\n\r\n      // create quad geometry\r\n      this.m_geometry = new THREE.Geometry();\r\n      // v2 ----- v3\r\n      // |        |\r\n      // |        |\r\n      // v0 ----- v1\r\n\r\n      // tex coordinate max\r\n      const X_TEXT_COORD_MAX = this.m_canvas.m_textWidth / this.m_canvas.m_canvas.width;\r\n      const Y_TEXT_COORD_MAX = this.m_canvas.m_textHeight / this.m_canvas.m_canvas.height;\r\n\r\n      // console.log(`2dtext. texture coord max = ${X_TEXT_COORD_MAX} * ${Y_TEXT_COORD_MAX}`);\r\n      // console.log(`text canvas dim on screen = ${this.m_canvas.m_textWidth} * ${this.m_canvas.m_textHeight}`);\r\n      // console.log(`psx = ${psx}, psy = ${psy}`);\r\n\r\n      this.m_xMin = MeshText2D.getXMin(xc, xAlign, psx);\r\n      this.m_xMax = MeshText2D.getXMax(xc, xAlign, psx);\r\n      this.m_yMin = MeshText2D.getYMin(yc, yAlign, psy);\r\n      this.m_yMax = MeshText2D.getYMax(yc, yAlign, psy);\r\n\r\n      const Z_COORD_TEXT = 0.05;\r\n      const v0 = new THREE.Vector3(this.m_xMin, this.m_yMin, Z_COORD_TEXT);\r\n      const v1 = new THREE.Vector3(this.m_xMax, this.m_yMin, Z_COORD_TEXT);\r\n      const v2 = new THREE.Vector3(this.m_xMin, this.m_yMax, Z_COORD_TEXT);\r\n      const v3 = new THREE.Vector3(this.m_xMax, this.m_yMax, Z_COORD_TEXT);\r\n\r\n      this.m_geometry.vertices.push(v0);\r\n      this.m_geometry.vertices.push(v1);\r\n      this.m_geometry.vertices.push(v2);\r\n      this.m_geometry.vertices.push(v3);\r\n\r\n      // console.log(`Texture text render max = ${X_TEXT_COORD_MAX} , ${Y_TEXT_COORD_MAX}`);\r\n\r\n      // add texture coordinates\r\n      this.m_geometry.faceVertexUvs[0].push([\r\n        new THREE.Vector2(0.0, 1.0 - Y_TEXT_COORD_MAX),\r\n        new THREE.Vector2(X_TEXT_COORD_MAX, 1.0 - Y_TEXT_COORD_MAX),\r\n        new THREE.Vector2(0.0, 1.0),\r\n      ]);\r\n      this.m_geometry.faceVertexUvs[0].push([\r\n        new THREE.Vector2(X_TEXT_COORD_MAX, 1.0),\r\n        new THREE.Vector2(0.0, 1.0),\r\n        new THREE.Vector2(X_TEXT_COORD_MAX, 1.0 - Y_TEXT_COORD_MAX),\r\n      ]);\r\n      const normal = new THREE.Vector3();\r\n      THREE.Triangle.getNormal(v0, v1, v2, normal);\r\n\r\n      // eslint-disable-next-line\r\n      this.m_geometry.faces.push(new THREE.Face3(0, 1, 2, normal));\r\n      // eslint-disable-next-line\r\n      this.m_geometry.faces.push(new THREE.Face3(3, 2, 1, normal));\r\n\r\n      this.m_mesh = new THREE.Mesh(this.m_geometry, this.m_material);\r\n      this.add(this.m_mesh);\r\n\r\n      // create text box with solid fill\r\n      const boxCanvas = document.createElement('canvas');\r\n      const context = boxCanvas.getContext('2d');\r\n      boxCanvas.width = 32;\r\n      boxCanvas.height = 32;\r\n      // green color as box background\r\n      context.fillStyle = strTextBackColor;\r\n      context.fillRect(0, 0, boxCanvas.width, boxCanvas.height);\r\n      const boxTexture = new THREE.Texture(boxCanvas);\r\n      boxTexture.needsUpdate = true;\r\n      this.m_matTextureBox = new MaterialTexturePlain2d();\r\n      this.m_matTextureBox.create(boxTexture, (mat) => {\r\n        this.m_boxMaterial = mat;\r\n\r\n        // box geometry and mesh with this 2d simple texture material\r\n        const Z_COORD_BOX = 0.06;\r\n        this.m_boxGeometry = new THREE.Geometry();\r\n        const vb0 = new THREE.Vector3(this.m_xMin, this.m_yMin, Z_COORD_BOX);\r\n        const vb1 = new THREE.Vector3(this.m_xMax, this.m_yMin, Z_COORD_BOX);\r\n        const vb2 = new THREE.Vector3(this.m_xMin, this.m_yMax, Z_COORD_BOX);\r\n        const vb3 = new THREE.Vector3(this.m_xMax, this.m_yMax, Z_COORD_BOX);\r\n        this.m_boxGeometry.vertices.push(vb0);\r\n        this.m_boxGeometry.vertices.push(vb1);\r\n        this.m_boxGeometry.vertices.push(vb2);\r\n        this.m_boxGeometry.vertices.push(vb3);\r\n        let boxNormal;\r\n        THREE.Triangle.getNormal(vb0, vb1, vb2, boxNormal);\r\n\r\n        // eslint-disable-next-line\r\n        this.m_boxGeometry.faces.push(new THREE.Face3(0, 1, 2, boxNormal));\r\n        // eslint-disable-next-line\r\n        this.m_boxGeometry.faces.push(new THREE.Face3(3, 2, 1, boxNormal));\r\n        this.m_boxMesh = new THREE.Mesh(this.m_boxGeometry, this.m_boxMaterial);\r\n        this.add(this.m_boxMesh);\r\n      });\r\n    } else {\r\n      this.m_material.map = this.m_texture;\r\n    }\r\n  } // updateText\r\n}\r\n// consts\r\nMeshText2D.ALIGN_LEFT = 0;\r\nMeshText2D.ALIGN_RIGHT = 1;\r\nMeshText2D.ALIGN_TOP = 2;\r\nMeshText2D.ALIGN_BOTTOM = 3;\r\nMeshText2D.ALIGN_CENTER = 4;\r\n\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Render 2d lines in scene\r\n* @module app/scripts/graphics2d/line2d\r\n*/\r\n\r\nimport * as THREE from 'three';\r\n\r\n// image z coord == 0.8\r\nconst LINE_2D_Z_COORDINATE = 0.11;\r\n\r\n/** Class LineD is used for render lines in 2d mode */\r\nexport default class Line2D {\r\n  /**\r\n  * Constructor. Create line 2d mode and add to scene on render\r\n  * @param (object) scene - Scene where object will be rendered\r\n  * @param (float) lineWidth - Line width in scale [-1..+1]\r\n  * @param (float) xs - Line start, x coordinate\r\n  * @param (float) ys - Line start, y coordinate\r\n  * @param (float) xe - Line end, x coordinate\r\n  * @param (float) ye - Line end, y coordinate\r\n  * @param (object) matColor2d - MaterialColor2d\r\n  */\r\n  constructor(scene, lineWidth, xs, ys, xe, ye, matColor2d) {\r\n    this.createWithMaterial(scene, lineWidth, xs, ys, xe, ye, matColor2d);\r\n    this.m_xS = xs;\r\n    this.m_yS = ys;\r\n    this.m_xE = xe;\r\n    this.m_yE = ye;\r\n  }\r\n\r\n  createWithMaterial(scene,\r\n    lineWidth,\r\n    xs, ys, xe, ye,\r\n    matColor2d) {\r\n    this.m_scene = scene;\r\n    this.m_lineWidth = lineWidth;\r\n\r\n    const vLine = new THREE.Vector2(xe - xs, ye - ys);\r\n    const vNorm = new THREE.Vector2(+vLine.y, -vLine.x);\r\n    vNorm.normalize();\r\n    vNorm.multiplyScalar(lineWidth);\r\n\r\n    //      0   start    1\r\n    //      +-----+------+    ----> vNorm\r\n    //      |\\           |\r\n    //      | \\          |\r\n    //      |  \\         |\r\n    //      |   \\        |\r\n    //      |    \\       |\r\n    //      |     \\      |\r\n    //      |      \\     |\r\n    //      |       \\    |\r\n    //      |        \\   |\r\n    //      |         \\  |\r\n    //      |          \\ |\r\n    //      |           \\|\r\n    //      +-----+------+\r\n    //      2    end     3\r\n    //\r\n    const v0 = new THREE.Vector3(xs - vNorm.x, ys - vNorm.y, LINE_2D_Z_COORDINATE);\r\n    const v1 = new THREE.Vector3(xs + vNorm.x, ys + vNorm.y, LINE_2D_Z_COORDINATE);\r\n    const v2 = new THREE.Vector3(xe - vNorm.x, ye - vNorm.y, LINE_2D_Z_COORDINATE);\r\n    const v3 = new THREE.Vector3(xe + vNorm.x, ye + vNorm.y, LINE_2D_Z_COORDINATE);\r\n\r\n    this.m_geo = new THREE.Geometry();\r\n    this.m_geo.vertices.push(v0);\r\n    this.m_geo.vertices.push(v1);\r\n    this.m_geo.vertices.push(v2);\r\n    this.m_geo.vertices.push(v3);\r\n\r\n    const normal = new THREE.Vector3(0.0, 0.0, 1.0);\r\n    // eslint-disable-next-line\r\n    this.m_geo.faces.push(new THREE.Face3(0, 1, 3, normal));\r\n    // eslint-disable-next-line\r\n    this.m_geo.faces.push(new THREE.Face3(3, 2, 0, normal));\r\n\r\n    //this.planeGeometry = new THREE.PlaneBufferGeometry(0.5, 0.5);\r\n    //const plane = new THREE.Mesh(this.planeGeometry, matColor2d.m_material);\r\n    //this.m_scene.add(plane);\r\n\r\n    //this.m_mesh = new THREE.Mesh(this.m_geo, matColor2d.m_material);\r\n    this.m_mesh = new THREE.Mesh(this.m_geo, matColor2d);\r\n    this.m_scene.add(this.m_mesh);\r\n    console.log(`Line added to scene: ${xs},${ys} -> ${xe},${ye} `);\r\n  }\r\n\r\n  /**\r\n  * Get object for further scene addition. Need to remove old line from scene\r\n  * @return (object) line object\r\n  */\r\n  getRenderObject() {\r\n    return this.m_mesh;\r\n  }\r\n\r\n  /**\r\n  * Return coordinate x of start point\r\n  * @return (float) x\r\n  */\r\n  getxS() {\r\n    return this.m_xS;\r\n  }\r\n\r\n  /**\r\n  * Return coordinate y of start point\r\n  * @return (float) y\r\n  */\r\n  getyS() {\r\n    return this.m_yS;\r\n  }\r\n\r\n  /**\r\n  * Return coordinate x of end point\r\n  * @return (float) x\r\n  */\r\n  getxE() {\r\n    return this.m_xE;\r\n  }\r\n\r\n  /**\r\n  * Return coordinate y of end point\r\n  * @return (float) y\r\n  */\r\n  getyE() {\r\n    return this.m_yE;\r\n  }\r\n}\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n * 2d distance tool\r\n * @module app/scripts/graphics2d/distancetool\r\n */\r\n\r\nimport MeshText2D from './meshtext2d';\r\nimport MaterialColor2d from '../gfx/matcolor2d';\r\nimport Line2D from './line2d';\r\n\r\nexport default class DistanceTool {\r\n\r\n  /**\r\n   * Initialize distance tool\r\n   * @param (object) scene - scene object\r\n   * @param (object) lineWidth - width of all lines\r\n   */\r\n  constructor(scene, lineWidth) {\r\n    /** @property {Object} m_scene - scene object */\r\n    this.m_scene = scene;\r\n    /** @property {float} m_lineWidth - width for all lines */\r\n    this.m_lineWidth = lineWidth;\r\n    /** @property {boolean} m_runningState - true if last line has not been fixed yet */\r\n    this.m_runningState = false;\r\n    /** @property {float} m_xPixelSize - canvas pixel size in mm for x axis */\r\n    this.m_xPixelSize = -1; // in mm\r\n    /** @property {float} yPixelSize - canvas pixel size in mm for y axis */\r\n    this.m_yPixelSize = -1; // in mm\r\n    /** @property {Object} m_linesMaterial - line material object */\r\n    //const R_MATERIAL = 0.86;\r\n    //const G_MATERIAL = 0.59;\r\n    //const B_MATERIAL = 0.17;\r\n    //this.m_linesMaterial = new MaterialColor2d(R_MATERIAL, G_MATERIAL, B_MATERIAL);\r\n    const linesMaterial = new MaterialColor2d();\r\n    this.m_linesMaterial = linesMaterial.create();\r\n    /** @property {Array} m_distances - array of pairs (line, text), contains all visible measurements */\r\n    this.m_distances = [];\r\n    /** @property {Array} m_vertexes - array of pairs (x, y) */\r\n    this.m_vertexes = [];\r\n    /** @property {float} m_xStart - start x coordinate for current not fixed line */\r\n    this.m_xStart = -1;\r\n    /** @property {float} m_yStart - start y coordinate for current not fixed line */\r\n    this.m_yStart = -1;\r\n    /** @property {float} m_textWidthScr - text width in [0..2] */\r\n    this.m_textWidthScr = 0.03;\r\n    /** @property {Object} m_textColor - text color */\r\n    this.m_textColor = 'rgba(255, 255, 255, 255)';\r\n    /** @property {Object} m_textBgColor - text background color */\r\n    this.m_textBgColor = 'rgb(65, 65, 65)';\r\n    /** @property {float} m_zoom - size zoom */\r\n    this.m_zoom = 1;\r\n  }\r\n\r\n  /**\r\n   * Remove all distance lines from scene\r\n   */\r\n  clearLines() {\r\n    const length = this.m_distances.length;\r\n    for (let i = 0; i < length; ++i) {\r\n      const dist = this.m_distances.pop();\r\n      this.m_scene.remove(dist.line.getRenderObject());\r\n      this.m_scene.remove(dist.text);\r\n    }\r\n    this.m_runningState = false;\r\n    this.m_vertexes = [];\r\n  }\r\n\r\n  /**\r\n   * Redraw all lines\r\n   */\r\n  updateLines(zoom, posX, posY) {\r\n    const COUNT_POINTS = 2;\r\n    const MODULO_1 = 1;\r\n    const length = this.m_distances.length;\r\n    for (let i = 0; i < length; ++i) {\r\n      this.m_scene.remove(this.m_distances[i].line.getRenderObject());\r\n      this.m_scene.remove(this.m_distances[i].text);\r\n      const xS = (this.m_vertexes[COUNT_POINTS * i].xZ - posX) / zoom - (1 - 1 / zoom);\r\n      const yS = (this.m_vertexes[COUNT_POINTS * i].yZ - posY) / zoom + (1 - 1 / zoom);\r\n      if (this.m_vertexes[COUNT_POINTS * i + 1] == null) {\r\n        break;\r\n      }\r\n      const xE = (this.m_vertexes[COUNT_POINTS * i + MODULO_1].xZ - posX) / zoom - (1 - 1 / zoom);\r\n      const yE = (this.m_vertexes[COUNT_POINTS * i + MODULO_1].yZ - posY) / zoom + (1 - 1 / zoom);\r\n      const line = new Line2D(this.m_scene, this.m_lineWidth, xS, yS, xE, yE, this.m_linesMaterial);\r\n      this.m_distances[i].line = line;\r\n      this.m_distances[i].text.updateText(0.5 * (xS + xE) - 0.00, 0.5 * (yS + yE) - 0.00, this.m_textWidthScr,\r\n        MeshText2D.ALIGN_CENTER, MeshText2D.ALIGN_CENTER, this.m_textBgColor, this.m_textColor);\r\n      this.m_scene.add(this.m_distances[i].text);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update zoom\r\n   */\r\n  updateZoom(zoom) {\r\n    this.m_zoom = zoom;\r\n  }\r\n\r\n  /**\r\n   * Set pixel size in mm\r\n   * @param (float) xPixelSize - canvas pixel size in mm for x axis\r\n   * @param (float) yPixelSize - canvas pixel size in mm for y axis\r\n   */\r\n  setPixelSize(xPixelSize, yPixelSize) { // in mm\r\n    this.m_xPixelSize = xPixelSize;\r\n    this.m_yPixelSize = yPixelSize;\r\n  }\r\n\r\n  /**\r\n   * Return running state\r\n   * @return {boolean} True if last line has not been fixed yet\r\n   */\r\n  isRunning() {\r\n    return this.m_runningState;\r\n  }\r\n\r\n  /**\r\n   * Mouse down events handler\r\n   * @param (float) x - mouse x coordinate\r\n   * @param (float) y - mouse y coordinate\r\n   */\r\n  onMouseDown(x, y, zoom, posX, posY) {\r\n    this.m_runningState = !this.m_runningState;\r\n    const xZ = (x + (1 - 1 / zoom)) * zoom + posX;\r\n    const yZ = (y - (1 - 1 / zoom)) * zoom + posY;\r\n    if (this.m_runningState) {\r\n      this.m_xStart = x;\r\n      this.m_yStart = y;\r\n\r\n      const line = new Line2D(this.m_scene, this.m_lineWidth, x, y, x, y, this.m_linesMaterial);\r\n      const strMsg = '0 mm';\r\n      const text = new MeshText2D(strMsg);\r\n      text.updateText(x, y, this.m_textWidthScr, MeshText2D.ALIGN_CENTER,\r\n        MeshText2D.ALIGN_CENTER, this.m_textBgColor, this.m_textColor);\r\n      this.m_scene.add(text);\r\n      this.m_distances.push({ line, text });\r\n      this.m_vertexes.push({ xZ, yZ });\r\n    } else {\r\n      this.m_vertexes.push({ xZ, yZ });\r\n      this.m_xStart = -1;\r\n      this.m_yStart = -1;\r\n    }\r\n  }\r\n\r\n  test() {\r\n    new Line2D(this.m_scene, this.m_lineWidth, -1.0, 1.0, -0.5, 0.5, this.m_linesMaterial);\r\n  }\r\n\r\n  /**\r\n   * Mouse move events handler\r\n   * @param (float) x - mouse x coordinate\r\n   * @param (float) y - mouse y coordinate\r\n   */\r\n  onMouseMove(x, y, zoom) {\r\n    if (this.m_runningState) {\r\n      const dist = this.m_distances.pop();\r\n      this.m_scene.remove(dist.line.getRenderObject());\r\n      const line = new Line2D(this.m_scene, this.m_lineWidth, this.m_xStart, this.m_yStart, x, y, this.m_linesMaterial);\r\n      this.m_scene.remove(dist.text);\r\n      const strMsg = `${(zoom * (Math.sqrt((x - this.m_xStart) * (x - this.m_xStart)\r\n        * this.m_xPixelSize * this.m_xPixelSize +\r\n        // eslint-disable-next-line\r\n        (y - this.m_yStart) * (y - this.m_yStart) * this.m_yPixelSize * this.m_yPixelSize))).toFixed(2)} mm`;\r\n      const text = new MeshText2D(strMsg);\r\n      text.updateText(0.5 * (x + this.m_xStart) - 0.00, 0.5 * (y + this.m_yStart) - 0.00, this.m_textWidthScr,\r\n        MeshText2D.ALIGN_CENTER, MeshText2D.ALIGN_CENTER, this.m_textBgColor, this.m_textColor);\r\n      this.m_scene.add(text);\r\n      this.m_distances.push({ line, text });\r\n    }\r\n  }\r\n\r\n  updateVertexes(zoom, posX, posY) {\r\n    this.m_vertexes = [];\r\n    for (let i = 0; i < this.m_distances.length; ++i) {\r\n      let xZ = (this.m_distances[i].line.getxS() + (1 - 1 / zoom)) * zoom + posX;\r\n      let yZ = (this.m_distances[i].line.getyS() - (1 - 1 / zoom)) * zoom + posY;\r\n      this.m_vertexes.push({ xZ, yZ });\r\n      xZ = (this.m_distances[i].line.getxE() + (1 - 1 / zoom)) * zoom + posX;\r\n      yZ = (this.m_distances[i].line.getyE() - (1 - 1 / zoom)) * zoom + posY;\r\n      this.m_vertexes.push({ xZ, yZ });\r\n    }\r\n  }\r\n}\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* 2d simplest graphics engine\r\n* @module app/scripts/graphics2d/graphics23d\r\n*/\r\n\r\nimport * as THREE from 'three';\r\n\r\n// import MaterialTex2d from '../gfx/mattex2d';\r\n// import MaterialColor2d from '../gfx/matcolor2d';\r\n// import MeshText2D from './meshtext2d';\r\n// import Line2D from './line2d';\r\n// import Circle2D from './circle2d';\r\nimport DistanceTool from './distancetool';\r\n// import AngleTool from './angletool';\r\n// import AreaTool from './areatool';\r\n// import ZoomTool from './zoomtool';\r\n// import RectTool from './recttool';\r\n// import MoveTool from './movetool';\r\n// import DeleteTool from './deletetool';\r\n// import EditTool from './edittool';\r\n// import TextTool from './texttool';\r\n\r\n/**  @constant {number} SCENE_3D_BACKGROUND_COLOR - backgroudn color for 3d window */\r\n// const SCENE_2D_BACKGROUND_COLOR = 0xbbbbff; // 0x00\r\n\r\n/** Possible 2d tools */\r\nconst tools2d = {\r\n  INTENSITY: 'intensity',\r\n  DISTANCE: 'distance',\r\n  ANGLE: 'angle',\r\n  AREA: 'area',\r\n  RECT: 'rect',\r\n  TEXT: 'text',\r\n  GRAD: 'grad',\r\n  COBR: 'cobr',\r\n  BIFI: 'bifi',\r\n  ZOOM: 'zoom',\r\n  DELETE: 'delete',\r\n  EDIT: 'edit',\r\n};\r\n\r\n/** Class Graphics2d is used for simple debug style 2d render */\r\nexport default class Graphics23d {\r\n\r\n  /**\r\n  * Initialize render\r\n  * @param (object) container - object container for 3d rendering\r\n  * @param (int) width - 2d canvas width\r\n  * @param (int) height - 2d canvas height\r\n  * @return {Object} Intsance of this class (singleton)\r\n  */\r\n  constructor(scene, width, height) {\r\n    this.m_width = width;\r\n    this.m_height = height;\r\n    this.m_material = null;\r\n    this.m_mesh = null;\r\n    console.log(`Graphics2d create size = ${width} * ${height}`);\r\n    this.m_scene = scene;\r\n\r\n    this.m_materialsTex2d = null;\r\n    this.m_material = null;\r\n\r\n    //construct edit and move tools\r\n    this.m_zoom = 1;\r\n    this.m_savePosX = 0;\r\n    this.m_savePosY = 0;\r\n    this.m_posX = 0;\r\n    this.m_posY = 0;\r\n    this.m_move = false;\r\n    this.m_wProjScreen = width;\r\n    this.m_hProjScreen = height;\r\n\r\n    this.m_showTileTexture = false;\r\n\r\n    // prepare for render 2d lines on screen\r\n    const xw = 1.0 / width;\r\n    const yw = 1.0 / height;\r\n    const TWICE = 2.0;\r\n    this.m_lineWidth = TWICE * ((xw > yw) ? xw : yw);\r\n    this.m_lineWidth = 0.002;\r\n\r\n    this.m_textTime = -1000;\r\n    this.m_text = null;\r\n    this.m_toolType = tools2d.DISTANCE;\r\n    //this.m_toolType = tools2d.INTENSITY;\r\n    this.m_distanceTool = new DistanceTool(this.m_scene, this.m_lineWidth);\r\n    /*this.m_angleTool = new AngleTool(this.m_scene, this.m_lineWidth);\r\n    this.m_areaTool = new AreaTool(this.m_scene, this.m_lineWidth);\r\n    this.m_rectTool = new RectTool(this.m_scene, this.m_lineWidth);\r\n    this.m_textTool = new TextTool(this.m_scene);\r\n    this.m_zoomTool = new ZoomTool(this.m_zoom);\r\n    this.m_moveTool = new MoveTool(this.m_zoom, this.m_posX, this.m_posY);\r\n    this.m_deleteTool = new DeleteTool(this.m_scene, this.m_lineWidth);\r\n    this.m_editTool = new EditTool(this.m_scene, this.m_lineWidth);\r\n    */\r\n    //this.m_distanceTool.test();\r\n  } // end of constructor\r\n\r\n  set2dToolType(toolType) {\r\n    this.m_toolType = toolType;\r\n  }\r\n\r\n  /**\r\n   * Callback on file loaded\r\n   */\r\n  onFileLoaded() {\r\n    this.m_distanceTool.clearLines();\r\n    this.m_angleTool.clearLines();\r\n    this.m_areaTool.clearLines();\r\n    this.m_rectTool.clearLines();\r\n    this.m_textTool.clear();\r\n    this.m_deleteTool.clearLines();\r\n    this.m_editTool.clearLines();\r\n  }\r\n\r\n  clear2DTools() {\r\n    this.m_distanceTool.clearLines();\r\n    this.m_angleTool.clearLines();\r\n    this.m_areaTool.clearLines();\r\n    this.m_rectTool.clearLines();\r\n    this.m_textTool.clear();\r\n    this.m_deleteTool.clearLines();\r\n    this.m_editTool.clearLines();\r\n  }\r\n\r\n  default2DTools() {\r\n    this.m_zoom = 1;\r\n    this.m_posX = 0;\r\n    this.m_posY = 0;\r\n    this.m_savePosX = 0;\r\n    this.m_savePosY = 0;\r\n    this.m_materialsTex2d.m_uniforms.posX.value = this.m_posX;\r\n    this.m_materialsTex2d.m_uniforms.posY.value = this.m_posY;\r\n    this.m_materialsTex2d.m_uniforms.zoom.value = this.m_zoom;\r\n    this.updateLines();\r\n  }\r\n\r\n  fov2Tan(fov) {\r\n    const HALF = 0.5;\r\n    return Math.tan(THREE.Math.degToRad(HALF * fov));\r\n  }\r\n\r\n  tan2Fov(tan) {\r\n    const TWICE = 2.0;\r\n    return THREE.Math.radToDeg(Math.atan(tan)) * TWICE;\r\n  }\r\n\r\n  /**\r\n  * Keyboard event handler\r\n  * @param (number) keyCode - keyboard code\r\n  * @param (Boolean) debug - true if debug false otherwise\r\n  */\r\n  onKeyDown(keyCode, debug) {\r\n    // console.log(`onKeyDown: ${keyCode}`);\r\n    // const KEY_CODE_G = 71;\r\n    if (debug) {\r\n      // if (keyCode === KEY_CODE_G) {\r\n      //   this.debugShowSliceFrom2dTiles();\r\n      // }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Mouse events handler\r\n  * xScr, yScr in [0..1] is normalized mouse coordinate in screen\r\n  */\r\n  onMouseDown(xScr, yScr) {\r\n    if ((this.m_volumeData === null) || (this.m_volumeHeader === null)) {\r\n      return;\r\n    }\r\n    if ((xScr > this.m_wProjScreen) || (yScr > this.m_hProjScreen)) {\r\n      // out of image\r\n      return;\r\n    }\r\n    if (this.m_levelSetMode) {\r\n      return;\r\n    }\r\n\r\n    const TWICE = 2.0;\r\n    const xt = xScr * TWICE - 1.0;\r\n    const yt = yScr * TWICE - 1.0;\r\n    //const yt = (1.0 - yScr) * TWICE - 1.0;\r\n\r\n    switch (this.m_toolType) {\r\n    case tools2d.DISTANCE:\r\n      this.m_distanceTool.onMouseDown(xt, yt, this.m_zoom, this.m_posX * (this.m_wProjScreen),\r\n        this.m_posY * (this.m_hProjScreen));\r\n      break;\r\n    case tools2d.ANGLE:\r\n      this.m_angleTool.onMouseDown(xt, yt, this.m_zoom, this.m_posX * (this.m_wProjScreen),\r\n        this.m_posY * (this.m_hProjScreen));\r\n      break;\r\n    case tools2d.TEXT:\r\n      this.m_textTool.onMouseDown(xt, yt, this.m_zoom, this.m_posX * (this.m_wProjScreen),\r\n        this.m_posY * (this.m_hProjScreen));\r\n      break;\r\n    case tools2d.AREA:\r\n      this.m_areaTool.onMouseDown(xt, yt, this.m_zoom, this.m_posX * (this.m_wProjScreen),\r\n        this.m_posY * (this.m_hProjScreen));\r\n      break;\r\n    case tools2d.RECT:\r\n      this.m_rectTool.onMouseDown(xt, yt, this.m_zoom, this.m_posX * (this.m_wProjScreen),\r\n        this.m_posY * (this.m_hProjScreen));\r\n      break;\r\n    case tools2d.GRAD:\r\n      break;\r\n    case tools2d.COBR:\r\n    /*this.m_contrastBrightTool.onMouseDown(xt, yt);\r\n          this.m_materialsTex2d.m_uniforms.contrast.value = this.m_contrastBrightTool.m_contrast;\r\n          this.m_materialsTex2d.m_uniforms.brightness.value = this.m_contrastBrightTool.m_brightness;\r\n          this.m_materialsTex2d.m_uniforms.COBRflag.value = this.m_contrastBrightTool.m_COBRflag;*/\r\n      break;\r\n    case tools2d.BIFI:\r\n      /*this.m_filterTool.onMouseDown(xt, yt);\r\n          this.m_materialsTex2d.m_uniforms.sigma.value = this.m_filterTool.m_sigma;\r\n          this.m_materialsTex2d.m_uniforms.sigmaB.value = this.m_filterTool.m_sigmaB;\r\n          this.m_materialsTex2d.m_uniforms.BIFIflag.value = this.m_filterTool.m_BIFIflag;*/\r\n      break;\r\n    case tools2d.ZOOM:\r\n      this.m_move = true;\r\n      this.m_moveTool.onMouseDown(xt, yt);\r\n      break;\r\n    case tools2d.DELETE:\r\n      this.m_deleteTool.onMouseDown(xt, yt, this.m_distanceTool.m_distances, this.m_angleTool.m_angles,\r\n        this.m_rectTool.m_areas, this.m_areaTool.m_distances, this.m_textTool.m_textArr,\r\n        this.m_distanceTool.m_vertexes, this.m_angleTool.m_vertexes, this.m_rectTool.m_vertexes,\r\n        this.m_areaTool.m_vertexes2, this.m_areaTool.m_last_lengths, this.m_areaTool.m_vertexes, this.m_areaTool,\r\n        this.m_textTool.m_vertexes);\r\n      console.log(`${this.m_areaTool.last_length}`);\r\n      break;\r\n    case tools2d.EDIT:\r\n      this.m_editTool.onMouseDown();\r\n      break;\r\n    default:\r\n      console.log('Unexpected 2d tool');\r\n      break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mouse events handler\r\n   * xScr, yScr in [0..1] is normalized mouse coordinate in screen\r\n   */\r\n  onMouseUp(xScr, yScr) {\r\n    if ((this.m_volumeData === null) || (this.m_volumeHeader === null)) {\r\n      return;\r\n    }\r\n    if ((xScr > this.m_wProjScreen) || (yScr > this.m_hProjScreen)) {\r\n      // out of image\r\n      return;\r\n    }\r\n    const TWICE = 2.0;\r\n    const xt = xScr * TWICE - 1.0;\r\n    const yt = yScr * TWICE - 1.0;\r\n    //const yt = (1.0 - yScr) * TWICE - 1.0;\r\n\r\n    if (this.m_levelSetMode) {\r\n      // only for first step of level set\r\n      if (this.m_levelSetCircle !== null) {\r\n        this.clearLevelSetCenter();\r\n      }\r\n      this.drawLevelSetCenter(xt, yt);\r\n      return;\r\n    }\r\n    switch (this.m_toolType) {\r\n    case tools2d.DISTANCE:\r\n      break;\r\n    case tools2d.ANGLE:\r\n      break;\r\n    case tools2d.AREA:\r\n      break;\r\n    case tools2d.RECT:\r\n      break;\r\n    case tools2d.TEXT:\r\n      break;\r\n    case tools2d.COBR:\r\n      break;\r\n    case tools2d.BIFI:\r\n      break;\r\n    case tools2d.ZOOM:\r\n      this.m_move = false;\r\n      this.m_moveTool.onMouseUp();\r\n      this.m_savePosX = this.m_posX;\r\n      this.m_savePosY = this.m_posY;\r\n      break;\r\n    case tools2d.DELETE:\r\n      break;\r\n    case tools2d.EDIT:\r\n      this.m_editTool.onMouseUp();\r\n      break;\r\n    default:\r\n      console.log('Unexpected 2d tool');\r\n      break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mouse move event handler\r\n   * @param (float) xScr - normalized mouse x coordinate in screen\r\n   * @param (float) yScr - normalized mouse y coordinate in screen\r\n   */\r\n  onMouseMove(xScr, yScr) {\r\n    if ((this.m_volumeData === null) || (this.m_volumeHeader === null)) {\r\n      return;\r\n    }\r\n    if ((xScr > this.m_wProjScreen) || (yScr > this.m_hProjScreen)) {\r\n      // out of image\r\n      return;\r\n    }\r\n    const TWICE = 2.0;\r\n    const xt = xScr * TWICE - 1.0;\r\n    const yt = yScr * TWICE - 1.0;\r\n    //const yt = (1.0 - yScr) * TWICE - 1.0;\r\n\r\n    switch (this.m_toolType) {\r\n    case tools2d.DISTANCE:\r\n      this.m_distanceTool.onMouseMove(xt, yt, this.m_zoom);\r\n      break;\r\n    case tools2d.ANGLE:\r\n      this.m_angleTool.onMouseMove(xt, yt);\r\n      break;\r\n    case tools2d.AREA:\r\n      this.m_areaTool.onMouseMove(xt, yt);\r\n      break;\r\n    case tools2d.RECT:\r\n      this.m_rectTool.onMouseMove(xt, yt, this.m_zoom);\r\n      break;\r\n    case tools2d.TEXT:\r\n      break;\r\n    case tools2d.GRAD:\r\n      break;\r\n    case tools2d.COBR:\r\n      /*this.m_contrastBrightTool.onMouseMove(xt, yt);\r\n        this.m_materialsTex2d.m_uniforms.contrast.value = this.m_contrastBrightTool.m_contrast;\r\n        this.m_materialsTex2d.m_uniforms.brightness.value = this.m_contrastBrightTool.m_brightness;\r\n        this.m_materialsTex2d.m_uniforms.COBRflag.value = this.m_contrastBrightTool.m_COBRflag;*/\r\n      break;\r\n    case tools2d.BIFI:\r\n      /*this.m_filterTool.onMouseMove(xt, yt);\r\n        this.m_materialsTex2d.m_uniforms.sigma.value = this.m_filterTool.m_sigma;\r\n        this.m_materialsTex2d.m_uniforms.sigmaB.value = this.m_filterTool.m_sigmaB;\r\n        this.m_materialsTex2d.m_uniforms.BIFIflag.value = this.m_filterTool.m_BIFIflag;*/\r\n      break;\r\n    case tools2d.ZOOM:\r\n      if (this.m_move) {\r\n        this.updateMove(xt, yt);\r\n      }\r\n      break;\r\n    case tools2d.DELETE:\r\n      this.m_deleteTool.onMouseMove(xt, yt, this.m_zoom, this.m_distanceTool.m_distances, this.m_angleTool.m_angles,\r\n        this.m_rectTool.m_areas, this.m_areaTool.m_distances, this.m_textTool.m_textArr);\r\n      break;\r\n    case tools2d.EDIT: // TO DO: add text tool\r\n      this.m_editTool.onMouseMove(xt, yt, this.m_zoom, this.m_distanceTool.m_distances, this.m_angleTool.m_angles,\r\n        this.m_rectTool.m_areas, this.m_areaTool.m_distances, this.m_areaTool, this.m_textTool,\r\n        this.m_posX * (this.m_wProjScreen), this.m_posY * (this.m_hProjScreen));\r\n      //this.m_areaTool.updateVertexes(this.m_zoom, this.m_posX * (this.m_wProjScreen), this.m_posY *\r\n      // (this.m_hProjScreen));\r\n      this.m_distanceTool.updateVertexes(this.m_zoom, this.m_posX * (this.m_wProjScreen),\r\n        this.m_posY * (this.m_hProjScreen));\r\n      this.m_angleTool.updateVertexes(this.m_zoom, this.m_posX * (this.m_wProjScreen),\r\n        this.m_posY * (this.m_hProjScreen));\r\n      break;\r\n    default:\r\n      console.log('Unexpected 2d tool');\r\n      break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mouse events handler\r\n   * xScr, yScr in [0..1] is normalized mouse coordinate in screen\r\n   */\r\n  onMouseWheel(wheelDeltaY) {\r\n    switch (this.m_toolType) {\r\n    case tools2d.DISTANCE:\r\n      break;\r\n    case tools2d.ANGLE:\r\n      break;\r\n    case tools2d.AREA:\r\n      break;\r\n    case tools2d.RECT:\r\n      break;\r\n    case tools2d.TEXT:\r\n      break;\r\n    case tools2d.COBR:\r\n      break;\r\n    case tools2d.BIFI:\r\n      break;\r\n    case tools2d.ZOOM:\r\n      this.m_zoomTool.onMouseWheel(wheelDeltaY);\r\n      this.updateZoom();\r\n      this.createMarkLinesAndText();\r\n      break;\r\n    case tools2d.DELETE:\r\n      break;\r\n    case tools2d.EDIT:\r\n      break;\r\n    default:\r\n      console.log('Unexpected 2d tool');\r\n      break;\r\n    }\r\n  }\r\n\r\n  updateLines() {\r\n    this.m_distanceTool.updateLines(this.m_zoom, this.m_posX * this.m_wProjScreen, this.m_posY * this.m_hProjScreen);\r\n    this.m_angleTool.updateLines(this.m_zoom, this.m_posX * this.m_wProjScreen, this.m_posY * this.m_hProjScreen);\r\n    this.m_rectTool.updateLines(this.m_zoom, this.m_posX * this.m_wProjScreen, this.m_posY * this.m_hProjScreen);\r\n    this.m_textTool.updateAll(this.m_zoom, this.m_posX * this.m_wProjScreen, this.m_posY * this.m_hProjScreen);\r\n    this.m_areaTool.updateLines(this.m_zoom, this.m_posX * this.m_wProjScreen, this.m_posY * this.m_hProjScreen);\r\n    this.m_deleteTool.updateLines(this.m_zoom, this.m_posX * this.m_wProjScreen, this.m_posY * this.m_hProjScreen);\r\n    this.m_editTool.updateLines(this.m_zoom, this.m_posX * this.m_wProjScreen, this.m_posY * this.m_hProjScreen);\r\n  }\r\n\r\n  updateMove(xt, yt) {\r\n    const TWICE = 2;\r\n    const delta = (TWICE - TWICE * this.m_zoom);\r\n    const coord = this.m_moveTool.onMouseMove(xt, yt);\r\n    if (((this.m_savePosX + coord.x) <= Math.abs(delta)) && ((this.m_savePosX + coord.x) > 0)) {\r\n      this.m_posX = this.m_savePosX + coord.x;\r\n      this.m_materialsTex2d.m_uniforms.posX.value = this.m_posX;\r\n    } else if (this.m_savePosX + coord.x > Math.abs(delta)) {\r\n      this.m_posX = Math.abs(delta);\r\n      this.m_materialsTex2d.m_uniforms.posX.value = this.m_posX;\r\n    } else {\r\n      this.m_posX = 0;\r\n      this.m_materialsTex2d.m_uniforms.posX.value = this.m_posX;\r\n    }\r\n\r\n    if (((this.m_savePosY + coord.y) >= (-1) * Math.abs(delta)) && ((this.m_savePosY + coord.y) < 0)) {\r\n      this.m_posY = this.m_savePosY + coord.y;\r\n      this.m_materialsTex2d.m_uniforms.posY.value = this.m_posY;\r\n    } else if (this.m_savePosY + coord.y < (-1) * Math.abs(delta)) {\r\n      this.m_posY = (-1) * Math.abs(delta);\r\n      this.m_materialsTex2d.m_uniforms.posY.value = this.m_posY;\r\n    } else {\r\n      this.m_posY = 0;\r\n      this.m_materialsTex2d.m_uniforms.posY.value = this.m_posY;\r\n    }\r\n    this.updateLines();\r\n  }\r\n\r\n  updateZoom() {\r\n    const TWICE = 2;\r\n    this.m_materialsTex2d.m_uniforms.zoom.value = this.m_zoomTool.m_zoom;\r\n    this.m_zoom = this.m_zoomTool.m_zoom;\r\n    const delta = (TWICE - TWICE * this.m_zoom);\r\n    if (this.m_posX > delta) {\r\n      this.m_posX = delta;\r\n      this.m_materialsTex2d.m_uniforms.posX.value = this.m_posX;\r\n    }\r\n    if ((this.m_posY < (-1) * delta) && (this.m_posY < 0)) {\r\n      this.m_posY = (-1) * delta;\r\n      this.m_materialsTex2d.m_uniforms.posY.value = this.m_posY;\r\n    }\r\n    this.updateLines();\r\n  }\r\n\r\n  updateText() {\r\n    //this.m_pickTool.update();\r\n  }\r\n\r\n  static shortenString(str) {\r\n    const MAX_ITEM_LEN = 20;\r\n    const SHORT_ITEM_PART = 5;\r\n    let strRet = str;\r\n    const pnl = str.length;\r\n    if (pnl > MAX_ITEM_LEN) {\r\n      const strBegin = str.substring(0, SHORT_ITEM_PART + 1);\r\n      const strEnd = str.substring(pnl - SHORT_ITEM_PART, pnl);\r\n      strRet = `${strBegin}...${strEnd}`;\r\n    }\r\n    return strRet;\r\n  }\r\n}\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n * 3D volume/isosurface rendering engine\r\n * @module app/scripts/engine/VolumeRenderer3d\r\n */\r\n\r\nimport * as THREE from 'three';\r\n// import swal from 'sweetalert';\r\n\r\nimport GlSelector from './GlSelector';\r\nimport OrbitControl from './orbitcontrol';\r\nimport MaterialBF from './gfx/matbackface';\r\nimport MaterialFF from './gfx/matfrontface';\r\nimport MaterialWC from './gfx/matwireframecull';\r\nimport MaterialScreenTexMap from './gfx/matscreentexmapping';\r\nimport MaterialClipPlane from './gfx/matclipplane';\r\nimport MaterialRenderToTexture from './gfx/matrendertotexture';\r\nimport MaterialInterpolation from './gfx/matinterpolation';\r\nimport MaterialVolumeRender from './gfx/matvolumerender';\r\nimport VolumeFilter3D from './volumeFilter3d';\r\nimport RoiPalette from './loaders/roipalette';\r\nimport TetrahedronGenerator from './actvolume/tetra';\r\nimport Graphics23d from './tools23d/graphics23d';\r\n// import MaterialColor2d from './gfx/matcolor2d';\r\n\r\n\r\n// import GlCheck from './glcheck';\r\n// import GeoRender from '../actvolume/georender';\r\n\r\n/**  @constant {number} SCENE_3D_BACKGROUND_COLOR - backgroudn color for 3d window */\r\nconst SCENE_3D_BACKGROUND_COLOR = 0x0;\r\nconst VOLUME_COLOR1_MIN_R = 0.1;\r\nconst VOLUME_COLOR1_MIN_G = 0.0;\r\nconst VOLUME_COLOR1_MIN_B = 0.0;\r\nconst VOLUME_COLOR3_MIN_R = 0.0;\r\nconst VOLUME_COLOR3_MIN_G = 0.8;\r\nconst VOLUME_COLOR3_MIN_B = 0.0;\r\nconst VOLUME_COLOR1_MAX_R = 1.0;\r\nconst VOLUME_COLOR1_MAX_G = 0.0;\r\nconst VOLUME_COLOR1_MAX_B = 0.0;\r\nconst VOLUME_COLOR2_MIN_R = 1.0;\r\nconst VOLUME_COLOR2_MIN_G = 0.902;\r\nconst VOLUME_COLOR2_MIN_B = 0.773;\r\nconst VOLUME_COLOR2_MAX_R = 0.5;\r\nconst VOLUME_COLOR2_MAX_G = 0.4;\r\nconst VOLUME_COLOR2_MAX_B = 0.3;\r\nconst STEP_SIZE1 = 0.0025;\r\nconst STEP_SIZE2 = 0.0033;\r\nconst STEP_SIZE3 = 0.0025;\r\n//const STEP_SIZE3 = 0.0039;\r\nconst STEP_SIZE4 = 0.0029;\r\nconst OPACITY_SCALE = 175.0;\r\n//const MIN_FPS = 10;\r\n\r\n// Special values to check frame buffer\r\nconst CHECK_MODE_NOT_CHECKED = 0;\r\nconst CHECK_MODE_RESULT_OK = 1;\r\n// const CHECK_MODE_RESULT_BAD = 2;\r\n\r\n// When scene is ready (how much materials are created via arrow functions)\r\nconst SCENE_READY_COUNTER_OK = 5;\r\n\r\n// Scene render type\r\nconst SCENE_TYPE_RAYCAST = 0;\r\nconst SCENE_TYPE_SPHERE = 1;\r\n\r\n/** Class Graphics3d is used for 3d render */\r\nexport default class VolumeRenderer3d {\r\n\r\n  /**\r\n   * Initialize render\r\n   * @param (object) props - object container for various properties\r\n   * @param (object) curFileDataType - file type\r\n   * @return {Object} Instance of this class (singleton)\r\n   */\r\n  constructor(props) {\r\n    this.curFileDataType = props.curFileDataType;\r\n    this.sceneReadyCounter = 0;\r\n    this.renderCounter = 0;\r\n    this.scene = new THREE.Scene();\r\n    this.sceneClipPlane = new THREE.Scene();\r\n\r\n    // tetra scene seems to be unused!\r\n    // this.sceneTetra = new THREE.Scene();\r\n\r\n    this.scene23D = new THREE.Scene();\r\n    this.graphics23d = null;\r\n    this.sceneSphere = new THREE.Scene();\r\n    this.meshSphere = null;\r\n    this.newScene = new THREE.Scene();\r\n    this.renderScene = SCENE_TYPE_RAYCAST;\r\n\r\n    this.planeGeometry = null;\r\n    this.props = props;\r\n    this.mesh = null;\r\n    this.renderer = null;\r\n    this.texTF = null;\r\n    this.volTexture = null;\r\n    this.origVolumeTex = null;\r\n    this.texRoiId = null;\r\n    this.texRoiColor = null;\r\n    this.RoiVolumeTex = null;\r\n    this.volTextureMask = null;\r\n    this.texVolumeAO = null;\r\n    this.bfTexture = null;\r\n    this.ffTexture = null;\r\n    this.renderToTexture = null;\r\n    this.geometry = null;\r\n    this.geometrySphere = null;\r\n    this.geometryWireFrameSphere = null;\r\n    this.matBF = null;\r\n    this.matFF = null;\r\n    this.matScreenTex = null;\r\n    this.matWireFrame = null;\r\n    this.matRenderToTexture = null;\r\n    //this.matInterpolation = null;\r\n    this.matVolumeRender = null;\r\n    this.volumeUpdater = null;\r\n    this.checkFrameBufferMode = CHECK_MODE_NOT_CHECKED;\r\n    this.eraserStarted = false;\r\n    this.lockEraserBuffersUpdating = false;\r\n\r\n    // eslint-disable-next-line\r\n    this.planeCenterPt = new THREE.Vector3(-0.5, -0.5, 0.5 * 1.4);\r\n    // this.renderer = new THREE.WebGLRenderer({ antialias: false, logarithmicDepthBuffer: false });\r\n    // this.renderer = new THREE.WebGLRenderer({ antialias: false }\r\n    // this.canvas3d = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\r\n    const glSelector = new GlSelector();\r\n    this.context = glSelector.createWebGLContext();\r\n    this.isWebGL2 = glSelector.useWebGL2();\r\n    this.canvas3d = glSelector.getCanvas();\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      antialias: false, canvas: this.canvas3d,\r\n      preserveDrawingBuffer: true, context: this.context\r\n    });\r\n    this.renderer.autoClearStencil = false;\r\n    this.renderer.autoClearColor = false;\r\n    if (!this.renderer) {\r\n      console.log('cant create 3d renderer');\r\n    }\r\n\r\n    // Assign current window to render area\r\n    this.windowWidth = Math.floor(props.width);\r\n    // eslint-disable-next-line\r\n    this.windowHeight = Math.floor(props.height);\r\n    // console.log(\"Window: \" + this.windowWidth + \"x\" + this.windowHeight);\r\n    console.log(`Window: ${this.windowWidth} x ${this.windowHeight}`);\r\n    const camAspect = this.windowWidth / this.windowHeight;\r\n    // eslint-disable-next-line\r\n    this.camera = new THREE.PerspectiveCamera(60, camAspect, 0.01, 3);\r\n    this.camera.position.z = 10;\r\n    this.renderer.setSize(this.windowWidth, this.windowHeight);\r\n\r\n    this.renderer.setClearColor(SCENE_3D_BACKGROUND_COLOR);\r\n\r\n    /*if (root3dContainer.length === 1) {\r\n      root3dContainer.append(this.renderer.domElement);\r\n    } else {\r\n      console.log('containter with id=med3web-container-3d not found in scene');\r\n    }*/\r\n    props.mount.appendChild(this.renderer.domElement);\r\n    // When rotating an object, it is necessary to reverse the rotation of\r\n    // the cutting plane and the direction vector onto the light source\r\n    // this.orbitControl = new OrbitControl(root3dContainer, this.camera, this.scene, this.meshSphere, () => {\r\n    this.orbitControl = new OrbitControl(this.renderer.domElement, this.camera, this.scene, this.mesh, () => {\r\n      if (true) {\r\n      //  if (this.checkFrameBufferMode === CHECK_MODE_RESULT_OK) {\r\n        this.updateCutPlanes();\r\n        this.updateLightDir();\r\n        //this.updateMeshSphere();\r\n      }\r\n    });\r\n    //this.orbitControl.addCallbacks();\r\n\r\n    // tetra geometry seems to be unused!\r\n    // this.createTetraGeometry();\r\n\r\n    this.renderer.gammaInput = true;\r\n    this.renderer.gammaOutput = true;\r\n\r\n    this.RENDER_STATE = {\r\n      ENABLED : 0,\r\n      ONCE : 1,\r\n      DISABLED : 2\r\n    };\r\n\r\n    this.renderState = this.RENDER_STATE.ENABLED;\r\n    this.fps = 0;\r\n    this.isoThreshold = 0.0;\r\n    /*root3dContainer.on('mousedown', (event) => {\r\n      const domElem = root3dContainer.get(0);\r\n      const box = domElem.getBoundingClientRect();\r\n      const containerX = event.clientX - box.left;\r\n      const containerY = event.clientY - box.top;\r\n      this.onMouseDown(containerX, this.windowHeight - containerY, event.ctrlKey);\r\n    });\r\n    root3dContainer.on('mouseup', () => { this.onMouseUp(); });\r\n    root3dContainer.on('mousemove', (event) => {\r\n      const domElem = root3dContainer.get(0);\r\n      const box = domElem.getBoundingClientRect();\r\n      const containerX = event.clientX - box.left;\r\n      const containerY = event.clientY - box.top;\r\n      this.onMouseMove(containerX, this.windowHeight - containerY, event.ctrlKey);\r\n    });\r\n    root3dContainer.on('DOMMouseScroll', (e) => { this.onMouseWheel(e); });\r\n    root3dContainer.on('mousewheel', (e) => { this.onMouseWheel(e); });*/\r\n    this.isEraseMode = false;\r\n    this.eraserRadius = 10;\r\n    this.eraserDepth = 20;\r\n    this.eraserSrart = false;\r\n    this.lockEraserBuffersUpdating = false;\r\n    this.eraserMouseDown = false;\r\n    this.m_eraser = null;\r\n\r\n    this.isSculptingMode = false;\r\n    this.sculptingCapturedVertex = null;\r\n    this.sculptingSphereCenter = new THREE.Vector3(0.0, 0.0, 0.0);\r\n    this.sculptingSphereSize = 1.0;\r\n    this.vBoxVirt = {\r\n      x: 1.0,\r\n      y: 1.0,\r\n      z: 1.0,\r\n    };\r\n\r\n  }\r\n\r\n  setFileDataType(curFileDataType) {\r\n    this.curFileDataType = curFileDataType;\r\n  }\r\n\r\n  /**\r\n  * Special scene with sphere: remove old before adding new one\r\n  */\r\n  removeSphereFromSphereScene() {\r\n    if (this.meshSphere !== null) {\r\n      this.sceneSphere.remove(this.meshSphere);\r\n    }\r\n    this.meshSphere = null;\r\n    this.geometrySphere = null;\r\n  }\r\n\r\n  /**\r\n  * Special scene with sphere: add new generated Three js geometry (sphere)\r\n  */\r\n  addSphereToSphereScene() {\r\n    const gen = new TetrahedronGenerator();\r\n    const vRadius = new THREE.Vector3(0.5, 0.5, 0.5);\r\n    const NUM_SUBDIVIDES = 2;\r\n    const okCreateTetra = gen.create(vRadius, NUM_SUBDIVIDES);\r\n    if (okCreateTetra < 1) {\r\n      return okCreateTetra;\r\n    }\r\n    const numVertices = gen.getNumVertices();\r\n    const numTriangles = gen.getNumTriangles();\r\n    const INDICES_IN_TRI = 3;\r\n\r\n    // console.log(`TetrahedronGenerator. numVertices = ${numVertices}, numTriangles = ${numTriangles}`);\r\n\r\n    const NUM_0 = 0;\r\n    const NUM_1 = 1;\r\n    const NUM_2 = 2;\r\n    const NUM_3 = 3;\r\n    const positions = [];\r\n    const indices = [];\r\n    const normals = [];\r\n    // copy vertices from generator\r\n    for (let i = 0; i < numVertices; i++) {\r\n      const vert = gen.getVertex(i);\r\n      const vNew = new THREE.Vector3(vert.x, vert.y, vert.z);\r\n      positions.push(vert.x, vert.y, vert.z);\r\n      vNew.normalize();\r\n      normals.push(vNew.x, vNew.y, vNew.z);\r\n    } // for (i) all vertices\r\n    // copy triangles from generator\r\n    for (let i = 0, j = 0; i < numTriangles; i++, j += INDICES_IN_TRI) {\r\n      const triIndices = gen.getTriangle(i);\r\n      //const faceNew = new THREE.Face3(triIndices[NUM_0], triIndices[NUM_1], triIndices[NUM_2]);\r\n      indices.push(triIndices[NUM_0], triIndices[NUM_1], triIndices[NUM_2]);\r\n    } // for (i) all triangles\r\n    // old style: buffered geometry\r\n    this.geometrySphere = new THREE.BufferGeometry();\r\n    const posAttribute = new Float32Array(positions);\r\n    const normalsAttribute = new Float32Array(normals);\r\n    const indAttribute = new Uint8Array(indices);\r\n\r\n    this.geometrySphere.addAttribute('position', new THREE.BufferAttribute(posAttribute, NUM_3));\r\n    this.geometrySphere.addAttribute('normal', new THREE.BufferAttribute(normalsAttribute, NUM_3));\r\n    this.geometrySphere.setIndex(new THREE.BufferAttribute(indAttribute, 1));\r\n    this.computeGeometrySphereUVs();\r\n    this.meshSphere = new THREE.Mesh(this.geometrySphere);\r\n    this.sceneSphere.add(this.meshSphere);\r\n    return this.meshSphere;\r\n  }\r\n\r\n  /**\r\n  * Special scene with sphere: copy rotated (by mouse) orientation from\r\n  * main mesh to sphere mesh\r\n  */\r\n  updateMeshSphere() {\r\n  /*\r\n    if (this.meshSphere !== null) {\r\n      const pos = this.mesh.position;\r\n      const quat = this.mesh.quaternion;\r\n      this.meshSphere.position.copy(pos);\r\n      this.meshSphere.quaternion.copy(quat);\r\n      this.meshSphere.updateMatrix();\r\n    }\r\n  */\r\n  }\r\n\r\n  /**\r\n   * Returns true if the maderial for VolumeRender is set\r\n   */\r\n  isVolumeLoaded() {\r\n    return (this.matVolumeRender !== null);\r\n  }\r\n\r\n  fov2Tan(fov) {\r\n    const HALF = 0.5;\r\n    return Math.tan(THREE.Math.degToRad(HALF * fov));\r\n  }\r\n\r\n  tan2Fov(tan) {\r\n    const TWICE = 2.0;\r\n    return THREE.Math.radToDeg(Math.atan(tan)) * TWICE;\r\n  }\r\n\r\n  /**\r\n   * Get screen copy image from current render\r\n   *\r\n   * @param {number} width Desired image width\r\n   * @param {number} height Desired image height\r\n   * @return {Object} Image with 3d renderer output (as URI string)\r\n   */\r\n  screenshot(width, height) {\r\n    if (this.renderer === null) {\r\n      return null;\r\n    }\r\n    let screenshotImage = null;\r\n    if (typeof width === 'undefined') {\r\n      screenshotImage = this.renderer.domElement.toDataURL('image/png');\r\n    } else {\r\n      // width and height are specified\r\n      const originalAspect = this.camera.aspect;\r\n      const originalFov = this.camera.fov;\r\n      const originalTanFov2 = this.fov2Tan(this.camera.fov);\r\n\r\n      // screen shot should contain the principal area of interest (a centered square touching screen sides)\r\n      const areaOfInterestSize = Math.min(this.windowWidth, this.windowHeight);\r\n      const areaOfInterestTanFov2 = originalTanFov2 * areaOfInterestSize / this.windowHeight;\r\n\r\n      // set appropriate camera aspect & FOV\r\n      const shotAspect = width / height;\r\n      this.camera.aspect = shotAspect;\r\n      this.camera.fov = this.tan2Fov(areaOfInterestTanFov2 / Math.min(shotAspect, 1.0));\r\n      this.camera.updateProjectionMatrix();\r\n\r\n      // resize canvas to the required size of screen shot\r\n      this.renderer.setSize(width, height);\r\n\r\n      // make screen shot\r\n      this.render();\r\n      screenshotImage = this.renderer.domElement.toDataURL('image/png');\r\n\r\n      // restore original camera & canvas proportions\r\n      this.camera.aspect = originalAspect;\r\n      this.camera.fov = originalFov;\r\n      this.camera.updateProjectionMatrix();\r\n      this.renderer.setSize(this.windowWidth, this.windowHeight);\r\n      this.render();\r\n    }\r\n    return screenshotImage;\r\n  }\r\n\r\n  /**\r\n   * Setting a MaskFlag\r\n   */\r\n  setMaskFlag(MaskFlag) {\r\n    this.matVolumeRender.defines.MaskFlag = MaskFlag;\r\n    this.matVolumeRender.needsUpdate = true;\r\n    this.matRenderToTexture.defines.MaskFlag = MaskFlag;\r\n    this.matRenderToTexture.needsUpdate = true;\r\n  }\r\n\r\n  /**\r\n   * Setting a variable for conditional compilation (Volume Render)\r\n   */\r\n  switchToTool23D(isTool23D) {\r\n    this.Tool23D = isTool23D;\r\n    if (this.Tool23D) {\r\n      this.graphics23d = new Graphics23d(this.scene23D, this.windowWidth, this.windowHeight);\r\n    }\r\n    else {\r\n      this.graphics23d = null;\r\n    }\r\n  }\r\n\r\n  switchToVolumeRender() {\r\n    if (this.matVolumeRender !== null && this.matRenderToTexture !== null) {\r\n      if (this.isRoiVolume > 0) {\r\n        this.matVolumeRender.defines.isoRenderFlag = 4;\r\n        this.matVolumeRender.needsUpdate = true;\r\n        //this.matInterpolation.defines.isoRenderFlag = 4;\r\n        //this.matInterpolation.needsUpdate = true;\r\n        this.matRenderToTexture.defines.isoRenderFlag = 4;\r\n        this.matRenderToTexture.needsUpdate = true;\r\n        this.renderState = this.RENDER_STATE.ONCE;\r\n      } else {\r\n        this.matVolumeRender.defines.isoRenderFlag = 0;\r\n        this.matVolumeRender.needsUpdate = true;\r\n        //this.matInterpolation.defines.isoRenderFlag = 0;\r\n        //this.matInterpolation.needsUpdate = true;\r\n        this.matRenderToTexture.defines.isoRenderFlag = 0;\r\n        this.matRenderToTexture.needsUpdate = true;\r\n        this.renderState = this.RENDER_STATE.ONCE;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setting a variable for conditional compilation (Full Volume Render)\r\n   */\r\n  switchToFullVolumeRender() {\r\n    if (this.matVolumeRender !== null && this.matRenderToTexture !== null) {\r\n      if (this.isRoiVolume > 0) {\r\n        this.matVolumeRender.defines.isoRenderFlag = 4;\r\n        this.matVolumeRender.needsUpdate = true;\r\n        //this.matInterpolation.defines.isoRenderFlag = 4;\r\n        //this.matInterpolation.needsUpdate = true;\r\n        this.matRenderToTexture.defines.isoRenderFlag = 4;\r\n        this.matRenderToTexture.needsUpdate = true;\r\n        this.renderState = this.RENDER_STATE.ONCE;\r\n      } else {\r\n        this.matVolumeRender.defines.isoRenderFlag = 3;\r\n        this.matVolumeRender.needsUpdate = true;\r\n        //this.matInterpolation.defines.isoRenderFlag = 3;\r\n        //this.matInterpolation.needsUpdate = true;\r\n        this.matRenderToTexture.defines.isoRenderFlag = 3;\r\n        this.matRenderToTexture.needsUpdate = true;\r\n        this.renderState = this.RENDER_STATE.ONCE;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setting a variable for conditional compilation (Isosurface render)\r\n   */\r\n  switchToIsosurfRender() {\r\n    if (this.matVolumeRender !== null && this.matRenderToTexture !== null) {\r\n      if (this.isRoiVolume > 0) {\r\n        this.matVolumeRender.defines.isoRenderFlag = 5;\r\n        this.matVolumeRender.needsUpdate = true;\r\n        //this.matInterpolation.defines.isoRenderFlag = 5;\r\n        //this.matInterpolation.needsUpdate = true;\r\n        this.matRenderToTexture.defines.isoRenderFlag = 5;\r\n        this.matRenderToTexture.needsUpdate = true;\r\n        this.renderState = this.RENDER_STATE.ONCE;\r\n        this.volumeUpdater.switchToRoiMapRender();\r\n      } else {\r\n        this.matVolumeRender.defines.isoRenderFlag = 1;\r\n        this.matVolumeRender.needsUpdate = true;\r\n        //this.matInterpolation.defines.isoRenderFlag = 1;\r\n        //this.matInterpolation.needsUpdate = true;\r\n        this.matRenderToTexture.defines.isoRenderFlag = 1;\r\n        this.matRenderToTexture.needsUpdate = true;\r\n        this.renderState = this.RENDER_STATE.ONCE;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setting a variable for conditional compilation (Max projection render)\r\n   */\r\n  switchToFLATRender() {\r\n    if (this.matVolumeRender !== null && this.matRenderToTexture !== null) {\r\n      this.matVolumeRender.defines.isoRenderFlag = 2;\r\n      this.matVolumeRender.needsUpdate = true;\r\n      //this.matInterpolation.defines.isoRenderFlag = 2;\r\n      //this.matInterpolation.needsUpdate = true;\r\n      this.matRenderToTexture.defines.isoRenderFlag = 2;\r\n      this.matRenderToTexture.needsUpdate = true;\r\n      this.renderState = this.RENDER_STATE.ONCE;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setting isosurface threshold\r\n   */\r\n  setIsoThresholdValue(sliderValue) {\r\n    if (this.matVolumeRender !== null && this.matRenderToTexture !== null) {\r\n      this.matRenderToTexture.uniforms.isoThreshold.value = sliderValue;\r\n      this.matRenderToTexture.uniforms.isoThreshold.needsUpdate = true;\r\n      this.matVolumeRender.uniforms.isoThreshold.value = sliderValue;\r\n      this.matVolumeRender.uniforms.isoThreshold.needsUpdate = true;\r\n      this.isoThreshold = sliderValue;\r\n      this.renderState = this.RENDER_STATE.ONCE;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setting volume opacity\r\n   * @param (number) sliderValue - slider ration in 0..1\r\n   */\r\n  setOpacityBarrier(sliderValue) {\r\n    if (this.matVolumeRender !== null && this.matRenderToTexture !== null) {\r\n      this.matVolumeRender.uniforms.opacityBarrier.value = OPACITY_SCALE * sliderValue;\r\n      this.matVolumeRender.uniforms.opacityBarrier.needsUpdate = true;\r\n      this.matRenderToTexture.uniforms.opacityBarrier.value = OPACITY_SCALE * sliderValue;\r\n      this.matRenderToTexture.uniforms.opacityBarrier.needsUpdate = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setting Brightness\r\n   * @param (number) value - brightness of ???\r\n   */\r\n  updateBrightness(value) {\r\n    if (this.matRenderToTexture !== null) {\r\n      this.matRenderToTexture.uniforms.brightness3D.value = value;\r\n      this.matRenderToTexture.uniforms.brightness3D.needsUpdate = true;\r\n    }\r\n    if (this.matVolumeRender !== null) {\r\n      this.matVolumeRender.uniforms.brightness3D.value = value;\r\n      this.matVolumeRender.uniforms.brightness3D.needsUpdate = true;\r\n      // this.volumeUpdater.updateVolumeTexture(0.1 + 1.5*value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setting Contrast\r\n   * @param (number) value - constrast of ???\r\n   */\r\n  updateContrast(value) {\r\n    if (this.matVolumeRender !== null && this.matRenderToTexture !== null) {\r\n      this.matRenderToTexture.uniforms.contrast3D.value = value;\r\n      this.matVolumeRender.uniforms.contrast3D.value = value;\r\n      this.matRenderToTexture.uniforms.contrast3D.needsUpdate = true;\r\n      this.matVolumeRender.uniforms.contrast3D.needsUpdate = true;\r\n    }\r\n  }\r\n\r\n  setAmbientTextureMode(isoThreshold) {\r\n    if (this.texVolumeAO) {\r\n      this.texVolumeAO.dispose();\r\n    }\r\n    this.volumeUpdater.ambientTexture.set(this.volTexture, isoThreshold);\r\n    this.texVolumeAO = this.volumeUpdater.ambientTexture.get();\r\n    this.matRenderToTexture.defines.useAmbientTex = 1;\r\n    this.matVolumeRender.defines.useAmbientTex = 1;\r\n    this.matRenderToTexture.needsUpdate = true;\r\n    this.matVolumeRender.needsUpdate = true;\r\n    this.matRenderToTexture.uniforms.texVolumeAO.value = this.texVolumeAO;\r\n    this.matRenderToTexture.uniforms.texVolumeAO.needsUpdate = true;\r\n    this.matVolumeRender.uniforms.texVolumeAO.value = this.texVolumeAO;\r\n    this.matVolumeRender.uniforms.texVolumeAO.needsUpdate = true;\r\n  }\r\n\r\n  offAmbientTextureMode() {\r\n    if (this.texVolumeAO) {\r\n      this.texVolumeAO.dispose();\r\n    }\r\n    this.matRenderToTexture.defines.useAmbientTex = 0;\r\n    this.matVolumeRender.defines.useAmbientTex = 0;\r\n    this.matRenderToTexture.needsUpdate = true;\r\n    this.matVolumeRender.needsUpdate = true;\r\n  }\r\n\r\n  /**\r\n   * Setting Cut Plane\r\n   * @param (number) value - ???\r\n   */\r\n  updateZCutPlane(value) {\r\n    const Z_MULTIPLIER = 1.4;\r\n    this.planeCenterPt.z = Z_MULTIPLIER * value;\r\n    this.updateCutPlanes();\r\n  }\r\n\r\n  /**\r\n   * Setting Transfer Function Params\r\n   * @param (array) values - 3 threshold values for volumetric render\r\n   */\r\n  setTransferFuncVec3(values, colorFlag) {\r\n    if (this.matRenderToTexture !== null) {\r\n      if (colorFlag === 0) {\r\n        this.matRenderToTexture.uniforms.t_function1min.value =\r\n          new THREE.Vector4(VOLUME_COLOR1_MIN_R, VOLUME_COLOR1_MIN_G, VOLUME_COLOR1_MIN_B, values[0]);\r\n      } else {\r\n        this.matRenderToTexture.uniforms.t_function1min.value =\r\n          new THREE.Vector4(VOLUME_COLOR3_MIN_R, VOLUME_COLOR3_MIN_G, VOLUME_COLOR3_MIN_B, values[0]);\r\n      }\r\n      this.matRenderToTexture.uniforms.t_function1min.needsUpdate = true;\r\n      this.matRenderToTexture.uniforms.t_function1max.value =\r\n        new THREE.Vector4(VOLUME_COLOR1_MAX_R, VOLUME_COLOR1_MAX_G, VOLUME_COLOR1_MAX_B, values[1]);\r\n      this.matRenderToTexture.uniforms.t_function1max.needsUpdate = true;\r\n      this.matRenderToTexture.uniforms.t_function2min.value =\r\n        new THREE.Vector4(VOLUME_COLOR2_MIN_R, VOLUME_COLOR2_MIN_G, VOLUME_COLOR2_MIN_B, values[2]);\r\n      this.matRenderToTexture.uniforms.t_function2min.needsUpdate = true;\r\n      this.matRenderToTexture.uniforms.t_function2max.value =\r\n        new THREE.Vector4(VOLUME_COLOR2_MAX_R, VOLUME_COLOR2_MAX_G, VOLUME_COLOR2_MAX_B, values[2]);\r\n      this.matRenderToTexture.uniforms.t_function2max.needsUpdate = true;\r\n      this.matRenderToTexture.uniforms.stepSize.value =\r\n        new THREE.Vector4(STEP_SIZE1, STEP_SIZE2, STEP_SIZE3, STEP_SIZE4);\r\n      this.matRenderToTexture.uniforms.stepSize.needsUpdate = true;\r\n      if (colorFlag === 0) {\r\n        this.matVolumeRender.uniforms.t_function1min.value =\r\n          new THREE.Vector4(VOLUME_COLOR1_MIN_R, VOLUME_COLOR1_MIN_G, VOLUME_COLOR1_MIN_B, values[0]);\r\n      } else {\r\n        this.matVolumeRender.uniforms.t_function1min.value =\r\n          new THREE.Vector4(VOLUME_COLOR3_MIN_R, VOLUME_COLOR3_MIN_G, VOLUME_COLOR3_MIN_B, values[0]);\r\n      }\r\n      this.matVolumeRender.uniforms.t_function1min.needsUpdate = true;\r\n      this.matVolumeRender.uniforms.t_function1max.value =\r\n        new THREE.Vector4(VOLUME_COLOR1_MAX_R, VOLUME_COLOR1_MAX_G, VOLUME_COLOR1_MAX_B, values[1]);\r\n      this.matVolumeRender.uniforms.t_function1max.needsUpdate = true;\r\n      this.matVolumeRender.uniforms.t_function2min.value =\r\n        new THREE.Vector4(VOLUME_COLOR2_MIN_R, VOLUME_COLOR2_MIN_G, VOLUME_COLOR2_MIN_B, values[2]);\r\n      this.matVolumeRender.uniforms.t_function2min.needsUpdate = true;\r\n      this.matVolumeRender.uniforms.t_function2max.value =\r\n        new THREE.Vector4(VOLUME_COLOR2_MAX_R, VOLUME_COLOR2_MAX_G, VOLUME_COLOR2_MAX_B, values[2]);\r\n      this.matVolumeRender.uniforms.t_function2max.needsUpdate = true;\r\n      this.matVolumeRender.uniforms.stepSize.value =\r\n        new THREE.Vector4(STEP_SIZE1, STEP_SIZE2, STEP_SIZE3, STEP_SIZE4);\r\n      this.matVolumeRender.uniforms.stepSize.needsUpdate = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Compute 3D texture coordinates on BBOX\r\n   * @param (object) nonEmptyBoxMin - Min corner for non empty box in volume\r\n   * @param (object) nonEmptyBoxMax - Max corner for non empty box in volume\r\n   */\r\n  computeGeometryUVs(nonEmptyBoxMin, nonEmptyBoxMax) {\r\n    this.geometry.computeBoundingBox();\r\n    const VAL_3 = 3;\r\n    const HALF = 0.5;\r\n\r\n    const max = this.geometry.boundingBox.max;\r\n    const min = this.geometry.boundingBox.min;\r\n    const offset = new THREE.Vector3(0 - min.x, 0 - min.y, 0 - min.z);\r\n    const range = new THREE.Vector3(max.x - min.x, max.y - min.y, max.z - min.z);\r\n    this.geo_offset1 = new THREE.Vector3(0, 0, 0);\r\n    this.geo_offset1 = offset;\r\n    this.geo_offset2 = new THREE.Vector3(0, 0, 0);\r\n    this.geo_offset2.x = nonEmptyBoxMin.x + HALF;\r\n    this.geo_offset2.y = nonEmptyBoxMin.y - HALF;\r\n    this.geo_offset2.z = nonEmptyBoxMin.z - HALF;\r\n    this.geo_scale = new THREE.Vector3(0, 0, 0);\r\n    this.geo_scale.x = (nonEmptyBoxMax.x - nonEmptyBoxMin.x) / range.x;\r\n    this.geo_scale.y = (nonEmptyBoxMax.y - nonEmptyBoxMin.y) / range.y;\r\n    this.geo_scale.z = (nonEmptyBoxMax.z - nonEmptyBoxMin.z) / range.z;\r\n\r\n    const NEED_GEO_UVW = true;\r\n    if (NEED_GEO_UVW) {\r\n      const uvw = new Float32Array(this.geometry.getAttribute('position').count * VAL_3);\r\n      for (let i = 0; i < this.geometry.getAttribute('position').count; i++) {\r\n        const vx = this.geometry.getAttribute('position').getX(i);\r\n        const vy = this.geometry.getAttribute('position').getY(i);\r\n        const vz = this.geometry.getAttribute('position').getZ(i);\r\n        // eslint-disable-next-line\r\n        uvw[i * VAL_3 + 0] = -vx;\r\n        // eslint-disable-next-line\r\n        uvw[i * VAL_3 + 1] = vy;\r\n        // eslint-disable-next-line\r\n        uvw[i * VAL_3 + 2] = vz;\r\n      }\r\n      this.geometry.addAttribute('uvw', new THREE.BufferAttribute(uvw, VAL_3));\r\n      this.geometry.getAttribute('uvw').needsUpdate = true;\r\n    }\r\n  }\r\n\r\n  computeGeometrySphereUVs() {\r\n    const VAL_3 = 3;\r\n    // Need calculate uvw coords for sphere geo\r\n    const NEED_SPHERE_UVW = true;\r\n    if (NEED_SPHERE_UVW) {\r\n      // console.log(`vBoxVirt = ${this.vBoxVirt.x}, ${this.vBoxVirt.y}, ${this.vBoxVirt.z}`);\r\n      const uvw = new Float32Array(this.geometrySphere.getAttribute('position').count * VAL_3);\r\n      for (let i = 0; i < this.geometrySphere.getAttribute('position').count; i++) {\r\n        const vx = this.geometrySphere.getAttribute('position').getX(i);\r\n        const vy = this.geometrySphere.getAttribute('position').getY(i);\r\n        const vz = this.geometrySphere.getAttribute('position').getZ(i);\r\n        // eslint-disable-next-line\r\n        uvw[i * VAL_3 + 0] = -vx / this.vBoxVirt.x;// / this.vBoxVirt.x; //-(vx + this.geo_offset1.x) * this.geo_scale.x  + this.geo_offset2.x;\r\n        // eslint-disable-next-line\r\n        uvw[i * VAL_3 + 1] = +vy / this.vBoxVirt.y;// / this.vBoxVirt.y; //(vy + this.geo_offset1.y) * this.geo_scale.y  + this.geo_offset2.y;\r\n        // eslint-disable-next-line\r\n        uvw[i * VAL_3 + 2] = +vz / this.vBoxVirt.z;// / this.vBoxVirt.z; //(vz + this.geo_offset1.z) * this.geo_scale.z  + this.geo_offset2.z;\r\n      }\r\n      this.geometrySphere.addAttribute('uvw', new THREE.BufferAttribute(uvw, VAL_3));\r\n      this.geometrySphere.getAttribute('uvw').needsUpdate = true;\r\n    }\r\n\r\n    const NEED_FACE_VERTEX_UVW = false;\r\n    if (NEED_FACE_VERTEX_UVW) {\r\n      this.geometrySphere.faceVertexUvs = [];\r\n      const numVertices = this.geometrySphere.vertices.count;\r\n      const OFF_0 = 0, OFF_1 = 1, OFF_2 = 2;\r\n      const uvw = new Float32Array(numVertices * VAL_3);\r\n      let j = 0;\r\n      for (let i = 0; i < numVertices; i++, j += VAL_3) {\r\n        const vx = this.geometrySphere.vertices[i].x;\r\n        const vy = this.geometrySphere.vertices[i].y;\r\n        const vz = this.geometrySphere.vertices[i].z;\r\n        // this.geometrySphere.faceVertexUvs.push(new THREE.Vector2(vx, vy));\r\n        uvw[j + OFF_0] = -vx;\r\n        uvw[j + OFF_1] = vy;\r\n        uvw[j + OFF_2] = vz;\r\n      } // for (i)\r\n      // this.geometrySphere.addAttribute('uvw', new THREE.BufferAttribute(uvw, VAL_3));\r\n      this.geometrySphere.uvw = uvw;\r\n    } // if need face uv\r\n  }\r\n\r\n  createClipPlaneGeometry() {\r\n    const matClipPlane = new MaterialClipPlane();\r\n    matClipPlane.create(this.bfTexture, (mat) => {\r\n      // eslint-disable-next-line\r\n      this.planeGeometry = new THREE.PlaneBufferGeometry(2, 2);\r\n      const plane = new THREE.Mesh(this.planeGeometry, mat);\r\n      this.sceneClipPlane.add(plane);\r\n    });\r\n  }\r\n\r\n  updateClipPlaneGeometry() {\r\n    const VAL_3 = 3;\r\n    const uvw = new Float32Array(this.planeGeometry.getAttribute('position').count * VAL_3);\r\n    const l2w = new THREE.Matrix4();\r\n    l2w.getInverse(this.mesh.matrix);\r\n    const invPerspective = new THREE.Matrix4();\r\n    invPerspective.getInverse(this.camera.projectionMatrix);\r\n    const invView = new THREE.Matrix4();\r\n    invView.copy(this.camera.matrixWorld);\r\n    for (let i = 0; i < this.planeGeometry.getAttribute('position').count; i++) {\r\n      const v = new THREE.Vector3();\r\n      const SOME_SMALL_ADD = 0.001;\r\n      v.x = this.planeGeometry.getAttribute('position').getX(i);\r\n      v.y = this.planeGeometry.getAttribute('position').getY(i);\r\n      v.z = this.planeGeometry.getAttribute('position').getZ(i) + SOME_SMALL_ADD;\r\n      v.applyMatrix4(invPerspective);\r\n      v.applyMatrix4(invView);\r\n      v.applyMatrix4(l2w);\r\n      //v.applyMatrix4(this.getScreen2WorldTransform());\r\n      //uvw[i * VAL_3 + 1] = (v.y + this.geo_offset1.y) * this.geo_scale.y + this.geo_offset2.y;\r\n      //uvw[i * VAL_3 + 0] = -(v.x + this.geo_offset1.x) * this.geo_scale.x + this.geo_offset2.x;\r\n      //// eslint-disable-next-line\r\n      //uvw[i * VAL_3 + 1] = (v.y + this.geo_offset1.y) * this.geo_scale.y + this.geo_offset2.y;\r\n      //// eslint-disable-next-line\r\n      //uvw[i * VAL_3 + 2] = (v.z + this.geo_offset1.z) * this.geo_scale.z + this.geo_offset2.z;\r\n\r\n      // eslint-disable-next-line\r\n      uvw[i * VAL_3 + 0] = -v.x;\r\n      // eslint-disable-next-line\r\n      uvw[i * VAL_3 + 1] = v.y;\r\n      // eslint-disable-next-line\r\n      uvw[i * VAL_3 + 2] = v.z;\r\n\r\n    }\r\n    this.planeGeometry.addAttribute('uvw', new THREE.BufferAttribute(uvw, VAL_3));\r\n    this.planeGeometry.getAttribute('uvw').needsUpdate = true;\r\n  }\r\n\r\n  getScreen2WorldTransform() {\r\n    const l2w = new THREE.Matrix4();\r\n    l2w.getInverse(this.mesh.matrix);\r\n    const s2w = new THREE.Matrix4();\r\n    s2w.getInverse(this.camera.projectionMatrix);\r\n    const invView = new THREE.Matrix4();\r\n    invView.copy(this.camera.matrixWorld);\r\n    s2w.multiply(invView);\r\n    s2w.multiply(l2w);\r\n    return s2w;\r\n  }\r\n\r\n  /**\r\n   * Create geometry and materials for 3D rendering\r\n   * @param (object) box - physic volume box dimensions\r\n   * @param (object) nonEmptyBoxMin - Min corner for non empty box in volume\r\n   * @param (object) nonEmptyBoxMin - Min corner for non empty box in volume\r\n   * @param (bool) isRoiVolume) - is roi volume\r\n   */\r\n  initWithVolume(volume, box, nonEmptyBoxMin, nonEmptyBoxMax, isRoiVolume, isFULL3D) {\r\n    let sideMax = (box.x > box.y) ? box.x : box.y;\r\n    sideMax = (box.z > sideMax) ? box.z : sideMax;\r\n    this.vBoxVirt.x = box.x / sideMax;\r\n    this.vBoxVirt.y = box.y / sideMax;\r\n    this.vBoxVirt.z = box.z / sideMax;\r\n    this.isoThreshold = this.curFileDataType.thresholdIsosurf;    \r\n    this.volume = volume;\r\n    this.nonEmptyBoxMin = nonEmptyBoxMin;\r\n    this.nonEmptyBoxMax = nonEmptyBoxMax;\r\n    // remove old sphere\r\n    this.matWireFrame = null;\r\n    this.removeSphereFromSphereScene();\r\n\r\n    // create new sphere\r\n    const matWCloader = new MaterialWC();\r\n    this.matWireFrame = matWCloader.create(this.bfTexture, this.ffTexture);\r\n    // const matColor = new MaterialColor2d();\r\n    // this.matColor23d = matColor.create();\r\n\r\n    /*\r\n    console.log(`this.bfTexture`);\r\n    if (this.bfTexture === null) {\r\n      console.log(`this.bfTexture === null`);\r\n      return 1;\r\n    }\r\n    */\r\n    this.addSphereToSphereScene();\r\n\r\n    this.renderScene = SCENE_TYPE_RAYCAST;\r\n    this.sceneReadyCounter = 0;\r\n    this.renderCounter = 0;\r\n    let matBfThreeGS = null;\r\n    let matFfThreeGS = null;\r\n    let matIntetpl = null;\r\n    let matScreenTex = null;\r\n    if (this.sceneClipPlane) {\r\n      this.sceneClipPlane = new THREE.Scene();\r\n    }\r\n    if (!this.scene) {\r\n      return;\r\n    }\r\n    // remove old mesh\r\n    if (this.mesh !== null) {\r\n      this.scene.remove(this.mesh);\r\n    }\r\n\r\n    if (this.geometry !== null) {\r\n      this.geometry.dispose();\r\n    }\r\n    this.mesh = null;\r\n    // Create geometry\r\n    this.geometry = new THREE.BufferGeometry();\r\n    //this.geometry.fromGeometry(new THREE.BoxGeometry(this.vBoxVirt.x, this.vBoxVirt.y, this.vBoxVirt.z));\r\n    this.geometry.fromGeometry(new THREE.BoxGeometry(1.0, 1.0, 1.0));\r\n    // Compute texture coordinates\r\n\r\n    // compute UVW\r\n    this.computeGeometryUVs(nonEmptyBoxMin, nonEmptyBoxMax);\r\n    this.geometry.scale(this.vBoxVirt.x, this.vBoxVirt.y, this.vBoxVirt.z);\r\n\r\n    // Set camera\r\n    // eslint-disable-next-line\r\n    this.camera.position.set(0.0, 0.0, 1.5);\r\n    // eslint-disable-next-line\r\n    this.camera.lookAt(new THREE.Vector3(0.0, 0.0, 0.0));\r\n    // Create 3D texture    \r\n    const xDim = this.volume.m_xDim;\r\n    const yDim = this.volume.m_yDim;\r\n    const zDim = this.volume.m_zDim;\r\n    console.log(`3D tex size = ${xDim} ${yDim} ${zDim}`);\r\n    if (this.volTexture) {\r\n      this.volTexture.dispose();\r\n    }\r\n    this.eraserStarted = false;\r\n    this.isRoiVolume = isRoiVolume;\r\n    this.roiPalette = null;\r\n    if (isRoiVolume === true) {\r\n      const palette = new RoiPalette();\r\n      this.roiPalette = palette.getPalette256();\r\n      const BYTES_PER_COLOR = 4;\r\n      const MAGIC_COLOR = 250;\r\n      const OFFS_0 = 0;\r\n      const OFFS_1 = 1;\r\n      const OFFS_2 = 2;\r\n\r\n      const palB = this.roiPalette[MAGIC_COLOR * BYTES_PER_COLOR + OFFS_0];\r\n      const palG = this.roiPalette[MAGIC_COLOR * BYTES_PER_COLOR + OFFS_1];\r\n      const palR = this.roiPalette[MAGIC_COLOR * BYTES_PER_COLOR + OFFS_2];\r\n      console.log(`RoiPalette: pal[250] = ${palR}, ${palG}, ${palB}`);\r\n    }\r\n    this.volumeUpdater = new VolumeFilter3D();\r\n    // this.engine2d.volumeUpdater = this.volumeUpdater;\r\n    /*const props = {\r\n      volume: this.volume,\r\n      isWebGL2: this.isWebGL2\r\n    };*/\r\n    this.volTexture = this.volumeUpdater.createUpdatableVolumeTex(this.volume, isRoiVolume, this.roiPalette);\r\n    this.origVolumeTex = this.volumeUpdater.origVolumeTex;\r\n    this.texTF = this.volumeUpdater.createTransferFuncTexture();\r\n    //this.volTextureMask = this.volumeUpdater.createUpdatableVolumeMask(this.volume);\r\n\r\n    if (this.volTextureMask) {\r\n      this.volTextureMask.dispose();\r\n    }\r\n    if (this.texVolumeAO) {\r\n      this.texVolumeAO.dispose();\r\n    }\r\n    //this.texVolumeAO = this.volumeUpdater.gettexVolumeAO();\r\n\r\n    if (this.renderer.getContext().getExtension('EXT_color_buffer_float')) {\r\n      if (this.bfTexture) {\r\n        this.bfTexture.dispose();\r\n      }\r\n      // Create Render Target for back face render\r\n      //this.bfTexture = new THREE.WebGLRenderTarget(this.windowWidth * window.devicePixelRatio,\r\n      //this.windowHeight * window.devicePixelRatio, {\r\n      this.bfTexture = new THREE.WebGLRenderTarget(this.windowWidth, this.windowHeight, {\r\n        minFilter: THREE.LinearFilter,\r\n        magFilter: THREE.LinearFilter,\r\n        format: THREE.RGBAFormat,\r\n        type: THREE.FloatType,\r\n        depthBuffer: true,\r\n      });\r\n      const VAL_4 = 4;\r\n      this.bufferBFTextureCPU = new Float32Array(VAL_4 * this.windowWidth * this.windowHeight);\r\n\r\n      if (this.ffTexture) {\r\n        this.ffTexture.dispose();\r\n      }\r\n      // Create Render Target for front face render\r\n      //this.ffTexture = new THREE.WebGLRenderTarget(this.windowWidth * window.devicePixelRatio,\r\n      //this.windowHeight * window.devicePixelRatio, {\r\n      this.ffTexture = new THREE.WebGLRenderTarget(this.windowWidth,\r\n        this.windowHeight, {\r\n          minFilter: THREE.LinearFilter,\r\n          magFilter: THREE.LinearFilter,\r\n          format: THREE.RGBAFormat,\r\n          type: THREE.FloatType,\r\n          depthBuffer: true,\r\n        });\r\n      this.bufferFFTextureCPU = new Float32Array(VAL_4 * this.windowWidth * this.windowHeight);\r\n\r\n      if (this.renderfTexture) {\r\n        this.renderToTexture.dispose();\r\n      }\r\n      // Create Render Target for volume render to texture\r\n      const VAL_3 = 3;\r\n      this.xSmallTexSize = Math.floor(this.windowWidth / VAL_3);\r\n      this.ySmallTexSize = Math.floor(this.windowHeight / VAL_3);\r\n      //this.renderToTexture = new THREE.WebGLRenderTarget((this.windowWidth * window.devicePixelRatio) / VAL_3,\r\n      //(this.windowHeight * window.devicePixelRatio) / VAL_3, {\r\n      this.renderToTexture = new THREE.WebGLRenderTarget(this.xSmallTexSize,\r\n        this.ySmallTexSize, {\r\n          minFilter: THREE.NearestFilter,\r\n          magFilter: THREE.NearestFilter,\r\n          format: THREE.RGBAFormat,\r\n          type: THREE.FloatType,\r\n          depthBuffer: true,\r\n        });\r\n      this.bufferRenderToTextureCPU = new Float32Array(VAL_4 * this.xSmallTexSize * this.ySmallTexSize);\r\n    } else {\r\n      console.log('cant create float texture');\r\n    }\r\n\r\n    this.createClipPlaneGeometry();\r\n\r\n    if (this.matWireFrame) {\r\n      this.matWireFrame.uniforms.texBF.value = this.bfTexture;\r\n      this.matWireFrame.uniforms.texBF.needsUpdate = true;\r\n      this.matWireFrame.uniforms.texFF.value = this.ffTexture;\r\n      this.matWireFrame.uniforms.texFF.needsUpdate = true;\r\n    }\r\n\r\n    // create material for screen texture mapping\r\n    // Used to map backface texture to frontface geom\r\n    matScreenTex = new MaterialScreenTexMap();\r\n    this.matScreenTex = matScreenTex.create(this.ffTexture);\r\n    // Create material for back face render\r\n    matBfThreeGS = new MaterialBF();\r\n    matBfThreeGS.create((mat) => {\r\n      this.matBF = mat;\r\n      this.sceneReadyCounter++;\r\n    });\r\n\r\n    // Create material for front face render\r\n    matFfThreeGS = new MaterialFF();\r\n    matFfThreeGS.m_uniforms.PlaneX.value = new THREE.Vector4(-1.0, 0.0, 0.0, 0.5);\r\n    matFfThreeGS.m_uniforms.PlaneY.value = new THREE.Vector4(0.0, -1.0, 0.0, 0.5);\r\n    matFfThreeGS.m_uniforms.PlaneZ.value = new THREE.Vector4(0.0, 0.0, -1.0, 0.5);\r\n    matFfThreeGS.create(this.bfTexture.texture, (mat) => {\r\n      this.matFF = mat;\r\n      this.sceneReadyCounter++;\r\n    });\r\n\r\n    // Create mesh\r\n    this.mesh = new THREE.Mesh(this.geometry);\r\n    //console.log(`startRot = ${this.curFileDataType.startRotX} ${this.curFileDataType.startRotY}`);\r\n    this.orbitControl.setMesh(this.mesh);\r\n    this.orbitControl.setWireMesh(this.meshSphere);\r\n\r\n\r\n    // Create material for volume render to texture\r\n    const offsets = [];\r\n    const nOffs = 64;\r\n    // create offsets for ssao\r\n    for (let i = 0; i < nOffs; ++i) {\r\n      // eslint-disable-next-line\r\n      const x = Math.random() * 2 - 1;\r\n      // eslint-disable-next-line\r\n      const y = Math.random() * 2 - 1;\r\n      // eslint-disable-next-line\r\n//      const z = Math.random() * 2 - 1;\r\n      const z = -Math.random();\r\n      offsets.push(new THREE.Vector3(x, y, z));\r\n    }\r\n    this.matRenderToTextureThreeGS = new MaterialRenderToTexture();\r\n    this.matRenderToTextureThreeGS.m_uniforms.colorMap1D.value = this.colorMapTexture;\r\n    this.matRenderToTextureThreeGS.create(this.texTF, this.volTexture,\r\n      null, this.texVolumeAO, this.bfTexture.texture, this.ffTexture.texture, offsets,\r\n      //this.volTextureMask, this.texVolumeAO, this.bfTexture.texture, this.ffTexture.texture, offsets,\r\n      (mat) => {\r\n        mat.uniforms.t_function1min.value =\r\n          new THREE.Vector4(VOLUME_COLOR1_MIN_R, VOLUME_COLOR1_MIN_G, VOLUME_COLOR1_MIN_B,\r\n            this.curFileDataType.thresholdTissue1);\r\n        mat.uniforms.t_function1max.value =\r\n          new THREE.Vector4(VOLUME_COLOR1_MAX_R, VOLUME_COLOR1_MAX_G, VOLUME_COLOR1_MAX_B,\r\n            this.curFileDataType.thresholdTissue2);\r\n        mat.uniforms.t_function2min.value =\r\n          new THREE.Vector4(VOLUME_COLOR2_MIN_R, VOLUME_COLOR2_MIN_G, VOLUME_COLOR2_MIN_B,\r\n            this.curFileDataType.thresholdIsosurf);\r\n        mat.uniforms.t_function2max.value =\r\n          new THREE.Vector4(VOLUME_COLOR2_MAX_R, VOLUME_COLOR2_MAX_G, VOLUME_COLOR2_MAX_B,\r\n            this.curFileDataType.thresholdIsosurf);\r\n        mat.uniforms.stepSize.value =\r\n          new THREE.Vector4(STEP_SIZE1, STEP_SIZE2, STEP_SIZE3, STEP_SIZE4);\r\n        mat.uniforms.texSize.value = xDim;//this.engine2d.m_volumeHeader.m_pixelWidth;\r\n        mat.uniforms.isoThreshold.value = this.curFileDataType.thresholdIsosurf;\r\n        mat.uniforms.brightness3D.value = this.curFileDataType.brightness;\r\n        mat.uniforms.opacityBarrier.value = OPACITY_SCALE * this.curFileDataType.opacityTissue;\r\n        mat.uniforms.volumeSizeZ.value = zDim;\r\n\r\n        mat.uniforms.xDim.value = xDim;\r\n        mat.uniforms.yDim.value = yDim;\r\n\r\n        mat.uniforms.lightDir.value = new THREE.Vector3(this.curFileDataType.lightDirComp,\r\n          this.curFileDataType.lightDirComp, this.curFileDataType.lightDirComp);\r\n        mat.uniforms.needsUpdate = true;\r\n        this.matRenderToTexture = mat;\r\n        this.sceneReadyCounter++;\r\n      });\r\n\r\n    // Create material for interpolation\r\n    matIntetpl = new MaterialInterpolation();\r\n    const VAL_3 = 3.0;\r\n    matIntetpl.m_uniforms.isoSurfTexel.value = new THREE.Vector2(VAL_3 / this.windowWidth,\r\n      VAL_3 / this.windowHeight);\r\n    matIntetpl.create(this.renderToTexture.texture, (mat) => {\r\n      mat.uniforms.needsUpdate = true;\r\n      //this.matInterpolation = mat;\r\n      this.sceneReadyCounter++;\r\n    });\r\n\r\n    // Create material for main pass of volume render\r\n    this.matSkullThreeGS = new MaterialVolumeRender();\r\n    this.matSkullThreeGS.m_uniforms.isoSurfTexel.value = new THREE.Vector2(VAL_3 / this.windowWidth,\r\n      VAL_3 / this.windowHeight);\r\n    this.matSkullThreeGS.m_uniforms.colorMap1D.value = this.colorMapTexture;\r\n    this.matSkullThreeGS.create(this.texTF, this.volTexture,\r\n      null, this.texVolumeAO, this.bfTexture.texture, this.ffTexture.texture,\r\n      //this.volTextureMask, this.texVolumeAO, this.bfTexture.texture, this.ffTexture.texture,\r\n      this.renderToTexture.texture, offsets, (mat) => {\r\n        mat.uniforms.t_function1min.value =\r\n          new THREE.Vector4(VOLUME_COLOR1_MIN_R, VOLUME_COLOR1_MIN_G, VOLUME_COLOR1_MIN_B,\r\n            this.curFileDataType.thresholdTissue1);\r\n        mat.uniforms.t_function1max.value =\r\n          new THREE.Vector4(VOLUME_COLOR1_MAX_R, VOLUME_COLOR1_MAX_G, VOLUME_COLOR1_MAX_B,\r\n            this.curFileDataType.thresholdTissue2);\r\n        mat.uniforms.t_function2min.value =\r\n          new THREE.Vector4(VOLUME_COLOR2_MIN_R, VOLUME_COLOR2_MIN_G, VOLUME_COLOR2_MIN_B,\r\n            this.curFileDataType.thresholdIsosurf);\r\n        mat.uniforms.t_function2max.value =\r\n          new THREE.Vector4(VOLUME_COLOR2_MAX_R, VOLUME_COLOR2_MAX_G, VOLUME_COLOR2_MAX_B,\r\n            this.curFileDataType.thresholdIsosurf);\r\n        mat.uniforms.stepSize.value =\r\n          new THREE.Vector4(STEP_SIZE1, STEP_SIZE2, STEP_SIZE3, STEP_SIZE4);\r\n        mat.uniforms.texSize.value = xDim;\r\n        mat.uniforms.isoThreshold.value = this.curFileDataType.thresholdIsosurf;\r\n        mat.uniforms.brightness3D.value = this.curFileDataType.brightness;\r\n        mat.uniforms.volumeSizeZ.value = zDim;\r\n\r\n        mat.uniforms.xDim.value = xDim;\r\n        mat.uniforms.yDim.value = yDim;\r\n\r\n        mat.uniforms.opacityBarrier.value = OPACITY_SCALE * this.curFileDataType.opacityTissue;\r\n        mat.uniforms.lightDir.value = new THREE.Vector3(this.curFileDataType.lightDirComp,\r\n          this.curFileDataType.lightDirComp, this.curFileDataType.lightDirComp);\r\n        mat.uniforms.needsUpdate = true;\r\n        this.scene.add(this.mesh);\r\n        this.matVolumeRender = mat;\r\n        if (isFULL3D) {\r\n          this.switchToFullVolumeRender() \r\n        } else {\r\n          this.switchToVolumeRender();      \r\n        }\r\n        this.mesh.material = this.matVolumeRender;\r\n        this.meshSphere.material = this.matVolumeRender;\r\n        this.sceneReadyCounter++;\r\n      });\r\n    //this.tools23d.set2dToolType(toolType);\r\n    //matSkullThreeGS.m_uniforms.texVolumeMask.value = this.volTextureMask;\r\n  } // callbackCreateCubeVolume\r\n\r\n  /**\r\n   * Creates transfer function color map\r\n   * @param ctrlPts Array of control points of type HEX  = color value\r\n   */\r\n  setTransferFuncColors(ctrlPtsColorsHex) {\r\n    this.volumeUpdater.setTransferFuncColors(ctrlPtsColorsHex);\r\n  }\r\n\r\n  /**\r\n   * Creates transfer function color map\r\n   * @param ctrlPts Array of Vector2 where (x,y) = x coordinate in [0, 1], alpha value in [0, 1]\r\n   * //intensity [0,255] opacity [0,1]\r\n   */\r\n  updateTransferFuncTexture(intensities, opacities) {\r\n    return this.volumeUpdater.updateTransferFuncTexture(intensities, opacities);\r\n  }\r\n\r\n  /**\r\n   * Create 2D texture containing selected ROIs\r\n   * @param selectedROIs 256 byte roi values\r\n   */\r\n  updateSelectedRoiMap(selectedROIs) {\r\n    this.volumeUpdater.updateSelectedRoiMap(selectedROIs);\r\n  }  /**\r\n   * Rotate Cut Plane (Rotation is inverse to the object)\r\n   */\r\n\r\n  updateCutPlanes() {\r\n    if (!this.mesh) {\r\n      return;\r\n    }\r\n    const mtx = new THREE.Matrix4();\r\n    if (this.renderScene === SCENE_TYPE_SPHERE) {\r\n      mtx.getInverse(mtx.extractRotation(this.meshSphere.matrix));\r\n    } else {\r\n      mtx.getInverse(mtx.extractRotation(this.mesh.matrix));\r\n    }\r\n    const xAxis = new THREE.Vector3(-1.0, 0.0, 0.0);\r\n    const yAxis = new THREE.Vector3(0.0, -1.0, 0.0);\r\n    const zAxis = new THREE.Vector3(0.0, 0.0, -1.0);\r\n    const centerPt = new THREE.Vector3().copy(this.planeCenterPt);\r\n    centerPt.applyMatrix4(mtx);\r\n    xAxis.applyMatrix4(mtx);\r\n    yAxis.applyMatrix4(mtx);\r\n    zAxis.applyMatrix4(mtx);\r\n    if (this.matFF !== null) {\r\n      this.matFF.uniforms.PlaneX.value.x = xAxis.x;\r\n      this.matFF.uniforms.PlaneX.value.y = xAxis.y;\r\n      this.matFF.uniforms.PlaneX.value.z = xAxis.z;\r\n      this.matFF.uniforms.PlaneX.value.w = -centerPt.dot(xAxis);\r\n\r\n      this.matFF.uniforms.PlaneY.value.x = yAxis.x;\r\n      this.matFF.uniforms.PlaneY.value.y = yAxis.y;\r\n      this.matFF.uniforms.PlaneY.value.z = yAxis.z;\r\n      this.matFF.uniforms.PlaneY.value.w = -centerPt.dot(yAxis);\r\n\r\n      this.matFF.uniforms.PlaneZ.value.x = -zAxis.x;\r\n      this.matFF.uniforms.PlaneZ.value.y = zAxis.y;\r\n      this.matFF.uniforms.PlaneZ.value.z = zAxis.z;\r\n      this.matFF.uniforms.PlaneZ.value.w = -centerPt.dot(zAxis);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Rotate light direction (Rotation is inverse to the object)\r\n   */\r\n  updateLightDir() {\r\n    if (!this.mesh) {\r\n      console.log('UpdateLightDir call mesh is not created');\r\n      return;\r\n    }\r\n\r\n    const mtx = new THREE.Matrix4();\r\n    //mtx.getInverse(mtx.extractRotation(this.mesh.matrix));\r\n    if (this.renderScene === SCENE_TYPE_RAYCAST) {\r\n      mtx.getInverse(mtx.extractRotation(this.mesh.matrix));\r\n    } else {\r\n      mtx.getInverse(mtx.extractRotation(this.meshSphere.matrix));\r\n    }\r\n    const lightDir = new THREE.Vector3(1.0, 1.0, 1.0);\r\n    lightDir.normalize();\r\n    lightDir.applyMatrix4(mtx);\r\n    lightDir.x = -lightDir.x;\r\n    this.matRenderToTexture.uniforms.lightDir.value = lightDir;\r\n    this.matRenderToTexture.uniforms.lightDir.needsUpdate = true;\r\n    this.matVolumeRender.uniforms.lightDir.value = lightDir;\r\n    this.matVolumeRender.uniforms.lightDir.needsUpdate = true;\r\n  }\r\n\r\n  /** Check is scene ready to render */\r\n  isReadyToRender() {\r\n    if (this.sceneReadyCounter !== SCENE_READY_COUNTER_OK) {\r\n      return false;\r\n    }\r\n    const matReady = (this.matVolumeRender !== null) && (this.matBF !== null) &&\r\n      (this.matFF !== null) && (this.matRenderToTexture !== null);\r\n    if (!matReady) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /** Render 3d scene */\r\n  render() {\r\n    /*if (this.sceneReadyCounter !== SCENE_READY_COUNTER_OK) {\r\n      // render empty scene to show \"black\" empty screen\r\n      this.renderer.render(this.scene, this.camera);\r\n      return;\r\n    }*/\r\n    if (!this.isReadyToRender()) {\r\n      return;\r\n    }\r\n    const matReady = (this.matVolumeRender !== null) && (this.matBF !== null) &&\r\n      (this.matFF !== null) && (this.matRenderToTexture !== null);\r\n    if (!matReady) {\r\n      // do nothing\r\n    } else {\r\n      // check once render target\r\n      if (this.checkFrameBufferMode === CHECK_MODE_NOT_CHECKED) {\r\n        // const isGood = true;// GlCheck.checkFrameBuffer(this.renderer, this.bfTexture);\r\n        this.checkFrameBufferMode = CHECK_MODE_RESULT_OK;\r\n      }\r\n\r\n      if (this.renderScene === SCENE_TYPE_RAYCAST) {\r\n        this.updateLightDir();\r\n        this.updateClipPlaneGeometry();\r\n        this.updateCutPlanes();\r\n        \r\n        this.renderer.setRenderTarget(this.bfTexture);\r\n        this.renderer.clear();\r\n        this.renderer.state.buffers.depth.setClear(0);\r\n        this.scene.overrideMaterial = this.matBF;\r\n        this.renderer.render(this.scene, this.camera, this.bfTexture);\r\n        const glC = this.renderer.getContext();\r\n        if (this.isEraseMode && !this.lockEraserBuffersUpdating) {\r\n          glC.readPixels(0, 0, this.windowWidth, this.windowHeight, glC.RGBA, glC.FLOAT, this.bufferBFTextureCPU);\r\n        }\r\n        this.renderer.setRenderTarget(this.ffTexture);\r\n        this.renderer.clear();\r\n        this.renderer.state.buffers.depth.setClear(1);\r\n        // render clip plane without depth test\r\n        this.renderer.render(this.sceneClipPlane, this.camera, this.ffTexture);\r\n        // enable test again\r\n        this.scene.overrideMaterial = this.matFF;\r\n        this.renderer.render(this.scene, this.camera, this.ffTexture);\r\n        if (this.isEraseMode && !this.lockEraserBuffersUpdating) {\r\n          glC.readPixels(0, 0, this.windowWidth, this.windowHeight, glC.RGBA, glC.FLOAT, this.bufferFFTextureCPU);\r\n        }\r\n\r\n        this.renderer.setRenderTarget();\r\n        this.renderer.clear();\r\n        this.renderer.state.buffers.depth.setClear(0);\r\n\r\n        this.scene.overrideMaterial = this.matRenderToTexture;\r\n        this.renderer.render(this.scene, this.camera, this.renderToTexture);\r\n        if (this.isEraseMode && !this.lockEraserBuffersUpdating) {\r\n          glC.readPixels(0, 0, this.xSmallTexSize, this.ySmallTexSize, glC.RGBA, glC.FLOAT,\r\n            this.bufferRenderToTextureCPU);\r\n        }\r\n        // get a reference to the internal WebGL rendering context\r\n        this.scene.overrideMaterial = null;\r\n        this.renderer.render(this.scene, this.camera);\r\n        // Render wireframe mesh\r\n        this.renderer.autoClearDepth = false;\r\n        \r\n        //this.matWireFrame\r\n        //this.renderer.clear();\r\n        if (this.Tool23D) {\r\n          this.renderer.render(this.scene23D, this.camera);\r\n        }\r\n        //this.renderer.render(this.sceneSphereWireFrame, this.camera);\r\n        this.renderer.autoClearDepth = true;\r\n        //this.renderer.clear();\r\n        /*\r\n        this.renderer.clear();\r\n        this.renderer.render(this.scene23D, this.camera);\r\n        */\r\n      }\r\n      this.renderCounter++;\r\n    }\r\n  }\r\n\r\n  setStepsize(sliderValue) {\r\n    const A = 100.0;\r\n    const B = 700.0;\r\n    const h = 1.0 / (A + B * sliderValue);\r\n    if (this.matRenderToTexture !== null) {\r\n      this.matRenderToTexture.uniforms.stepSize.value = new THREE.Vector4(h, h, h, h);\r\n      this.matRenderToTexture.uniforms.needsUpdate = true;\r\n    }\r\n    if (this.matVolumeRender !== null) {\r\n      this.matVolumeRender.uniforms.stepSize.value = new THREE.Vector4(h, h, h, h);\r\n      this.matVolumeRender.uniforms.needsUpdate = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Get object's vertex (3d) projection on screen, using current object transformation\r\n  *\r\n  * param vPos(THREE.Vector3) - sphere vertex of object\r\n  * param vProjScreen(THREE.Vector2) - screen projection of vertex above\r\n  * return z coordinate of projection on screen. If > 0, then visible\r\n  */\r\n  getVertexProjectionToScreen(vPos, vProjScreen) {\r\n    const vProj = vPos.clone();\r\n    vProj.applyMatrix4(this.meshSphere.matrixWorld);\r\n    vProj.project(this.camera);\r\n    const W_HALF = this.windowWidth * 0.5;\r\n    const H_HALF = this.windowHeight * 0.5;\r\n    const xProj = W_HALF + (W_HALF * vProj.x);\r\n    // it should be H_HALF - (...\r\n    // but we have y axis up in mouse coord system\r\n    const yProj = H_HALF + (H_HALF * vProj.y);\r\n    vProjScreen.x = xProj;\r\n    vProjScreen.y = yProj;\r\n\r\n    const vPrj = vPos.clone();\r\n    vPrj.applyMatrix4(this.meshSphere.matrixWorld);\r\n    vPrj.applyMatrix3(this.camera.normalMatrix);\r\n    // return vProj.z;\r\n    return vPrj.z;\r\n  }\r\n\r\n  setEraserMode(isOn) {\r\n    this.isEraseMode = isOn;\r\n    this.orbitControl.setEraserMode(isOn);\r\n    if (!this.eraserStarted && isOn) {\r\n      this.eraserStarted = true;\r\n      const params = {\r\n        xDim: this.volume.m_xDim,\r\n        yDim: this.volume.m_yDim,\r\n        zDim: this.volume.m_zDim,\r\n        bufBF: this.bufferBFTextureCPU,\r\n        bufFF: this.bufferFFTextureCPU,\r\n        bufTex: this.bufferRenderToTextureCPU,\r\n      };\r\n      this.volTextureMask = this.volumeUpdater.createUpdatableVolumeMask(params);\r\n      this.matSkullThreeGS.m_uniforms.texVolumeMask.value = this.volTextureMask;\r\n      this.matRenderToTextureThreeGS.m_uniforms.texVolumeMask.value = this.volTextureMask;\r\n    }\r\n    if (isOn) {\r\n      this.setMaskFlag(1);\r\n    } else {\r\n      this.setMaskFlag(0);\r\n    }\r\n  }\r\n\r\n  undoEraser() {\r\n    this.volumeUpdater.eraser.undoLastErasing();\r\n  }\r\n\r\n  setEraserStart(isOn) {\r\n    this.eraserStart = isOn;\r\n  }\r\n\r\n  onMouseDown(xx, yy) {\r\n    if (this.Tool23D) {\r\n      this.graphics23d.onMouseDown(xx / this.windowWidth, yy / this.windowHeight);\r\n      return;\r\n    }\r\n    this.orbitControl.onMouseDown(xx, yy);\r\n    //this.tools23d.onMouseDown(xx /this.windowWidth, yy / this.windowHeight);\r\n    if (this.checkFrameBufferMode !== CHECK_MODE_RESULT_OK) {\r\n      return;\r\n    }\r\n    this.renderState = this.RENDER_STATE.ENABLED;\r\n    this.eraserMouseDown = true;\r\n    if (this.isEraseMode && this.eraserStart) {\r\n      this.lockEraserBuffersUpdating = true;\r\n      this.volumeUpdater.eraser.eraseStart(xx, yy, this.windowWidth, this.matVolumeRender.uniforms.isoThreshold.value, true);\r\n    }\r\n  }\r\n\r\n  onMouseMove(xx, yy) {\r\n    //this.tools23d.onMouseMove(xx / this.windowWidth, yy / this.windowHeight);\r\n    if (this.Tool23D) {\r\n      this.graphics23d.onMouseMove(xx / this.windowWidth, yy / this.windowHeight);\r\n      return;\r\n    }\r\n    if (this.checkFrameBufferMode !== CHECK_MODE_RESULT_OK) {\r\n      return;\r\n    }\r\n    this.renderState = this.RENDER_STATE.ENABLED;\r\n    if (!(this.isEraseMode && this.eraserMouseDown && this.eraserStart)) {\r\n      this.orbitControl.onMouseMove(xx, yy);\r\n    }\r\n    else {\r\n      this.volumeUpdater.eraser.eraseStart(xx, yy, this.windowWidth, this.matVolumeRender.uniforms.isoThreshold.value, false);\r\n    }\r\n  }\r\n\r\n  onMouseUp( xx, yy ) {\r\n    if (this.Tool23D) {\r\n      this.graphics23d.onMouseUp(xx / this.windowWidth, yy / this.windowHeight);\r\n      return;\r\n    }\r\n    //this.tools23d.onMouseUp(xx / this.windowWidth, yy / this.windowHeight);\r\n    this.orbitControl.onMouseUp();\r\n    if (this.checkFrameBufferMode !== CHECK_MODE_RESULT_OK) {\r\n      return;\r\n    }\r\n    this.lockEraserBuffersUpdating = false;\r\n    this.eraserMouseDown = false;\r\n    this.renderState = this.RENDER_STATE.ONCE;\r\n  }\r\n\r\n  onMouseWheel(e) {\r\n    //const e = window.event || event; // old IE support\r\n    const delta = Math.max(-1, Math.min(1, (e.deltaY || -e.detail)));\r\n    // console.log(`mouse wheel event . delta = ${delta}`);\r\n    this.orbitControl.onZoom(-delta);\r\n    if (this.checkFrameBufferMode !== CHECK_MODE_RESULT_OK) {\r\n      return;\r\n    }\r\n    this.renderState = this.RENDER_STATE.ONCE;\r\n    // e.preventDefault();\r\n  }\r\n} // class Graphics3d\r\n","/**\r\n * @fileOverview Graphics3d\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// ********************************************************\r\n// Imports\r\n// ********************************************************\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ModeView from '../store/ModeView';\r\nimport Modes3d from '../store/Modes3d';\r\nimport StoreActionType from '../store/ActionTypes';\r\nimport VolumeRenderer3d from './VolumeRenderer3d'\r\n//import DistanceTool from '../tools23d/distancetool'\r\n\r\n// ********************************************************\r\n// Const\r\n// ********************************************************\r\n\r\n// ********************************************************\r\n// Class\r\n// ********************************************************\r\n\r\n/**\r\n * Class Graphics2d some text later...\r\n */\r\nclass Graphics3d extends React.Component {\r\n  /**\r\n   * @param {object} props - props from up level object\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.onMode = this.onMode.bind(this);\r\n    this.isLoaded = false;\r\n    this.volume = null;\r\n\r\n    this.start = this.start.bind(this);\r\n    this.stop = this.stop.bind(this);\r\n    this.animate = this.animate.bind(this);\r\n    this.renderScene = this.renderScene.bind(this);\r\n    this.setVolRenderToStore = this.setVolRenderToStore.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n\r\n    this.m_mount = null;\r\n    this.m_volumeRenderer3D = null;\r\n    this.m_distanceTool = null;\r\n    this.m_renderer = null;\r\n    // animation\r\n    this.m_frameId = null;\r\n    this.m_prevMode = Modes3d.RAYCAST;\r\n    // settings\r\n    this.m_fileDataType = {\r\n      thresholdIsosurf: 0.46,\r\n      thresholdTissue1: 0.09,\r\n      thresholdTissue2: 0.30,\r\n      opacityTissue: 0.53,\r\n      startRotX: -Math.PI * 0.5,\r\n      startRotY: Math.PI,\r\n      lightDirComp: -0.5773,\r\n      brightness: 0.56,\r\n    };\r\n    // actual render window dimenison\r\n    this.state = {\r\n      wRender: 0,\r\n      hRender: 0,\r\n    };\r\n  }\r\n\r\n  setVolRenderToStore(VolRender) {\r\n    const store = this.props;\r\n    store.dispatch({ type: StoreActionType.SET_VOLUME_Renderer, volumeRenderer: VolRender });\r\n    store.dispatch({ type: StoreActionType.SET_SLIDER_3DR, slider3d_r: Number.parseFloat(0.09) });\r\n    store.dispatch({ type: StoreActionType.SET_SLIDER_3DG, slider3d_g: Number.parseFloat(0.3) });\r\n    store.dispatch({ type: StoreActionType.SET_SLIDER_3DB, slider3d_b: Number.parseFloat(0.46) });\r\n    store.dispatch({ type: StoreActionType.SET_SLIDER_Opacity, sliderOpacity: Number.parseFloat(0.53) });\r\n    store.dispatch({ type: StoreActionType.SET_SLIDER_Isosurface, sliderIsosurface: Number.parseFloat(0.46) });\r\n    store.dispatch({ type: StoreActionType.SET_SLIDER_Brightness, sliderBrightness: Number.parseFloat(0.56) });\r\n    store.dispatch({ type: StoreActionType.SET_SLIDER_Cut, sliderCut: Number.parseFloat(1.0) });\r\n    store.dispatch({ type: StoreActionType.SET_SLIDER_Quality, sliderQuality: Number.parseFloat(0.35) });\r\n  }\r\n\r\n  start() {\r\n    if (this.m_frameId === null) {\r\n      this.m_frameId = requestAnimationFrame(this.animate);\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    cancelAnimationFrame(this.m_frameId);\r\n    this.m_frameId = null;\r\n  }\r\n\r\n  animate() {\r\n    /*this.m_mesh.rotation.x += 0.01;\r\n    this.m_mesh.rotation.y += 0.01;\r\n    this.m_material.color.setRGB(this.m_slider3dr, this.m_slider3dg, this.m_slider3db);\r\n    this.m_material.wireframe = (this.m_mode3d === Modes3d.ISO);*/\r\n \r\n    this.renderScene();\r\n    this.m_frameId = window.requestAnimationFrame(this.animate);\r\n  }\r\n\r\n  renderScene() {\r\n    // this.m_renderer.render(this.m_scene, this.m_camera);\r\n    if (this.m_volumeRenderer3D !== null) {\r\n      this.m_volumeRenderer3D.render();\r\n    }\r\n  }\r\n\r\n  onMode(indexMode) {\r\n    //this.m_updateEnable = true;\r\n    this.props.dispatch({ type: StoreActionType.SET_MODE_3D, mode3d: indexMode });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // detect actual render window dims\r\n    const MIN_DIM = 200;\r\n    const w = (this.m_mount.clientWidth > 0) ? this.m_mount.clientWidth : MIN_DIM;\r\n    const h = (this.m_mount.clientHeight > 0) ? this.m_mount.clientHeight : MIN_DIM;\r\n    if (this.state.wRender === 0) {\r\n      this.setState({ wRender: w });\r\n      this.setState({ hRender: h });\r\n    }\r\n\r\n    /*const w = this.m_mount.clientWidth;\r\n    const h = this.m_mount.clientHeight;\r\n    this.m_scene = new THREE.Scene();\r\n    this.m_camera = new THREE.PerspectiveCamera(75, w / h, 0.1, 1000);\r\n    this.m_camera.position.z = 4;\r\n\r\n    this.m_renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    this.m_renderer.setClearColor('#000000');\r\n    this.m_renderer.setSize(w, h);\r\n    this.m_mount.appendChild(this.m_renderer.domElement);\r\n\r\n    this.m_geometry = new THREE.BoxGeometry(1, 1, 1);\r\n    this.m_material = new THREE.MeshBasicMaterial({ color: '#ff1122' });\r\n    this.m_mesh = new THREE.Mesh(this.m_geometry, this.m_material);\r\n    this.m_scene.add(this.m_mesh);\r\n    const store = this.props;\r\n    this.m_fileDataType.thresholdIsosurf = store.slider3d_b;\r\n    this.m_fileDataType.Tissue1 = store.slider3d_r;\r\n    this.m_fileDataType.Tissue2 = store.slider3d_g;\r\n    */\r\n    if (this.m_volumeRenderer3D === null) {\r\n      this.m_volumeRenderer3D = new VolumeRenderer3d({\r\n        curFileDataType: this.m_fileDataType,\r\n        width: w,\r\n        height: h,\r\n        mount: this.m_mount\r\n      });\r\n    }\r\n    this.setVolRenderToStore(this.m_volumeRenderer3D);\r\n    if (this.volume !== null && this.isLoaded === false && this.m_volumeRenderer3D !== null) { \r\n      const store = this.props;\r\n      const volSet = store.volumeSet;\r\n      const volIndex = store.volumeIndex;\r\n      const vol = volSet.getVolume(volIndex);\r\n      const FOUR = 4;\r\n      const isIso = (vol.m_bytesPerVoxel === FOUR) ? true : false;    \r\n      const modeView = store.modeView; \r\n      //let tst = 0;\r\n      //if (this.volume.m_zDim < 4)\r\n      if (modeView === ModeView.VIEW_3D) {\r\n        this.m_volumeRenderer3D.initWithVolume(this.volume, this.volume.m_boxSize, { x: 0, y: 0, z: 0 }, { x: 1, y: 1, z: 1 }, isIso, true);\r\n      } else {\r\n        this.m_volumeRenderer3D.initWithVolume(this.volume, this.volume.m_boxSize, { x: 0, y: 0, z: 0 }, { x: 1, y: 1, z: 1 }, isIso, false);\r\n      }\r\n      //if (tst) {\r\n      //  return;\r\n      //}\r\n      this.isLoaded = true;\r\n    }\r\n    this.start();\r\n    // setup keyboard\r\n    this.m_mount.focus();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.stop()\r\n    if (this.m_renderer !== null) {\r\n      this.m_mount.removeChild(this.m_renderer.domElement);\r\n    }\r\n    this.m_volumeRenderer3D = null;\r\n  }\r\n\r\n  _onMouseMove(e) {\r\n    // console.log(`${e.x}, ${e.y}\\n`);\r\n    if (this.m_volumeRenderer3D !== null) {\r\n      const box = this.m_mount.getBoundingClientRect();\r\n      const containerX = e.clientX - box.left;\r\n      const containerY = e.clientY - box.top;\r\n      this.m_volumeRenderer3D.onMouseMove(containerX, -(this.state.hRender - containerY), this.props.ereaseStart);\r\n    }\r\n  }\r\n\r\n  _onMouseDown(e) {\r\n    //console.log(`${e.x}, ${e.y}\\n`);\r\n    if (this.m_volumeRenderer3D !== null) {\r\n      const box = this.m_mount.getBoundingClientRect();\r\n      const containerX = e.clientX - box.left;\r\n      const containerY = e.clientY - box.top;\r\n      this.m_volumeRenderer3D.onMouseDown(containerX, -(this.state.hRender - containerY), this.props.ereaseStart);\r\n    }\r\n  }\r\n\r\n  _onMouseUp() { // ommited args: evt\r\n    //console.log(`${e.x}, ${e.y}\\n`);\r\n    if (this.m_volumeRenderer3D !== null) {\r\n      this.m_volumeRenderer3D.onMouseUp();\r\n    }\r\n  }\r\n\r\n  _onWheel(e) {\r\n    //console.log(`${e.x}, ${e.y}\\n`);\r\n    if (this.m_volumeRenderer3D !== null) {\r\n      this.m_volumeRenderer3D.onMouseWheel(e);\r\n    }\r\n  }\r\n\r\n  onClick(evt) {\r\n    evt.stopPropagation();\r\n  }\r\n\r\n  onTouchStart(evt) {\r\n    if ((this.m_mount !== undefined) && (this.m_mount !== null)) {\r\n      // evt.preventDefault();\r\n      const touches = evt.changedTouches;\r\n      const numTouches = touches.length;\r\n      if (numTouches >= 2) {\r\n        console.log(`onTouchStart. numTouches == 2`);\r\n      }\r\n      if (numTouches >= 1) {\r\n        const box = this.m_mount.getBoundingClientRect();\r\n        // const containerX = evt.clientX - box.left;\r\n        // const containerY = evt.clientY - box.top;\r\n        const x = touches[numTouches - 1].pageX - box.left;\r\n        const y = touches[numTouches - 1].pageY - box.top;\r\n        // console.log(`onTouchStart. start at ${x}, ${y}`);\r\n        if (this.m_volumeRenderer3D !== null) {\r\n          this.m_volumeRenderer3D.onMouseDown(x, this.state.hRender - y, this.props.ereaseStart);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onTouchMove(evt) {\r\n    if ((this.m_mount !== undefined) && (this.m_mount !== null)) {\r\n      // evt.preventDefault();\r\n      const touches = evt.changedTouches;\r\n      const numTouches = touches.length;\r\n      if (numTouches >= 2) {\r\n        console.log(`onTouchStart. numTouches == 2`);\r\n      }\r\n      if (numTouches >= 1) {\r\n        const box = this.m_mount.getBoundingClientRect();\r\n        const x = touches[numTouches - 1].pageX - box.left;\r\n        const y = touches[numTouches - 1].pageY - box.top;\r\n        // console.log(`onTouchMove. move at ${x}, ${y}`);\r\n        if (this.m_volumeRenderer3D !== null) {\r\n          this.m_volumeRenderer3D.onMouseMove(x, this.state.hRender - y, this.props.ereaseStart);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onTouchEnd() {\r\n    if (this.m_volumeRenderer3D !== null) {\r\n      this.m_volumeRenderer3D.onMouseUp();\r\n    }\r\n  }\r\n\r\n  onKeyDown(evt) {\r\n    const key = evt.key;\r\n    if (key === 'Control') {\r\n      //console.log(`Pressed key = ${key}`);\r\n      console.log('Ctrl key was pressed');\r\n      const store = this.props;\r\n      store.volumeRenderer.setEraserStart(true);\r\n  \r\n    }\r\n  }\r\n\r\n  onKeyUp(evt) {\r\n    const key = evt.key;\r\n    if (key === 'Control') {\r\n      //console.log(`Pressed key = ${key}`);\r\n      console.log('Ctrl key was released');\r\n      const store = this.props;\r\n      store.volumeRenderer.setEraserStart(false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Main component render func callback\r\n   */\r\n  render() {\r\n    const store = this.props;\r\n    let vol = null;\r\n    const volSet = store.volumeSet;\r\n    if (volSet.getNumVolumes() > 0) {\r\n      const volIndex = store.volumeIndex;\r\n      vol = volSet.getVolume(volIndex);\r\n    }\r\n    // const tex3d = this.props.texture3d;\r\n    if (vol !== null) {\r\n      this.volume = vol;\r\n    }\r\n    const ZCUTSHIFT = 0.5;\r\n    const mode3d = store.mode3d;\r\n    const modeView = store.modeView;\r\n    if (this.m_volumeRenderer3D !== null) {\r\n      // console.log(`Graphics3d . mode = ${mode3d}`);\r\n      this.m_volumeRenderer3D.switchToTool23D(store.isTool3D);\r\n      if (modeView !== ModeView.VIEW_3D) {\r\n        if (mode3d === Modes3d.RAYCAST) {\r\n          //if (this.m_prevMode === Modes3d.EREASER) {\r\n          //this.m_volumeRenderer3D.setEraserMode(false);\r\n          //}\r\n          this.m_prevMode = Modes3d.RAYCAST;\r\n          this.m_volumeRenderer3D.setTransferFuncVec3([store.slider3d_r, store.slider3d_g, store.slider3d_b], 0);\r\n          this.m_volumeRenderer3D.switchToVolumeRender();      \r\n        }\r\n        if (mode3d === Modes3d.ISO) {\r\n          //if (this.m_prevMode === Modes3d.EREASER) {\r\n          //  this.m_volumeRenderer3D.setEraserMode(false);\r\n          //}\r\n          this.m_prevMode = Modes3d.ISO;\r\n          this.m_volumeRenderer3D.switchToIsosurfRender();      \r\n          this.m_volumeRenderer3D.setIsoThresholdValue(store.sliderIsosurface);\r\n        }\r\n        if (mode3d === Modes3d.RAYFAST) {\r\n          //if (this.m_prevMode === Modes3d.EREASER) {\r\n          //  this.m_volumeRenderer3D.setEraserMode(false);\r\n          //}\r\n          this.m_prevMode = Modes3d.RAYFAST;\r\n          this.m_volumeRenderer3D.switchToFLATRender();\r\n        }\r\n        if (mode3d === Modes3d.EREASER) {\r\n          //if (this.m_prevMode !== Modes3d.EREASER) {\r\n          //  this.m_volumeRenderer3D.setEraserMode(true);\r\n          //}\r\n          this.m_prevMode = Modes3d.RAYFAST;\r\n          this.m_volumeRenderer3D.switchToIsosurfRender();     \r\n          this.m_volumeRenderer3D.setIsoThresholdValue(store.sliderIsosurface);\r\n          this.m_volumeRenderer3D.volumeUpdater.eraser.setEraserRadius(store.sliderErRadius);\r\n          this.m_volumeRenderer3D.volumeUpdater.eraser.setEraserDepth(store.sliderErDepth);\r\n        }\r\n      } else {\r\n        this.m_volumeRenderer3D.switchToFullVolumeRender() \r\n      }\r\n      this.m_volumeRenderer3D.setOpacityBarrier(store.sliderOpacity);\r\n      this.m_volumeRenderer3D.updateBrightness(store.sliderBrightness);\r\n      this.m_volumeRenderer3D.updateZCutPlane(store.sliderCut - ZCUTSHIFT);\r\n      this.m_volumeRenderer3D.setStepsize(store.sliderQuality);\r\n      this.m_volumeRenderer3D.updateContrast(store.sliderContrast3D);\r\n    }\r\n    if (this.m_volumeRenderer3D !== null) {\r\n      this.m_volumeRenderer3D.render();\r\n    }\r\n\r\n    const styleObj = {\r\n      width: '100%',\r\n      height: '100%',\r\n    };\r\n\r\n    const jsxCanvasNonSized = <div\r\n      style={styleObj}\r\n      ref={ (mount) => {this.m_mount = mount} }\r\n      onMouseMove={this._onMouseMove.bind(this)} \r\n      onMouseDown={this._onMouseDown.bind(this)} \r\n      onMouseUp={this._onMouseUp.bind(this)} \r\n      onTouchStart={this.onTouchStart.bind(this)}\r\n      onTouchEnd={this.onTouchEnd.bind(this)}\r\n      onTouchMove={this.onTouchMove.bind(this)}\r\n      onClick={this.onClick.bind(this)}\r\n      onWheel={this._onWheel.bind(this)} />\r\n    const jsxCanvasSized = <div\r\n      width={this.state.wRender} height={this.state.hRender}\r\n      ref={ (mount) => {this.m_mount = mount} }\r\n      onMouseMove={this._onMouseMove.bind(this)} \r\n      onMouseDown={this._onMouseDown.bind(this)} \r\n      onMouseUp={this._onMouseUp.bind(this)} \r\n      onTouchStart={this.onTouchStart.bind(this)}\r\n      onTouchEnd={this.onTouchEnd.bind(this)}\r\n      onTouchMove={this.onTouchMove.bind(this)}\r\n      onClick={this.onClick.bind(this)}\r\n      tabIndex=\"1\"\r\n      onKeyDown={(evt) => this.onKeyDown(evt)}\r\n      onKeyUp={(evt) => this.onKeyUp(evt)}\r\n      onWheel={this._onWheel.bind(this)} />\r\n    const jsx = (this.state.wRender > 0) ? jsxCanvasSized : jsxCanvasNonSized;\r\n    return jsx;\r\n  }\r\n}\r\n\r\nexport default connect(store => store)(Graphics3d);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Graphics3d from \"../engine/Graphics3d\";\r\n\r\nclass UiMain3dLight extends React.Component {\r\n  render() {\r\n    const MIN_HEIGHT = 882;\r\n    const strMinHeight = {\r\n      minHeight: MIN_HEIGHT.toString() + \"px\",\r\n    };\r\n\r\n    const jsxMain3dLight = (\r\n      <Row>\r\n        <Col xs={12} sm md lg={12} style={strMinHeight}>\r\n          <Graphics3d />\r\n        </Col>\r\n      </Row>\r\n    );\r\n\r\n    return jsxMain3dLight;\r\n  }\r\n}\r\n\r\nexport default connect((store) => store)(UiMain3dLight);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// import UiMainMpr from './UiMainMpr';\r\nimport UiMain2d from './UiMain2d';\r\nimport UiMain3dLight from './UiMain3dLight';\r\n\r\nimport ModeView from '../store/ModeView';\r\n\r\nclass UiMain extends React.Component {\r\n  render() {\r\n    const store = this.props;\r\n    const modeViewIndex = store.modeView;\r\n    // const jsxMainMpr = <UiMainMpr></UiMainMpr>;\r\n    const jsxMain2d = <UiMain2d></UiMain2d>;\r\n    const jsxMain3dLight = <UiMain3dLight></UiMain3dLight>;\r\n\r\n    const jsxArray = new Array(ModeView.VIEW_COUNT);\r\n    // jsxArray[ModeView.VIEW_MPR] = jsxMainMpr;\r\n    jsxArray[ModeView.VIEW_2D] = jsxMain2d;\r\n    jsxArray[ModeView.VIEW_3D_LIGHT] = jsxMain3dLight ;\r\n    jsxArray[ModeView.VIEW_3D] = jsxMain3dLight;\r\n    const jsxRet = jsxArray[modeViewIndex];\r\n    return jsxRet;\r\n  };\r\n}\r\n\r\nexport default connect(store => store)(UiMain);\r\n","/**\r\n * @fileOverview Volume\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// ********************************************************\r\n// Imports\r\n// ********************************************************\r\n\r\nimport React from 'react';\r\n\r\n//import LoaderKtx from './loaders/LoaderKtx';\r\n//import LoaderNifti from './loaders/LoaderNifti';\r\n//import LoaderDicom from './loaders/LoaderDicom';\r\n//import LoaderHdr from './loaders/LoaderHdr';\r\n\r\n// ********************************************************\r\n// Const\r\n// ********************************************************\r\n\r\nexport const VOLUME_ICON_SIDE = 64;\r\n\r\n// ********************************************************\r\n// Class\r\n// ********************************************************\r\n\r\n/**\r\n * Class Volume  \r\n * \r\n * Result volume, loaded from Dicom, Ktx, Nifti, ... files\r\n */\r\nclass Volume extends React.Component {\r\n  /**\r\n   * @param {object} props - props from up level object\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.m_xDim = 0;\r\n    this.m_yDim = 0;\r\n    this.m_zDim = 0;\r\n    this.m_bytesPerVoxel = 0;\r\n    this.m_dataArray = null;\r\n    this.m_dataSize = 0;\r\n    this.m_boxSize = {\r\n      x: 0.0, y: 0.0, z: 0.0\r\n    };\r\n    // icon to show\r\n    this.m_xIcon = 0;\r\n    this.m_yIcon = 0;\r\n    this.m_dataIcon = null;\r\n  }\r\n\r\n  createEmptyBytesVolume(xDim, yDim, zDim) {\r\n    this.m_xDim = xDim;\r\n    this.m_yDim = yDim;\r\n    this.m_zDim = zDim;\r\n    const xyzDim = xDim * yDim * zDim;\r\n    this.m_bytesPerVoxel = 1;\r\n    this.m_dataArray = new Uint8Array(xyzDim);\r\n    this.m_dataSize = xyzDim;\r\n    this.m_boxSize = {\r\n      x: xDim, y: yDim, z: zDim\r\n    };\r\n    for (let i = 0; i < xyzDim; i++) {\r\n      this.m_dataArray[i] = 0;\r\n    }\r\n  }\r\n\r\n  // Create icon for volume\r\n  createIcon() {\r\n    console.assert(this.m_xDim > 0);\r\n    console.assert(this.m_yDim > 0);\r\n    console.assert(this.m_zDim > 0);\r\n    console.assert(this.m_dataArray !== null);\r\n    const sizeSrcMax = (this.m_xDim > this.m_yDim) ? this.m_xDim : this.m_yDim;\r\n    const scale = sizeSrcMax / VOLUME_ICON_SIDE;\r\n\r\n    // central slice\r\n    const zCenter = Math.floor(this.m_zDim / 2);\r\n    const zOff = zCenter * this.m_xDim * this.m_yDim;\r\n\r\n    this.m_xIcon = VOLUME_ICON_SIDE;\r\n    this.m_yIcon = this.m_xIcon;\r\n    const numPixelsIcon = this.m_xIcon * this.m_yIcon;\r\n    this.m_dataIcon = new Uint8Array(numPixelsIcon);\r\n    for (let i = 0; i < numPixelsIcon; i++){\r\n      this.m_dataIcon[i] = 0;\r\n    }\r\n    // actual size in icon (dest image)\r\n    const wDst = Math.floor(VOLUME_ICON_SIDE * this.m_xDim / sizeSrcMax);\r\n    const hDst = Math.floor(VOLUME_ICON_SIDE * this.m_yDim / sizeSrcMax);\r\n    // top left corner in dst image\r\n    const xDstL = Math.floor(this.m_xIcon / 2 - wDst / 2);\r\n    const yDstT = Math.floor(this.m_yIcon / 2 - hDst / 2);\r\n    for (let yDst = 0; yDst < hDst; yDst++) {\r\n      const ySrc = Math.floor(yDst * scale);\r\n      for (let xDst = 0; xDst < wDst; xDst++) {\r\n        const xSrc = Math.floor(xDst * scale);\r\n        const val = this.m_dataArray[xSrc + ySrc * this.m_xDim + zOff];\r\n        // write result\r\n        const xWrite = xDst + xDstL;\r\n        const yWrite = yDst + yDstT;\r\n        this.m_dataIcon[xWrite + yWrite * this.m_xIcon] = val;\r\n      } // for xDst\r\n    } // for yDst\r\n  } // end createIcon\r\n\r\n  //\r\n  // Make each volume texture size equal to 4 * N\r\n  //\r\n  makeDimensions4x() {\r\n    // do nothing if z slices less then 4 (was less 1)\r\n    if (this.m_zDim < 4) {\r\n      return;\r\n    }\r\n    const xDimNew = (this.m_xDim + 3) & (~3);\r\n    const yDimNew = (this.m_yDim + 3) & (~3);\r\n    const zDimNew = (this.m_zDim + 3) & (~3);\r\n    if ((this.m_xDim === xDimNew) && (this.m_yDim === yDimNew) && (this.m_zDim === zDimNew)) {\r\n      return; // do nothing\r\n    } // if new size the same as current\r\n    // perfom convert adding black pixels\r\n    console.log(`Volume. makeDimensions4x. Convert into ${xDimNew}*${yDimNew}*${zDimNew}`);\r\n    const xyzDimNew  = xDimNew * yDimNew * zDimNew;\r\n    const bytesPerVoxel = this.m_bytesPerVoxel;\r\n    const bufSizeBytes = xyzDimNew * bytesPerVoxel;\r\n    const datArrayNew = new Uint8Array(xyzDimNew * bytesPerVoxel);\r\n    let i;\r\n    for (i = 0; i < bufSizeBytes; i++) {\r\n      datArrayNew[i] = 0;\r\n    }\r\n\r\n    const ONE = 1;\r\n    const FOUR = 4;\r\n    const OFF_0 = 0; const OFF_1 = 1;\r\n    const OFF_2 = 2; const OFF_3 = 3;\r\n\r\n    console.log(`Volume info: xyzDim = ${this.m_xDim}*${this.m_yDim}*${this.m_zDim}`);\r\n    console.log(`Volume info: bpp = ${this.m_bytesPerVoxel}`);\r\n    console.log(`Volume info: dataSize = ${this.m_dataSize}`);\r\n\r\n    const xyDim = this.m_xDim * this.m_yDim;\r\n    if (this.m_bytesPerVoxel === ONE) {\r\n      for (let z = 0; z < this.m_zDim; z++) {\r\n        const zOff = z * xyDim;\r\n        const zOffDst = z * xDimNew * yDimNew;\r\n        for (let y = 0; y < this.m_yDim; y++) {\r\n          const yOff = y * this.m_xDim;\r\n          const yOffDst = y * xDimNew;\r\n          for (let x = 0; x < this.m_xDim; x++) {\r\n            const off = x + yOff + zOff;\r\n            const val = this.m_dataArray[off];\r\n            const offDst = x + yOffDst + zOffDst;\r\n            datArrayNew[offDst] = val;\r\n          } // for (x)\r\n        } // for (y)\r\n      } // for (z)\r\n    } else if (this.m_bytesPerVoxel === FOUR) {\r\n      for (let z = 0; z < this.m_zDim; z++) {\r\n        const zOff = z * xyDim;\r\n        const zOffDst = z * xDimNew * yDimNew;\r\n        for (let y = 0; y < this.m_yDim; y++) {\r\n          const yOff = y * this.m_xDim;\r\n          const yOffDst = y * xDimNew;\r\n          for (let x = 0; x < this.m_xDim; x++) {\r\n            const off = (x + yOff + zOff) * FOUR;\r\n            const val0 = this.m_dataArray[off + OFF_0];\r\n            const val1 = this.m_dataArray[off + OFF_1];\r\n            const val2 = this.m_dataArray[off + OFF_2];\r\n            const val3 = this.m_dataArray[off + OFF_3];\r\n            const offDst = (x + yOffDst + zOffDst) * FOUR;\r\n            datArrayNew[offDst + OFF_0] = val0;\r\n            datArrayNew[offDst + OFF_1] = val1;\r\n            datArrayNew[offDst + OFF_2] = val2;\r\n            datArrayNew[offDst + OFF_3] = val3;\r\n          } // for (x)\r\n        } // for (y)\r\n      } // for (z)\r\n    }\r\n\r\n    this.m_xDim = xDimNew;\r\n    this.m_yDim = yDimNew;\r\n    this.m_zDim = zDimNew;\r\n    this.m_dataArray = datArrayNew;\r\n    this.m_dataSize = xyzDimNew;\r\n  } // end\r\n\r\n  // do nothing. But we need to implement render() to run Volume tests\r\n  render() {\r\n    return <p>></p>;\r\n  }\r\n\r\n} // end class Volume\r\n\r\nexport default Volume;\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Loading result codes\r\n* @module lib/scripts/loaders/loadresult\r\n*/\r\n\r\n// ******************************************************************\r\n// imports\r\n// ******************************************************************\r\n\r\n/** Class LoadResult to report loading status of binary files  (Ktx, Dicom, Nifti)*/\r\nexport default class LoadResult {\r\n  static getResultString(errorCode) {\r\n    switch (errorCode) {\r\n    case LoadResult.SUCCESS:\r\n      return 'Success';\r\n    case LoadResult.UNKNOWN:\r\n      return 'Unknown';\r\n    case LoadResult.BAD_DICOM:\r\n      return 'Bad Dicom';\r\n    case LoadResult.BAD_HEADER:\r\n      return 'Bad header';\r\n    case LoadResult.UNSUPPORTED_ENDIANNESS:\r\n      return 'Unsupported endianness';\r\n    case LoadResult.UNSUPPORTED_COLOR_FORMAT:\r\n      return 'Unsupported color format';\r\n    case LoadResult.WRONG_HEADER_DATA_SIZE:\r\n      return 'Wrong header data size';\r\n    case LoadResult.WRONG_HEADER_DIMENSIONS:\r\n      return 'Wrong header dimensions';\r\n    case LoadResult.WRONG_HEADER_DATA_TYPE:\r\n      return 'Wrong header data type';\r\n    case LoadResult.WRONG_HEADER_BITS_PER_PIXEL:\r\n      return 'Wrong header bits per pixel';\r\n    case LoadResult.WRONG_HEADER_MAGIC:\r\n      return 'Wrong header magic';\r\n    case LoadResult.ERROR_PROCESS_HISTOGRAM:\r\n      return 'Wrong histogram';\r\n    case LoadResult.WRONG_IMAGE_DIM_X:\r\n      return 'Wrong image dim x';\r\n    case LoadResult.WRONG_IMAGE_DIM_Y:\r\n      return 'Wrong image dim y';\r\n    case LoadResult.WRONG_IMAGE_DIM_Z:\r\n      return 'Wrong image dim z';\r\n    case LoadResult.ERROR_PIXELS_TAG_NOT_FOUND:\r\n      return 'Pixels tag is not found';\r\n    case LoadResult.ERROR_NO_MEMORY:\r\n      return 'No memory during loading';\r\n    case LoadResult.ERROR_CANT_OPEN_URL:\r\n      return 'Cant open file via url';\r\n    case LoadResult.ERROR_WRONG_NUM_SLICES:\r\n      return 'Wrong number of slices';\r\n    case LoadResult.ERROR_HISTOGRAM_DETECT_RIDGES:\r\n      return 'Error detect histogram ridges';\r\n    case LoadResult.ERROR_SCALING:\r\n      return 'Error scaling 16 bit data into 8 bit';\r\n    case LoadResult.ERROR_INVALID_SLICE_INDEX:\r\n      return 'Invalid slice index. Possible reason: incomplete dicom folder';\r\n    case LoadResult.ERROR_TOO_SMALL_DATA_SIZE:\r\n      return 'Too small input data size';\r\n    case LoadResult.ERROR_TOO_LARGE_DATA_SIZE:\r\n      return 'Too large input data size';\r\n    case LoadResult.ERROR_COMPRESSED_IMAGE_NOT_SUPPORTED:\r\n      return 'Compressed image formats read is not supported';\r\n    default:\r\n      return 'Unknown error code';\r\n    } // switch\r\n  }  // getResultString\r\n} // class LoadResult\r\n\r\nLoadResult.SUCCESS = 0;\r\nLoadResult.UNKNOWN = 1;\r\nLoadResult.BAD_DICOM = 2;\r\nLoadResult.BAD_HEADER = 3;\r\nLoadResult.UNSUPPORTED_ENDIANNESS = 4;\r\nLoadResult.UNSUPPORTED_COLOR_FORMAT = 5;\r\nLoadResult.WRONG_HEADER_DATA_SIZE = 6;\r\nLoadResult.WRONG_HEADER_DIMENSIONS = 7;\r\nLoadResult.WRONG_HEADER_DATA_TYPE = 8;\r\nLoadResult.WRONG_HEADER_BITS_PER_PIXEL = 9;\r\nLoadResult.WRONG_HEADER_MAGIC = 10;\r\nLoadResult.ERROR_PROCESS_HISTOGRAM = 11;\r\nLoadResult.WRONG_IMAGE_DIM_X = 12;\r\nLoadResult.WRONG_IMAGE_DIM_Y = 13;\r\nLoadResult.ERROR_PIXELS_TAG_NOT_FOUND = 14;\r\nLoadResult.ERROR_NO_MEMORY = 15;\r\nLoadResult.ERROR_CANT_OPEN_URL = 16;\r\nLoadResult.ERROR_WRONG_NUM_SLICES = 17;\r\nLoadResult.ERROR_HISTOGRAM_DETECT_RIDGES = 18;\r\nLoadResult.ERROR_SCALING = 19;\r\nLoadResult.ERROR_INVALID_SLICE_INDEX = 20;\r\nLoadResult.ERROR_TOO_SMALL_DATA_SIZE = 21;\r\nLoadResult.ERROR_TOO_LARGE_DATA_SIZE = 22;\r\nLoadResult.ERROR_COMPRESSED_IMAGE_NOT_SUPPORTED = 23;\r\n\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Common binary file loader\r\n* @module src/demo/engine/loaders/FileLoader\r\n*/\r\n\r\n// ******************************************************************\r\n// File loader\r\n// ******************************************************************\r\n\r\n/** Instance habdle for loader */\r\nlet GInstanceFileLoader = null;\r\n\r\n/** Class FileLoader for load binary files */\r\nexport default class FileLoader {\r\n  /** Create empty loader\r\n  * @param {string} strUrl - URL for loaded file\r\n  */\r\n  constructor(strUrl) {\r\n    if (!GInstanceFileLoader) {\r\n      GInstanceFileLoader = this;\r\n    }\r\n    /** @property {string} m_url - Urlf ror file being read */\r\n    this.m_url = strUrl;\r\n    /** @property {object} m_request - XMLHttpRequest object, used for acees to resource */\r\n    this.m_request = null;\r\n    this.readFile = this.readFile.bind(this);\r\n  }\r\n\r\n  /** Read file\r\n  * @param {object} doneCallback - invoked callback\r\n  */\r\n  readFile(doneCallback, rejectCallback) {\r\n    const METHOD = 'GET';\r\n    this.m_request = new XMLHttpRequest();\r\n    if (!this.m_request) {\r\n      console.log('Cant create object request');\r\n    }\r\n    if ('withCredentials' in this.m_request) {\r\n      // this.m_request.withCredentials = true;\r\n      const NEED_ASYNC = true;\r\n      this.m_request.open(METHOD, this.m_url, NEED_ASYNC);\r\n    // } else if (typeof XDomainRequest !== 'undefined') {\r\n    //   console.log('HttpRequest: XDomainRequest will be used');\r\n    //   this.m_request = new XDomainRequest();\r\n    //   this.m_request.open(METHOD, this.m_url);\r\n    } else {\r\n      this.m_request = null;\r\n      console.log('This browser cant support CORS requests');\r\n      return;\r\n    }\r\n\r\n    this.m_request.responseType = 'arraybuffer';  // \"blob\"\r\n    this.m_request.addEventListener('load', (event) => {\r\n      const arrBuf = event.target.response;\r\n      if (arrBuf === null) {\r\n        console.log('Bad response type. Expect object type in response.');\r\n      } else if (doneCallback) {\r\n        // console.log(`FileFromServer response received. url = ${this.m_url}`);\r\n\r\n        // check wrong buffer content\r\n        const enc = new TextDecoder(\"utf-8\");\r\n        let sz = arrBuf.byteLength;\r\n        if (sz > 4000) {\r\n          sz = 4000;\r\n        }\r\n        const bufHead = arrBuf.slice(0, sz);\r\n        const strBuf = enc.decode(bufHead);\r\n        if (strBuf.substr(0, 9) === \"<!DOCTYPE\") {\r\n          console.log(\"Error load data from URL. Read result is \" + strBuf);\r\n        }\r\n        doneCallback(arrBuf);\r\n      }\r\n    }, false);\r\n\r\n    this.m_request.addEventListener('error', () => {\r\n      // console.log(`Error event happend for XMLHttpRequest: loaded = ${event.loaded}, total = ${event.total}`);\r\n      const errMsg = `Error accessing file ${this.m_url}`;\r\n      rejectCallback(errMsg);\r\n    }, false);\r\n\r\n    this.m_request.send();\r\n    const RES_FAIL_404 = 404;\r\n    if (this.m_request.status === RES_FAIL_404) {\r\n      const errMsg = `Cant access url =  ${this.m_url}`;\r\n      rejectCallback(errMsg);\r\n    }\r\n  }\r\n} // end class FileLoader\r\n","/**\r\n * @fileOverview LoaderKtx\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// ********************************************************\r\n// Imports\r\n// ********************************************************\r\n\r\nimport LoadResult from '../LoadResult';\r\nimport FileLoader from './FileLoader';\r\n\r\n// ********************************************************\r\n// Const\r\n// ********************************************************\r\n\r\nexport const KtxHeader = {\r\n  KTX_GL_RED: 0x1903,\r\n  KTX_GL_RGB: 0x1907,\r\n  KTX_GL_RGBA: 0x1908,\r\n  KTX_GL_R8_EXT: 0x8229,\r\n  KTX_GL_RGB8_OES: 0x8051,\r\n  KTX_GL_RGBA8_OES: 0x8058,\r\n};\r\n\r\n// ********************************************************\r\n// Class\r\n// ********************************************************\r\n\r\n/**\r\n * Class LoaderKtx some text later...\r\n */\r\nexport default class LoaderKtx {\r\n  /**\r\n   * @param {object} props - props from up level object\r\n   */\r\n  constructor() {\r\n    this.m_header = {\r\n      m_id: '',\r\n      m_endianness: 0,\r\n      m_glType: 0,\r\n      m_glTypeSize: 0,\r\n      m_glFormat: 0,\r\n      m_glInternalFormat: 0,\r\n      m_glBaseInternalFormat: 0,\r\n      m_pixelWidth: 0,\r\n      m_pixelHeight: 0,\r\n      m_pixelDepth: 0,\r\n      m_numberOfArrayElements: 0,\r\n      m_numberOfFaces: 0,\r\n      m_numberOfMipmapLevels: 0,\r\n      m_bytesOfKeyValueData: 0\r\n    };\r\n    this.m_boxSize = {\r\n      x: 0.0,\r\n      y: 0.0,\r\n      z: 0.0\r\n    };\r\n  } // constructor\r\n\r\n  //\r\n  static readInt(bufBytes, bufOff) {\r\n    let iVal = 0;\r\n    const BYTES_IN_INT = 4;\r\n    const BITS_IN_BYTE = 8;\r\n    const LAST_INDEX = 3;\r\n    for (let i = 0; i < BYTES_IN_INT; i++) {\r\n      const iShifted = iVal << BITS_IN_BYTE;\r\n      iVal = iShifted + bufBytes[bufOff + LAST_INDEX - i];\r\n    }\r\n    return iVal;\r\n  }\r\n\r\n  //\r\n  static readFloat(buf, off) {\r\n    const BYTES_IN_FLOAT = 4;\r\n    const arBuf = new ArrayBuffer(BYTES_IN_FLOAT);\r\n    const dataArray = new DataView(arBuf);\r\n    const OFF_0 = 0; const OFF_1 = 1;\r\n    const OFF_2 = 2; const OFF_3 = 3;\r\n    dataArray.setUint8(OFF_0, buf[off + OFF_0]);\r\n    dataArray.setUint8(OFF_1, buf[off + OFF_1]);\r\n    dataArray.setUint8(OFF_2, buf[off + OFF_2]);\r\n    dataArray.setUint8(OFF_3, buf[off + OFF_3]);\r\n    const IS_LITTLE_ENDIAN = true;\r\n    const res = dataArray.getFloat32(0, IS_LITTLE_ENDIAN);\r\n    return res;\r\n  } // readFloat\r\n\r\n  //\r\n  //\r\n  //\r\n  readFromBuffer(volDst, arrBuf, callbackProgress, callbackComplete) {\r\n    // prepare KTX header\r\n    const bufBytes = new Uint8Array(arrBuf);\r\n    let bufOff = 0;\r\n    if (callbackProgress !== undefined) {\r\n      callbackProgress(0.0);\r\n    }\r\n    if (bufBytes.length === 0) {\r\n      if (callbackComplete !== undefined) {\r\n        callbackComplete(LoadResult.BAD_HEADER);\r\n      }\r\n      return LoadResult.BAD_HEADER;\r\n    }\r\n\r\n    // console.log(`readFromKtx. len = ${bufBytes.length}`);\r\n    // console.log(`readFromKtx. data = ${bufBytes}`);\r\n\r\n    // read header\r\n    const arrayHeaderSign = [0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A];\r\n    const lenHeaderSign = arrayHeaderSign.length;\r\n    let isHeaderSignCorrect = true;\r\n    let i;\r\n    // for (i = 0; i < lenHeaderSign; i++) {\r\n    //   console.log(`${bufBytes[i]}`);\r\n    // }\r\n    for (i = 0; i < lenHeaderSign; i++) {\r\n      if (bufBytes[bufOff] !== arrayHeaderSign[i]) {\r\n        isHeaderSignCorrect = false;\r\n        break;\r\n      }\r\n      this.m_header.m_id += String.fromCharCode(bufBytes[bufOff]);\r\n      bufOff += 1;\r\n    }\r\n    if (!isHeaderSignCorrect) {\r\n      console.log('KTX HEADER IS WRONG');\r\n      if (callbackComplete !== undefined) {\r\n        callbackComplete(LoadResult.BAD_HEADER);\r\n      }\r\n      return LoadResult.BAD_HEADER;\r\n    }\r\n    const SIZE_DWORD = 4;\r\n    const ENDIANNESS_16 = 16;\r\n    const ENDIAN_CONST = 0x04030201;\r\n    // read endianess\r\n    this.m_header.m_endianness = LoaderKtx.readInt(bufBytes, bufOff); bufOff += SIZE_DWORD;\r\n    if (this.m_header.m_endianness !== ENDIAN_CONST) {\r\n      const strFoundEndns = this.m_header.m_endianness.toString(ENDIANNESS_16);\r\n      // eslint-disable-next-line\r\n      console.log(`ENDIANNESS IS WRONG. Found = ${strFoundEndns} , but should be = ${ENDIAN_CONST.toString(16)}`);\r\n      if (callbackComplete !== undefined) {\r\n        callbackComplete(LoadResult.UNSUPPORTED_ENDIANNESS);\r\n      }\r\n      return LoadResult.UNSUPPORTED_ENDIANNESS;\r\n    }\r\n\r\n    // read\r\n    this.m_header.m_glType = LoaderKtx.readInt(bufBytes, bufOff); bufOff += SIZE_DWORD;\r\n    this.m_header.m_glTypeSize = LoaderKtx.readInt(bufBytes, bufOff); bufOff += SIZE_DWORD;\r\n    this.m_header.m_glFormat = LoaderKtx.readInt(bufBytes, bufOff); bufOff += SIZE_DWORD;\r\n\r\n    if (\r\n      (this.m_header.m_glFormat !== KtxHeader.KTX_GL_RED) &&\r\n      (this.m_header.m_glFormat !== KtxHeader.KTX_GL_RGB) &&\r\n      (this.m_header.m_glFormat !== KtxHeader.KTX_GL_RGBA)) {\r\n      console.log('KTX header.m_glFormat is WRONG');\r\n      if (callbackComplete !== undefined) {\r\n        callbackComplete(LoadResult.UNSUPPORTED_COLOR_FORMAT);\r\n      }\r\n      return LoadResult.UNSUPPORTED_COLOR_FORMAT;\r\n    }\r\n    this.m_header.m_glInternalFormat = LoaderKtx.readInt(bufBytes, bufOff); bufOff += SIZE_DWORD;\r\n    this.m_header.m_glBaseInternalFormat = LoaderKtx.readInt(bufBytes, bufOff); bufOff += SIZE_DWORD;\r\n    this.m_header.m_pixelWidth = LoaderKtx.readInt(bufBytes, bufOff); bufOff += SIZE_DWORD;\r\n    this.m_header.m_pixelHeight = LoaderKtx.readInt(bufBytes, bufOff); bufOff += SIZE_DWORD;\r\n    this.m_header.m_pixelDepth = LoaderKtx.readInt(bufBytes, bufOff); bufOff += SIZE_DWORD;\r\n\r\n    // save to result volume\r\n    volDst.m_xDim = this.m_header.m_pixelWidth;\r\n    volDst.m_yDim = this.m_header.m_pixelHeight;\r\n    volDst.m_zDim = this.m_header.m_pixelDepth;\r\n\r\n    // check dim\r\n    const head = this.m_header;\r\n    // console.log(`check dim: ${head.m_pixelWidth} * ${head.m_pixelHeight} * ${head.m_pixelDepth}`);\r\n    const MIN_DIM = 4;\r\n    const MAX_DIM = (1024 * 8);\r\n    if ((head.m_pixelWidth < MIN_DIM) || (head.m_pixelHeight < MIN_DIM) \r\n      || (head.m_pixelDepth < MIN_DIM)) {\r\n      console.log(`KTX dims too small: ${head.m_pixelWidth} * ${head.m_pixelHeight} * ${head.m_pixelDepth}`);\r\n      if (callbackComplete !== undefined) {\r\n        callbackComplete(LoadResult.WRONG_IMAGE_DIM_X);\r\n      }\r\n      return LoadResult.WRONG_IMAGE_DIM_X;\r\n    }\r\n    if ((head.m_pixelWidth > MAX_DIM) || (head.m_pixelHeight > MAX_DIM) \r\n      || (head.m_pixelDepth > MAX_DIM)) {\r\n      console.log(`KTX dims too large: ${head.m_pixelWidth} * ${head.m_pixelHeight} * ${head.m_pixelDepth}`);\r\n      if (callbackComplete !== undefined) {\r\n        callbackComplete(LoadResult.WRONG_IMAGE_DIM_X);\r\n      }\r\n      return LoadResult.WRONG_IMAGE_DIM_X;\r\n    }\r\n\r\n    this.m_header.m_numberOfArrayElements = LoaderKtx.readInt(bufBytes, bufOff); bufOff += SIZE_DWORD;\r\n    this.m_header.m_numberOfFaces = LoaderKtx.readInt(bufBytes, bufOff); bufOff += SIZE_DWORD;\r\n    this.m_header.m_numberOfMipmapLevels = LoaderKtx.readInt(bufBytes, bufOff); bufOff += SIZE_DWORD;\r\n    this.m_header.m_bytesOfKeyValueData = LoaderKtx.readInt(bufBytes, bufOff); bufOff += SIZE_DWORD;\r\n\r\n    let bytesPerVoxel = 0;\r\n    const SIZE_BYTE = 1;\r\n    const SIZE_COLOR3 = 3;\r\n    const SIZE_COLOR4 = 4;\r\n    if (this.m_header.m_glFormat === KtxHeader.KTX_GL_RED) {\r\n      bytesPerVoxel = SIZE_BYTE;\r\n    } else if (this.m_header.m_glFormat === KtxHeader.KTX_GL_RGB) {\r\n      bytesPerVoxel = SIZE_COLOR3;\r\n    } else if (this.m_header.m_glFormat === KtxHeader.KTX_GL_RGBA) {\r\n      bytesPerVoxel = SIZE_COLOR4;\r\n    }\r\n\r\n    // read user data\r\n    if (this.m_header.m_bytesOfKeyValueData > 0) {\r\n      let udataOff = bufOff;\r\n      bufOff += this.m_header.m_bytesOfKeyValueData;\r\n\r\n      let xMin, yMin, zMin, xMax, yMax, zMax;\r\n      while (udataOff < bufOff) {\r\n        // read pair len\r\n        // const pairLen = KtxLoader.readInt(bufBytes, udataOff);\r\n        udataOff += SIZE_DWORD;\r\n\r\n        // read string until 0\r\n        let str = '';\r\n        let b;\r\n        for (b = bufBytes[udataOff]; b !== 0; udataOff++) {\r\n          b = bufBytes[udataOff];\r\n          if (b !== 0) {\r\n            str = str.concat(String.fromCharCode(b));\r\n          }\r\n        } // for\r\n        console.log(`UDataString = ${str}`);\r\n        // read vector\r\n        if (str === 'fBoxMin') {\r\n          xMin = LoaderKtx.readFloat(bufBytes, udataOff); udataOff += SIZE_DWORD;\r\n          yMin = LoaderKtx.readFloat(bufBytes, udataOff); udataOff += SIZE_DWORD;\r\n          zMin = LoaderKtx.readFloat(bufBytes, udataOff); udataOff += SIZE_DWORD;\r\n          console.log(`vBoxMix = ${xMin} * ${yMin} * ${zMin}`);\r\n        } else if (str === 'fBoxMax') {\r\n          xMax = LoaderKtx.readFloat(bufBytes, udataOff); udataOff += SIZE_DWORD;\r\n          yMax = LoaderKtx.readFloat(bufBytes, udataOff); udataOff += SIZE_DWORD;\r\n          zMax = LoaderKtx.readFloat(bufBytes, udataOff); udataOff += SIZE_DWORD;\r\n          this.m_boxSize.x = xMax - xMin;\r\n          this.m_boxSize.y = yMax - yMin;\r\n          this.m_boxSize.z = zMax - zMin;\r\n          console.log(`vBox = ${this.m_boxSize.x} * ${this.m_boxSize.y} * ${this.m_boxSize.z}`);\r\n          break;\r\n        } // if fbox max\r\n      } // while udata not ended\r\n    } // if have key data\r\n    // read image data size\r\n    this.m_dataSize = LoaderKtx.readInt(bufBytes, bufOff); bufOff += SIZE_DWORD;\r\n    const dataSizeCalculated =\r\n      this.m_header.m_pixelWidth *\r\n      this.m_header.m_pixelHeight *\r\n      this.m_header.m_pixelDepth * bytesPerVoxel;\r\n    if (this.m_dataSize !== dataSizeCalculated) {\r\n      console.log('!!! not implemented yet');\r\n      if (callbackComplete !== undefined) {\r\n        callbackComplete(LoadResult.WRONG_HEADER_DATA_SIZE);\r\n      }\r\n      return LoadResult.WRONG_HEADER_DATA_SIZE;\r\n    }\r\n    this.m_dataArray = new Uint8Array(this.m_dataSize);\r\n    // get power of 2 for data size\r\n    let pwr2;\r\n    let pwrFinish = false;\r\n    const MAX_POWER = 29;\r\n    for (pwr2 = MAX_POWER; (pwr2 >= 0) && (!pwrFinish); pwr2--) {\r\n      const val = 1 << pwr2;\r\n      if (val < this.m_dataSize) {\r\n        pwrFinish = true;\r\n      }\r\n    }\r\n    pwr2++;\r\n    // build mask for progress update\r\n    const SOME_POWER_MIN = 3;\r\n    pwr2 -= SOME_POWER_MIN;\r\n    if (pwr2 <= 0) {\r\n      pwr2 = 1;\r\n    }\r\n    const progressMask = (1 << pwr2) - 1;\r\n\r\n    for (let i = 0; i < this.m_dataSize; i++) {\r\n      this.m_dataArray[i] = bufBytes[bufOff];\r\n      bufOff += 1;\r\n      // progress update\r\n      if ((callbackProgress !== undefined) && ((i & progressMask) === 0) && (i > 0)) {\r\n        const ratio = i / this.m_dataSize;\r\n        callbackProgress(ratio);\r\n      }\r\n    }\r\n    // update box, if not read\r\n    if (this.m_boxSize.x === 0.0) {\r\n      // Some artificial size: just proportional to pixels dimension\r\n      const MM_PER_PIXEL = 0.3;\r\n      this.m_boxSize.x = MM_PER_PIXEL * this.m_header.m_pixelWidth;\r\n      this.m_boxSize.x = MM_PER_PIXEL * this.m_header.m_pixelWidth;\r\n      this.m_boxSize.y = MM_PER_PIXEL * this.m_header.m_pixelHeight;\r\n      this.m_boxSize.z = MM_PER_PIXEL * this.m_header.m_pixelDepth;\r\n      console.log(`vBox = ${this.m_boxSize.x} * ${this.m_boxSize.y} * ${this.m_boxSize.z}`);\r\n    }\r\n\r\n    volDst.m_bytesPerVoxel = bytesPerVoxel;\r\n    volDst.m_dataArray = this.m_dataArray;\r\n    volDst.m_dataSize = this.m_dataSize;\r\n    volDst.m_boxSize = this.m_boxSize;\r\n    console.log(`KTX Loaded successfully with dim = ${volDst.m_xDim}*${volDst.m_yDim}*${volDst.m_zDim}. bpp=${volDst.m_bytesPerVoxel}`);\r\n\r\n    this.m_isLoadedSuccessfull = true;\r\n    if (callbackProgress !== undefined) {\r\n      callbackProgress(1.0);\r\n    }\r\n    if (callbackComplete !== undefined) {\r\n      callbackComplete(LoadResult.SUCCESS);\r\n    }\r\n    return LoadResult.SUCCESS;\r\n  } // end readFromBuffer\r\n\r\n  /**\r\n  *\r\n  * Read Ktx file from URL\r\n  * @param {object} volDst volume to read\r\n  * @param {string} strUrl from where\r\n  * @param {Function} callbackProgress invoke during loading\r\n  * @param {Function} callbackComplete invoke at the end with final success code\r\n  */\r\n  readFromUrl(volDst, strUrl, callbackProgress, callbackComplete) {\r\n    console.log(`LoadedKtx. staring read ${strUrl}`);\r\n    this.m_fileLoader = new FileLoader(strUrl);\r\n    this.m_fileLoader.readFile((arrBuf) => {\r\n      this.readFromBuffer(volDst, arrBuf, callbackProgress, callbackComplete);\r\n      return;\r\n    }, (errMsg) => {\r\n      console.log(`LoaderKtx. Error read file: ${errMsg}`);\r\n      callbackComplete(LoadResult.ERROR_CANT_OPEN_URL, null, 0, null);\r\n      return;\r\n    });\r\n  } // end of readFromUrl\r\n} // end class\r\n","/**\r\n * @fileOverview TransfFunc\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// ********************************************************\r\n// Imports\r\n// ********************************************************\r\n\r\nclass TransfFunc {\r\n  constructor() {\r\n    this.m_mouseDown = false;\r\n    this.m_indexMoved = -1;\r\n\r\n    this.m_numHandles = 10;\r\n    this.m_handleColors = [\r\n      { r: 0, g: 0, b: 0 },\r\n      { r: 255, g: 128, b: 64 },\r\n      { r: 255, g: 0, b: 0 },\r\n      { r: 128, g: 64, b: 64 },\r\n      { r: 128, g: 0, b: 0 },\r\n      { r: 64, g: 64, b: 64 },\r\n      { r: 128, g: 128, b: 128 },\r\n      { r: 192, g: 192, b: 192 },\r\n      { r: 255, g: 255, b: 255 },\r\n      { r: 255, g: 255, b: 255 },\r\n    ];\r\n    this.m_handleX = [\r\n      0, 22, 40, 55, 61, 115, 118, 125, 160, 255\r\n    ];\r\n    this.m_handleY = [\r\n      0, 0, 0.3, 0.12, 0, 0, 0.4, 0.8, 0.95, 1.0\r\n    ];\r\n    // screen projections\r\n    this.m_proj = [\r\n      { x: 0, y: 0 },\r\n      { x: 0, y: 0 },\r\n      { x: 0, y: 0 },\r\n      { x: 0, y: 0 },\r\n      { x: 0, y: 0 },\r\n      { x: 0, y: 0 },\r\n      { x: 0, y: 0 },\r\n      { x: 0, y: 0 },\r\n      { x: 0, y: 0 },\r\n      { x: 0, y: 0 }\r\n    ];\r\n    // check correct array size\r\n    if (this.m_handleColors.length !== this.m_numHandles) {\r\n      console.log(`Wrong array this.m_handleColors: ${this.m_handleColors.length} !== ${this.m_numHandles}`);\r\n    }\r\n  } // end constructor\r\n\r\n  render(ctx, xMin, yMin, wScreen, hScreen) {\r\n\r\n    this.m_xMin = xMin;\r\n    this.m_yMin = yMin;\r\n    this.m_wScreen = wScreen;\r\n    this.m_hScreen = hScreen;\r\n\r\n    const X_MAX = 255;\r\n    const Y_MAX = 1.0;\r\n    const RAD_CIRCLE = Math.floor(wScreen / 50.0);\r\n    this.m_radCircle = RAD_CIRCLE;\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#000000'\r\n    let xPre, yPre;\r\n\r\n    // draw lines\r\n    xPre = -1; yPre = -1;\r\n    for (let i = 0; i < this.m_numHandles; i++) {\r\n      const xFunc = this.m_handleX[i];\r\n      const yFunc = this.m_handleY[i];\r\n      const x = xMin + Math.floor(wScreen * xFunc / X_MAX);\r\n      const y = yMin + Math.floor(hScreen - 1 - hScreen * yFunc / Y_MAX);\r\n      this.m_proj[i].x = x;\r\n      this.m_proj[i].y = y;\r\n      if (i > 0) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(xPre, yPre);\r\n        ctx.lineTo(x, y);\r\n        ctx.stroke();\r\n      }\r\n      xPre = x;\r\n      yPre = y;\r\n    } // for (i) all handle points\r\n    // draw ellipses\r\n    for (let i = 0; i < this.m_numHandles; i++) {\r\n      const xFunc = this.m_handleX[i];\r\n      const yFunc = this.m_handleY[i];\r\n      const x = xMin + Math.floor(wScreen * xFunc / X_MAX);\r\n      const y = yMin + Math.floor(hScreen - 1 - hScreen * yFunc / Y_MAX);\r\n      let strRCol = this.m_handleColors[i].r.toString(16);\r\n      let strGCol = this.m_handleColors[i].g.toString(16);\r\n      let strBCol = this.m_handleColors[i].b.toString(16);\r\n      strRCol = (strRCol.length === 1) ? ('0' + strRCol) : strRCol;\r\n      strGCol = (strGCol.length === 1) ? ('0' + strGCol) : strGCol;\r\n      strBCol = (strBCol.length === 1) ? ('0' + strBCol) : strBCol;\r\n      const strColor = `#${strRCol}${strGCol}${strBCol}`;\r\n      // console.log(`strColor = ${strColor}`);\r\n      ctx.fillStyle = strColor;\r\n      ctx.beginPath();\r\n      ctx.ellipse(x, y, RAD_CIRCLE, RAD_CIRCLE, 0.0, 0.0, Math.PI * 2.0);\r\n      ctx.fill();\r\n      ctx.stroke();\r\n    } // for (i) all handle points\r\n\r\n  } // end render\r\n\r\n  onMouseDown(xScr, yScr) {\r\n    for (let i = 0; i < this.m_numHandles; i++) {\r\n      const dx = xScr - this.m_proj[i].x;\r\n      const dy = yScr - this.m_proj[i].y;\r\n      const dist2 = dx * dx + dy * dy;\r\n      const MIN_DIST_2 = this.m_radCircle * this.m_radCircle;\r\n      if (dist2 <= MIN_DIST_2) {\r\n        console.log(`Picked point ${i}`);\r\n        this.m_mouseDown = true;\r\n        this.m_indexMoved = i;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * on mouse up even t handler\r\n   * \r\n   * @param {number} xScr - mouse x position on screen\r\n   * @param {number} yScr - mouse y position on screen\r\n   */\r\n  onMouseUp() {\r\n    this.m_mouseDown = false;\r\n    return false;\r\n  }\r\n\r\n  onMouseMove(xScr, yScr) {\r\n    if (this.m_mouseDown) {\r\n      const isBorderPoint = (this.m_indexMoved === 0) || (this.m_indexMoved === this.m_numHandles - 1);\r\n      let xScrNew;\r\n      let yScrNew;\r\n      if (isBorderPoint) {\r\n        xScrNew = this.m_proj[this.m_indexMoved].x;\r\n      } else {\r\n        xScrNew = xScr;\r\n        xScrNew = (xScrNew < this.m_proj[this.m_indexMoved - 1].x) ? this.m_proj[this.m_indexMoved - 1].x : xScrNew;\r\n        xScrNew = (xScrNew > this.m_proj[this.m_indexMoved + 1].x) ? this.m_proj[this.m_indexMoved + 1].x : xScrNew;\r\n      }\r\n\r\n      yScrNew = yScr;\r\n      if (yScrNew < this.m_yMin) {\r\n        yScrNew = this.m_yMin;\r\n        // console.log('Clip by min y');\r\n      }\r\n      if (yScrNew > this.m_yMin + this.m_hScreen) {\r\n        yScrNew = this.m_yMin + this.m_hScreen;\r\n        // console.log('Clip by max y');\r\n      }\r\n      this.m_proj[this.m_indexMoved].x = xScrNew;\r\n      this.m_proj[this.m_indexMoved].y = yScrNew;\r\n\r\n      const X_MAX = 255;\r\n      const Y_MAX = 1.0;\r\n      const xFunc = (xScrNew - this.m_xMin) * X_MAX / this.m_wScreen;\r\n      const yFunc = (this.m_yMin + this.m_hScreen - 1 - yScrNew) * Y_MAX / this.m_hScreen;\r\n      this.m_handleX[this.m_indexMoved] = xFunc;\r\n      this.m_handleY[this.m_indexMoved] = yFunc;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}; //end class TransfFunc\r\n\r\nexport default TransfFunc;\r\n","\r\n\r\n\r\n// ********************************************************\r\n// Imports\r\n// ********************************************************\r\n\r\nimport React from 'react';\r\n\r\nimport TransfFunc from '../engine/TransFunc';\r\n\r\n// ********************************************************\r\n// Const\r\n// ********************************************************\r\n\r\nconst DEFAULT_HEIGHT = 220;\r\nconst NEED_TO_DRAW_VERTICAL_MARKS = false;\r\n\r\n// ********************************************************\r\n// Class\r\n// ********************************************************\r\n\r\n/**\r\n * Class UiHistogram some text later...\r\n */\r\nexport default class UiHistogram extends React.Component {\r\n  /**\r\n   * @param {object} props - props from up level object\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.m_histogram = [];\r\n    this.m_numColors = 0;\r\n\r\n    this.m_transfFunc = new TransfFunc();\r\n    this.m_transfFuncCallback = undefined;\r\n    this.m_transfFuncUpdateCallback = undefined;\r\n\r\n    this.setSize = this.setSize.bind(this);\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n\r\n    this.state = {\r\n      width: 0,\r\n      height: DEFAULT_HEIGHT,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateCanvas();\r\n    window.addEventListener('resize', this.handleResize, false);\r\n    this.setSize();    \r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updateCanvas();\r\n    window.removeEventListener('resize', this.handleResize, false);\r\n  }\r\n\r\n  handleResize() {\r\n    this.setSize();\r\n  }\r\n\r\n  setSize() {\r\n    const objOwner = this.m_canvasOwner;\r\n    if (objOwner !== null) {\r\n      const w = objOwner.clientWidth - 2;\r\n      const h = objOwner.clientHeight - 2;\r\n      // console.log(`UiHistogram. setSize. = ${w} * ${h}`);\r\n      this.setState({ width: w });\r\n      this.setState({ height: h });\r\n    }\r\n  }\r\n\r\n  getVolumeHistogram(vol) {\r\n    const xDim = vol.m_xDim;\r\n    const yDim = vol.m_yDim;\r\n    const zDim = vol.m_zDim;\r\n    const dataArray = vol.m_dataArray;\r\n    const xyzDim = xDim * yDim * zDim;\r\n    const NUM_COLORS = 256;\r\n    this.m_numColors = NUM_COLORS;\r\n    this.m_histogram = new Array(this.m_numColors);\r\n    let i;\r\n    for (i = 0; i < this.m_numColors; i++) {\r\n      this.m_histogram[i] = 0;\r\n    }\r\n    for (i = 0; i < xyzDim; i++) {\r\n      const ind = dataArray[i];\r\n      this.m_histogram[ind]++;\r\n    }\r\n    // calc max value in histogram\r\n    let valMax = 0;\r\n    for (i = 0; i < this.m_numColors; i++) {\r\n      valMax = (this.m_histogram[i] > valMax) ? this.m_histogram[i] : valMax;\r\n    }\r\n    const SOME_SMALL_ADD = 0.001;\r\n    valMax += SOME_SMALL_ADD;\r\n    // scale values to [0..1]\r\n    const scl = 1.0 / valMax;\r\n    for (i = 0; i < this.m_numColors; i++) {\r\n      this.m_histogram[i] *= scl;\r\n    }\r\n    this.smoothHistogram();\r\n    this.getMaxPeak();\r\n  }\r\n\r\n  assignArray(numColors, histogramArray) {\r\n    this.m_numColors = numColors;\r\n    this.m_histogram = histogramArray;\r\n  }\r\n\r\n  getLastMaxIndex(valMin = 0.0) {\r\n    const IND_MIN = 4;\r\n    let i;\r\n\r\n    let found = false;\r\n    for (i = this.m_numColors - IND_MIN; i > IND_MIN; i--) {\r\n      if (this.m_histogram[i] > valMin) {\r\n        if ((this.m_histogram[i] > this.m_histogram[i - 2]) && \r\n          (this.m_histogram[i] > this.m_histogram[i + 2])) {\r\n          found = true; break;\r\n        } // if local maximum\r\n      } // if mor min\r\n    } // for (i)\r\n    if (!found) {\r\n      console.log(`getLastMaxIndex. Not found!`);\r\n      return -1;\r\n    }\r\n    return i;\r\n\r\n  } // end get last max index\r\n\r\n  //\r\n  //\r\n  getMaxPeak() {\r\n    this.m_peakIndex = -1;\r\n    let i;\r\n    const hist = this.m_histogram;\r\n    const MIN_SCAN = 12;\r\n    const MAX_SCAN = this.m_numColors - 4;\r\n    let maxPeakVal = 0;\r\n    for (i = MAX_SCAN; i > MIN_SCAN; i--) {\r\n      if ((hist[i] > hist[i - 1]) && (hist[i] > hist[i + 1]) && \r\n        (hist[i] > hist[i - 2]) && (hist[i] > hist[i + 2])) {\r\n        const peakVal = hist[i];\r\n        if (peakVal > maxPeakVal) {\r\n          maxPeakVal = peakVal;\r\n          this.m_peakIndex = i;\r\n        }\r\n        // console.log(`Local histogram peak in ${this.m_peakIndex}`);\r\n      } // if (ha slocal peak)\r\n    } // for (all colors to scan) \r\n  }\r\n\r\n  smoothHistogram(sigma = 1.2, needNormalize = true) {\r\n    const SIZE_DIV = 60;\r\n    let RAD = Math.floor(this.m_numColors / SIZE_DIV);\r\n    // avoid too large neighbourhood window size\r\n    const SIZE_LARGE = 32;\r\n    if (RAD > SIZE_LARGE) {\r\n      RAD = SIZE_LARGE;\r\n    }\r\n    // console.log(`smoothHistogram. RAD = ${RAD}`);\r\n\r\n    const KOEF = 1.0 / (2 * sigma * sigma);\r\n    const newHist = new Array(this.m_numColors);\r\n    let i;\r\n    let maxVal = 0;\r\n    for (i = 0; i < this.m_numColors; i++) {\r\n      let sum = 0;\r\n      let sumW = 0;\r\n      for (let di = -RAD; di <= RAD; di++) {\r\n        const ii = i + di;\r\n        const t = di / RAD;\r\n        const w = Math.exp(-t * t * KOEF);\r\n        if ((ii >= 0) && (ii < this.m_numColors)) {\r\n          sum += this.m_histogram[ii] * w;\r\n          sumW += w;\r\n        }\r\n      }\r\n      sum /= sumW;\r\n      maxVal = (sum > maxVal) ? sum : maxVal;\r\n\r\n      newHist[i] = sum;\r\n    } // for (i)\r\n    // copy back to hist\r\n    if (needNormalize) {\r\n      for (i = 0; i < this.m_numColors; i++) {\r\n        this.m_histogram[i] = newHist[i] / maxVal;\r\n      } // for (i)\r\n    } else {\r\n      for (i = 0; i < this.m_numColors; i++) {\r\n        this.m_histogram[i] = newHist[i];\r\n      } // for (i)\r\n    }\r\n  } // smoothHistogram\r\n\r\n  onMouseDown(evt) {\r\n    if ((this.m_transfFuncCallback === undefined) ||\r\n      (this.m_transfFuncUpdateCallback === undefined)) {\r\n      return;\r\n    }\r\n    const box = this.refs.canvasHistogram.getBoundingClientRect();\r\n    const xScr = evt.clientX - box.left;\r\n    const yScr = evt.clientY - box.top;\r\n    const needRender = this.m_transfFunc.onMouseDown(xScr, yScr);\r\n    if (needRender) {\r\n      this.forceRender();\r\n    }\r\n  }\r\n\r\n  onMouseUp(evt) {\r\n    if ((this.m_transfFuncCallback === undefined) ||\r\n      (this.m_transfFuncUpdateCallback === undefined)) {\r\n      return;\r\n    }\r\n    const box = this.refs.canvasHistogram.getBoundingClientRect();\r\n    const xScr = evt.clientX - box.left;\r\n    const yScr = evt.clientY - box.top;\r\n    const needRender = this.m_transfFunc.onMouseUp(xScr, yScr);\r\n    if (needRender) {\r\n      this.forceRender();\r\n    }\r\n  }\r\n\r\n  onMouseMove(evt) {\r\n    if ((this.m_transfFuncCallback === undefined) ||\r\n      (this.m_transfFuncUpdateCallback === undefined)) {\r\n      return;\r\n    }\r\n    const box = this.refs.canvasHistogram.getBoundingClientRect();\r\n    const xScr = evt.clientX - box.left;\r\n    const yScr = evt.clientY - box.top;\r\n    const needRender = this.m_transfFunc.onMouseMove(xScr, yScr);\r\n    if (needRender) {\r\n      this.forceRender();\r\n    }\r\n  }\r\n\r\n  updateCanvas() {\r\n    if (this.refs.canvasHistogram === undefined) {\r\n      return;\r\n    }\r\n    const ctx = this.refs.canvasHistogram.getContext('2d');\r\n    const w = this.refs.canvasHistogram.clientWidth;\r\n    const h = this.refs.canvasHistogram.clientHeight;\r\n    ctx.fillStyle = 'rgb(220, 220, 220)';\r\n    ctx.fillRect(0,0, w, h);\r\n\r\n    // was 300 * 250\r\n    // console.log(`updateCanvas. canvas dim = ${w} * ${h}`); \r\n\r\n    const vol = this.props.volume;\r\n    if (vol !== null) {\r\n      this.getVolumeHistogram(vol);\r\n    }\r\n\r\n    // rect inside\r\n    // const xMin = Math.floor(0.10 * w);\r\n    // const xMax = Math.floor(0.95 * w);\r\n    const xMin = Math.floor(0.01 * w);\r\n    const xMax = Math.floor(0.99 * w);\r\n    const yMin = Math.floor(0.05 * h);\r\n    const yMax = Math.floor(0.95 * h);\r\n    const wRect = xMax - xMin;\r\n    const hRect = yMax - yMin;\r\n\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#0a0a0a';\r\n\r\n    ctx.moveTo(xMin, yMax);\r\n    ctx.lineTo(xMin, yMin);\r\n    ctx.stroke();\r\n\r\n    ctx.moveTo(xMin, yMax);\r\n    ctx.lineTo(xMax, yMax);\r\n    ctx.stroke();\r\n\r\n    ctx.font = '10px Arial';\r\n    ctx.fillStyle = 'rgb(120, 20, 20)';\r\n    ctx.textBaseline = 'top';\r\n    ctx.textAlign = 'center';\r\n\r\n    // detect max visible value in hist\r\n    let maxHistValue = 1.0;\r\n    if (this.m_peakIndex > 0) {\r\n      maxHistValue = this.m_histogram[this.m_peakIndex] * 2;\r\n      maxHistValue = (maxHistValue > 1.0) ? 1.0 : maxHistValue;\r\n    }\r\n\r\n    // draw marks horizontal\r\n    let i;\r\n    const NUM_X_MARKS = 4;\r\n    for (i = 0; i <= NUM_X_MARKS; i++) {\r\n      const x = xMin + Math.floor(wRect * i / NUM_X_MARKS);\r\n      ctx.moveTo(x, yMax);\r\n      ctx.lineTo(x, yMax + 6);\r\n      ctx.stroke();\r\n      const valMark = Math.floor(0 + this.m_numColors * i / NUM_X_MARKS);\r\n      if (i === 0) {\r\n        ctx.textAlign = 'left';\r\n      } else if (i === NUM_X_MARKS) {\r\n        ctx.textAlign = 'right';\r\n      } else {\r\n        ctx.textAlign = 'center';\r\n      }\r\n      ctx.fillText(valMark.toString(), x, yMax + 4);\r\n    }\r\n    // draw marks vertical\r\n    if (NEED_TO_DRAW_VERTICAL_MARKS) {\r\n      ctx.textBaseline = 'bottom';\r\n      ctx.textAlign = 'left';\r\n      ctx.fillStyle = 'rgb(120, 60, 60)';\r\n      const NUM_Y_MARKS = 4;\r\n      for (i = 0; i <= NUM_Y_MARKS; i++) {\r\n        if (i === NUM_Y_MARKS) {\r\n          ctx.textBaseline = 'top';\r\n        }\r\n        const y = yMax - Math.floor(hRect * i / NUM_Y_MARKS);\r\n        ctx.moveTo(xMin, y);\r\n        ctx.lineTo(xMin - 4, y);\r\n        ctx.stroke();\r\n        const valMark = (0 + maxHistValue * i / NUM_Y_MARKS);\r\n        ctx.fillText(valMark.toFixed(2), xMin + 6, y);\r\n      }\r\n    }\r\n\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = '#080808';\r\n    ctx.fillStyle = '#707070';\r\n    // draw histogram function line\r\n    ctx.beginPath();\r\n    {\r\n      ctx.moveTo(xMin, yMax);\r\n      let i;\r\n      let x, y;\r\n      for (i = 0; i < this.m_numColors; i++) {\r\n        x = xMin + Math.floor(wRect * i / this.m_numColors);\r\n        let v = this.m_histogram[i] / maxHistValue;\r\n        v = (v >= 1.0) ? 1.0 : v;\r\n        y = yMax - Math.floor(hRect * v);\r\n        ctx.lineTo(x, y);\r\n      } // for (i) all colors\r\n      y = yMax;\r\n      ctx.lineTo(x, y);\r\n    }\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    // draw peak\r\n    if (this.m_peakIndex > 0) {\r\n      ctx.lineWidth = 1;\r\n      ctx.strokeStyle = '#eeeeee';\r\n      const x = xMin + Math.floor(wRect * this.m_peakIndex / this.m_numColors);\r\n      let v = this.m_histogram[this.m_peakIndex] / maxHistValue;\r\n      v = (v >= 1.0) ? 1.0 : v;\r\n      let y = yMax - Math.floor(hRect * v);\r\n      ctx.beginPath();\r\n      ctx.setLineDash([5, 15]);\r\n      ctx.moveTo(x, y);\r\n      y = yMax;\r\n      ctx.lineTo(x, y);\r\n      ctx.stroke();\r\n      ctx.setLineDash([]);\r\n    }\r\n    // render points and lines for modified transfer fucntion\r\n    if ((this.m_transfFuncCallback !== undefined) &&\r\n      (this.m_transfFuncUpdateCallback !== undefined)) {\r\n      this.m_transfFunc.render(ctx, xMin, yMin, wRect, hRect);\r\n    }\r\n  } // end update canvas\r\n\r\n  forceRender() {\r\n    this.setState({ state: this.state });\r\n    if (this.m_transfFuncCallback !== undefined) {\r\n      this.m_transfFuncCallback(this.m_transfFunc);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Main component render func callback\r\n   */\r\n  render() {\r\n    const vol = this.props.volume;\r\n    // if (vol === undefined) {\r\n    //   return <p>UiHistogram.props volume is not defined !!!</p>;\r\n    // }\r\n    if (vol === null) {\r\n      return <p></p>;\r\n    }\r\n    \r\n  }\r\n}\r\n","/**\r\n * @fileOverview LoaderNifti\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// ********************************************************\r\n// Imports\r\n// ********************************************************\r\n\r\nimport LoadResult from '../LoadResult';\r\nimport UiHistogram from '../../ui/UiHistogram';\r\nimport FileLoader from './FileLoader';\r\n\r\n// ********************************************************\r\n// Const\r\n// ********************************************************\r\n\r\n// const NEED_EVEN_TEXTURE_SIZE = false;\r\n\r\n// ********************************************************\r\n// Class\r\n// ********************************************************\r\n\r\n/**\r\n * Class LoaderNifti some text later...\r\n */\r\nclass LoaderNifti {\r\n  /**\r\n   * @param {object} props - props from up level object\r\n   */\r\n  constructor() {\r\n    this.m_littleEndian = true;\r\n    this.m_header = {\r\n      m_id: '',\r\n      m_endianness: 0,\r\n      m_glType: 0,\r\n      m_glTypeSize: 0,\r\n      m_glFormat: 0,\r\n      m_glInternalFormat: 0,\r\n      m_glBaseInternalFormat: 0,\r\n      m_pixelWidth: 0,\r\n      m_pixelHeight: 0,\r\n      m_pixelDepth: 0,\r\n      m_numberOfArrayElements: 0,\r\n      m_numberOfFaces: 0,\r\n      m_numberOfMipmapLevels: 0,\r\n      m_bytesOfKeyValueData: 0\r\n    };\r\n    this.m_xDim = 0;\r\n    this.m_yDim = 0;\r\n    this.m_zDim = 0;\r\n    this.m_boxSize = {\r\n      x: 0.0,\r\n      y: 0.0,\r\n      z: 0.0\r\n    };\r\n  } // constructor\r\n\r\n  /**\r\n  * Read 32 bit integer from input buffer\r\n  * @param {object} buf - source buffer\r\n  * @param {number} off - offset in buffer\r\n  * @return 32 bit integer number\r\n  */\r\n  readIntFromBuffer(buf, off) {\r\n    let res = 0;\r\n    if (this.m_littleEndian) {\r\n      res = ((buf[off + 0]) |\r\n        // eslint-disable-next-line\r\n        (buf[off + 1] << 8) |\r\n        // eslint-disable-next-line\r\n        (buf[off + 2] << 16) |\r\n        // eslint-disable-next-line\r\n        (buf[off + 3] << 24));\r\n    } else {\r\n      res = ((buf[off + 3]) |\r\n        // eslint-disable-next-line\r\n        (buf[off + 2] << 8) |\r\n        // eslint-disable-next-line\r\n        (buf[off + 1] << 16) |\r\n        // eslint-disable-next-line\r\n        (buf[off + 0] << 24));\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n  * Read 16 bit short integer from input buffer\r\n  * @param {object} buf - source buffer\r\n  * @param {number} off - offset in buffer\r\n  * @return 16 bit short integer number\r\n  */\r\n  readShortFromBuffer(buf, off) {\r\n    let res = 0;\r\n    if (this.m_littleEndian) {\r\n      // eslint-disable-next-line\r\n      res = ((buf[off + 0]) | (buf[off + 1] << 8));\r\n    } else {\r\n      // eslint-disable-next-line\r\n      res = ((buf[off + 1]) | (buf[off + 0] << 8));\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n  * Read 32 bit float from input buffer\r\n  * @param {object} buf - source buffer\r\n  * @param {number} off - offset in buffer\r\n  * @return float number, loaded from buffer\r\n  */\r\n  readFloatFromBuffer(buf, off) {\r\n    const BYTES_IN_FLOAT = 4;\r\n    const arBuf = new ArrayBuffer(BYTES_IN_FLOAT);\r\n    const dataArray = new DataView(arBuf);\r\n    // eslint-disable-next-line\r\n    dataArray.setUint8(0, buf[off + 0]);\r\n    // eslint-disable-next-line\r\n    dataArray.setUint8(1, buf[off + 1]);\r\n    // eslint-disable-next-line\r\n    dataArray.setUint8(2, buf[off + 2]);\r\n    // eslint-disable-next-line\r\n    dataArray.setUint8(3, buf[off + 3]);\r\n    const res = dataArray.getFloat32(0, this.m_littleEndian);\r\n    return res;\r\n  }\r\n\r\n  /**\r\n  * Read from local file buffer\r\n  * @param {object} volDst - Destination volume object to be fiiied\r\n  * @param {object} arrBuf - source byte buffer\r\n  * @param {func} callbackProgress - function invoked during read\r\n  * @param {func} callbackComplete - function invoked after reading\r\n  * @return true, if success\r\n  */\r\n  readFromBuffer(volDst, arrBuf, callbackProgress, callbackComplete) {\r\n    const bufBytes = new Uint8Array(arrBuf);\r\n    const bufLen = bufBytes.length;\r\n    const MIN_BUF_SIZE = 8;\r\n    const MAX_BUF_SIZE = (1024 * 1024 * 230);\r\n    if (bufLen < MIN_BUF_SIZE) {\r\n      if (callbackComplete) {\r\n        callbackComplete(LoadResult.ERROR_TOO_SMALL_DATA_SIZE , null, 0, null);\r\n      }\r\n      return false;\r\n    }\r\n    if (bufLen >= MAX_BUF_SIZE) {\r\n      if (callbackComplete) {\r\n        callbackComplete(LoadResult.ERROR_TOO_LARGE_DATA_SIZE , null, 0, null);\r\n      }\r\n      return false;\r\n    }\r\n    const NIFTI_HEADER_SIZE = 348;\r\n    // Nifti file header size is 348 bytes\r\n    if (bufLen < NIFTI_HEADER_SIZE) {\r\n      console.log('Nifti header too small');\r\n      if (callbackComplete) {\r\n        callbackComplete(LoadResult.BAD_HEADER, null, 0, null);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    console.log(`Nifti loader. Start parse ${bufLen} bytes...`);\r\n\r\n    const SIZE_DWORD = 4;\r\n    const SIZE_SHORT = 2;\r\n\r\n    let bufOff = 0;\r\n    let headSize = this.readIntFromBuffer(bufBytes, bufOff);\r\n    if (headSize > (2 << 24)) {\r\n      this.m_littleEndian = false;\r\n      headSize = this.readIntFromBuffer(bufBytes, bufOff);\r\n    }\r\n\r\n    bufOff += SIZE_DWORD;\r\n    if (headSize !== NIFTI_HEADER_SIZE) {\r\n      console.log(`Nifti first int wrong: ${headSize}, but should be ${NIFTI_HEADER_SIZE}`);\r\n      if (callbackComplete) {\r\n        callbackComplete(LoadResult.BAD_HEADER, null, 0, null);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    // data type\r\n    // eslint-disable-next-line\r\n    bufOff += 10;\r\n    // db name\r\n    // eslint-disable-next-line\r\n    bufOff += 18;\r\n    // extents\r\n    bufOff += SIZE_DWORD;\r\n    // session error\r\n    bufOff += SIZE_SHORT;\r\n    // regular\r\n    bufOff += 1;\r\n    // dim info\r\n    bufOff += 1;\r\n\r\n    // read number of dimensions\r\n    const numDimensions = this.readShortFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n    const MIN_NUM_DIMS = 3;\r\n    if (numDimensions < MIN_NUM_DIMS) {\r\n      console.log(`Nifti header wrong num dimensions: ${numDimensions}, but should be at least 3`);\r\n      if (callbackComplete) {\r\n        callbackComplete(LoadResult.WRONG_HEADER_DIMENSIONS, null, 0, null);\r\n      }\r\n      return false;\r\n    }\r\n    this.m_xDim = this.readShortFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n    this.m_yDim = this.readShortFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n    this.m_zDim = this.readShortFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n\r\n    // eslint-disable-next-line\r\n    bufOff += 8;\r\n\r\n    // intent_p1\r\n    bufOff += SIZE_DWORD;\r\n    // intent_p2\r\n    bufOff += SIZE_DWORD;\r\n    // intent_p3\r\n    bufOff += SIZE_DWORD;\r\n    // intent_code\r\n    bufOff += SIZE_SHORT;\r\n    const dataType = this.readShortFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n    const bitPix = this.readShortFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n\r\n    const NIFTI_DATA_TYPE_UINT8 = 2;\r\n    const NIFTI_DATA_TYPE_INT16 = 4;\r\n    const NIFTI_DATA_TYPE_FLOAT32 = 16;\r\n    const NIFTI_DATA_TYPE_INT8 = 256;\r\n    const NIFTI_DATA_TYPE_UINT16 = 512;\r\n\r\n    let isDataTypeCorrect = 0;\r\n    isDataTypeCorrect |= (dataType === NIFTI_DATA_TYPE_UINT8);\r\n    isDataTypeCorrect |= (dataType === NIFTI_DATA_TYPE_INT16);\r\n    isDataTypeCorrect |= (dataType === NIFTI_DATA_TYPE_FLOAT32);\r\n    isDataTypeCorrect |= (dataType === NIFTI_DATA_TYPE_INT8);\r\n    isDataTypeCorrect |= (dataType === NIFTI_DATA_TYPE_UINT16);\r\n  \r\n\r\n    if (!isDataTypeCorrect) {\r\n      console.log(`Nifti header read. This data type (${dataType}) is not supported`);\r\n      if (callbackComplete) {\r\n        callbackComplete(LoadResult.WRONG_HEADER_DATA_TYPE, null, 0, null);\r\n      }\r\n      return false;\r\n    }\r\n    const BIT_PIXELS_8 = 8;\r\n    const BIT_PIXELS_16 = 16;\r\n    const BIT_PIXELS_32 = 32;\r\n    const isSupported = (bitPix === BIT_PIXELS_8) | \r\n      (bitPix === BIT_PIXELS_16) | (bitPix === BIT_PIXELS_32);\r\n    if (!isSupported) {\r\n      console.log(`Nifti wrong bitPix: ${bitPix}, but should be 8,16 or 32`);\r\n      if (callbackComplete) {\r\n        callbackComplete(LoadResult.WRONG_HEADER_BITS_PER_PIXEL, null, 0, null);\r\n      }\r\n      return false;\r\n    }\r\n    // slice start\r\n    bufOff += SIZE_SHORT;\r\n\r\n    // grid spacing\r\n    // const pixdim0 = this.readFloatFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n    const pixdim1 = this.readFloatFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n    const pixdim2 = this.readFloatFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n    const pixdim3 = this.readFloatFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n\r\n    // console.log(`Nifti pixdim0: ${pixdim0}`);\r\n    // console.log(`Nifti pixdim1: ${pixdim1}`);\r\n    // console.log(`Nifti pixdim2: ${pixdim2}`);\r\n    // console.log(`Nifti pixdim3: ${pixdim3}`);\r\n\r\n    this.m_boxSize.x = this.m_xDim * pixdim1;\r\n    this.m_boxSize.y = this.m_yDim * pixdim2;\r\n    this.m_boxSize.z = this.m_zDim * pixdim3;\r\n    const TOO_SMALL_SIZE = 1.0e-5;\r\n    if (this.m_boxSize.x < TOO_SMALL_SIZE) {\r\n      const SOME_MAGIC_BOX_DIM = 312.0;\r\n      this.m_boxSize.x = SOME_MAGIC_BOX_DIM;\r\n      this.m_boxSize.y = SOME_MAGIC_BOX_DIM;\r\n      this.m_boxSize.z = SOME_MAGIC_BOX_DIM;\r\n    }\r\n    console.log(`Nifti physic volume size: ${this.m_boxSize.x} * ${this.m_boxSize.y} * ${this.m_boxSize.z}`);\r\n\r\n    // read m_description field (max 80 characters)\r\n    const OFF_DESC = 148;\r\n    const MAX_STR_DECS = 80;\r\n    const arrDesc = bufBytes.slice(OFF_DESC, OFF_DESC + MAX_STR_DECS);\r\n    // const strDescr = decodeURIComponent(escape(String.fromCharCode.apply(null, arrDesc)));\r\n    let strDescr = '';\r\n    let isGoodSym = true;\r\n    const CODE_MIN = 20;\r\n    const CODE_MAX = 255;\r\n    for (let i = 0; (i < MAX_STR_DECS) && isGoodSym; i++) {\r\n      isGoodSym = ((arrDesc[i] >= CODE_MIN) && (arrDesc[i] < CODE_MAX));\r\n      if (isGoodSym) {\r\n        strDescr = strDescr.concat(String.fromCharCode(arrDesc[i]));\r\n      }\r\n    }\r\n    // console.log(`Nifti description = ${strDescr}`);\r\n\r\n    // create dicom info\r\n    /*\r\n    this.m_dicomInfo = new DicomInfo();\r\n    this.m_dicomInfo.m_patientName = strDescr;\r\n    this.m_dicomInfo.m_patientId = '';\r\n    this.m_dicomInfo.m_patientGender = '';\r\n    this.m_dicomInfo.m_patientDateOfBirth = '';\r\n    this.m_dicomInfo.m_studyDate = '';\r\n    this.m_dicomInfo.m_acquisionTime = '';\r\n    this.m_dicomInfo.m_institutionName = '';\r\n    this.m_dicomInfo.m_physicansName = '';\r\n    this.m_dicomInfo.m_manufacturerName = '';\r\n    */\r\n\r\n    // 4 last bytes are magic\r\n    bufOff = NIFTI_HEADER_SIZE - SIZE_DWORD;\r\n    // 'n' == 110, '+' == 43, '1' == 49\r\n    const MAG_0 = 110;\r\n    const MAG_1 = 43;\r\n    const MAG_2 = 49;\r\n    const isCorrectMagic = (bufBytes[bufOff + 0] === MAG_0) &&\r\n      // eslint-disable-next-line\r\n      (bufBytes[bufOff + 1] === MAG_1) &&\r\n      // eslint-disable-next-line\r\n      (bufBytes[bufOff + 2] === MAG_2);\r\n    if (!isCorrectMagic) {\r\n      // eslint-disable-next-line\r\n      console.log(`Nifti hdr bad magic: ${bufBytes[bufOff + 0]}, ${bufBytes[bufOff + 1]}, ${bufBytes[bufOff + 2]}`);\r\n      if (callbackComplete) {\r\n        callbackComplete(LoadResult.WRONG_HEADER_MAGIC, null, 0, null);\r\n      }\r\n      return false;\r\n    }\r\n    bufOff += SIZE_DWORD; // last magic bytes in header\r\n\r\n    const numVoxels = this.m_xDim * this.m_yDim * this.m_zDim;\r\n    const dataOff = bufOff;\r\n\r\n    // get power of 2 for data size\r\n    let pwr2;\r\n    let pwrFinish = false;\r\n    // eslint-disable-next-line\r\n    for (pwr2 = 29; (pwr2 >= 0) && (!pwrFinish); pwr2--) {\r\n      const val = 1 << pwr2;\r\n      if (val < numVoxels) {\r\n        pwrFinish = true;\r\n      }\r\n    }\r\n    pwr2++;\r\n    // console.log(`pwr2 = ${pwr2}`);\r\n    // build mask for progress update\r\n    // eslint-disable-next-line\r\n    pwr2 -= 3;\r\n    if (pwr2 <= 0) {\r\n      pwr2 = 1;\r\n    }\r\n    const progressMask = (1 << pwr2) - 1;\r\n\r\n    let i, j;\r\n    // scan min max in array\r\n    let valMax = 0;\r\n    j = 0;\r\n    if ((dataType === NIFTI_DATA_TYPE_INT16) || (dataType === NIFTI_DATA_TYPE_UINT16)) {\r\n      for (i = 0; i < numVoxels; i++) {\r\n        const val = this.readShortFromBuffer(bufBytes, dataOff + j);\r\n        // eslint-disable-next-line\r\n        j += 2;\r\n        if (val > valMax) {\r\n          valMax = val;\r\n        }\r\n        // progress update\r\n        if (callbackProgress && ((i & progressMask) === 0) && (i > 0)) {\r\n          const ratio = 0.0 + 0.5 * (i / numVoxels);\r\n          callbackProgress(ratio);\r\n        }\r\n      } // for (i) al voxels\r\n    }\r\n    if ((dataType === NIFTI_DATA_TYPE_INT8) || (dataType === NIFTI_DATA_TYPE_UINT8)) {\r\n      for (i = 0; i < numVoxels; i++) {\r\n        const val = bufBytes[dataOff + j];\r\n        // eslint-disable-next-line\r\n        j ++;\r\n        if (val > valMax) {\r\n          valMax = val;\r\n        }\r\n        // progress update\r\n        if (callbackProgress && ((i & progressMask) === 0) && (i > 0)) {\r\n          const ratio = 0.0 + 0.5 * (i / numVoxels);\r\n          callbackProgress(ratio);\r\n        }\r\n      } // for (i) al voxels\r\n    }\r\n    if (dataType === NIFTI_DATA_TYPE_FLOAT32) {\r\n      for (i = 0; i < numVoxels; i++) {\r\n        const fval = this.readFloatFromBuffer(bufBytes, dataOff + j);\r\n        const val = Math.floor(fval) + 1;\r\n        // eslint-disable-next-line\r\n        j += 4;\r\n        if (val > valMax) {\r\n          valMax = val;\r\n        }\r\n        // progress update\r\n        if (callbackProgress && ((i & progressMask) === 0) && (i > 0)) {\r\n          const ratio = 0.0 + 0.5 * (i / numVoxels);\r\n          callbackProgress(ratio);\r\n        }\r\n      } // for (i) al voxels\r\n    }\r\n\r\n    // console.log(`Nifti 16 data max val: ${valMax}`);\r\n\r\n    // create histogram\r\n    // const histArray = new Int32Array(valMax);\r\n    const histArray = new Float32Array(valMax + 1);\r\n    for (i = 0; i < valMax + 1; i++) {\r\n      histArray[i] = 0.0;\r\n    }\r\n    j = 0;\r\n    if ((dataType === NIFTI_DATA_TYPE_INT16) || (dataType === NIFTI_DATA_TYPE_UINT16)) {\r\n      for (i = 0; i < numVoxels; i++) {\r\n        const val = this.readShortFromBuffer(bufBytes, dataOff + j);\r\n        // eslint-disable-next-line\r\n        j += 2;\r\n        histArray[val] ++;\r\n      }\r\n    } // if\r\n    if (dataType === NIFTI_DATA_TYPE_FLOAT32) {\r\n      for (i = 0; i < numVoxels; i++) {\r\n        const val = Math.floor(this.readFloatFromBuffer(bufBytes, dataOff + j));\r\n        // eslint-disable-next-line\r\n        j += 4;\r\n        histArray[val] ++;\r\n      }\r\n    } // if\r\n    if ((dataType === NIFTI_DATA_TYPE_INT8) || (dataType === NIFTI_DATA_TYPE_UINT8)) {\r\n      for (i = 0; i < numVoxels; i++) {\r\n        const val = bufBytes[dataOff + j];\r\n        // eslint-disable-next-line\r\n        j ++;\r\n        histArray[val] ++;\r\n      }\r\n    } // if\r\n\r\n    const histogram = new UiHistogram();\r\n    histogram.assignArray(valMax, histArray);\r\n\r\n    const HIST_SMOOTH_SIGMA = 0.8;\r\n    const NORMALIZATION_APPLY = false;\r\n    histogram.smoothHistogram(HIST_SMOOTH_SIGMA, NORMALIZATION_APPLY);\r\n\r\n    // print histogram values\r\n    // for (i = 0; i < histogram.m_numColors; i++) {\r\n    //   console.log(`hist[ ${i} ] = ${histogram.m_histogram[i]}`);\r\n    // }\r\n\r\n    const VAL_MIN = 4.0;\r\n    // fix max index if maximum not found\r\n    let indMax = histogram.getLastMaxIndex(VAL_MIN);\r\n    if (indMax < 4) {\r\n      indMax = valMax;\r\n    }\r\n    console.log(`LoaderNifti. get Last max peak: ${indMax} / ${histogram.m_numColors}`);\r\n\r\n    // replace val max to extracted maximum from histogram\r\n    valMax = indMax;\r\n    const MAX_BYTE = 255;\r\n    // convert 16 bit data to 8 bit array\r\n    const BITS_IN_BYTE = 8;\r\n    const dataSize = numVoxels * (bitPix / BITS_IN_BYTE);\r\n    let dataArray = new Uint8Array(numVoxels);\r\n    const ACC_DEGREE = 9;\r\n    const scale = (MAX_BYTE << ACC_DEGREE) / valMax;\r\n    const TOO_MIN_SCALE = 4;\r\n    if (scale <= TOO_MIN_SCALE) {\r\n      console.log('Bad scaling: image will be 0');\r\n      if (callbackComplete) {\r\n        callbackComplete(LoadResult.ERROR_PROCESS_HISTOGRAM, null, 0, null);\r\n      }\r\n      return false;\r\n    }\r\n    j = 0;\r\n    if ((dataType === NIFTI_DATA_TYPE_INT16) || (dataType === NIFTI_DATA_TYPE_UINT16)) {\r\n      for (i = 0; i < numVoxels; i++) {\r\n        let val = this.readShortFromBuffer(bufBytes, dataOff + j);\r\n        // eslint-disable-next-line\r\n        j += 2;\r\n        // scale down to [0..255]\r\n        val = (val * scale) >> ACC_DEGREE;\r\n        // check [0..255] range for some voxels out from histogram peak\r\n        val = (val <= MAX_BYTE) ? val : MAX_BYTE;\r\n        dataArray[i] = val;\r\n        // progress update\r\n        if (callbackProgress && ((i & progressMask) === 0) && (i > 0)) {\r\n          const ratio = 0.5 + 0.5 * (i / numVoxels);\r\n          callbackProgress(ratio);\r\n        }\r\n      } // for (i) all voxels\r\n    } // if 16 bit\r\n    if ((dataType === NIFTI_DATA_TYPE_INT8) || (dataType === NIFTI_DATA_TYPE_UINT8)) {\r\n      for (i = 0; i < numVoxels; i++) {\r\n        let val = bufBytes[dataOff + j];\r\n        // eslint-disable-next-line\r\n        j ++;\r\n        // scale down to [0..255]\r\n        val = (val * scale) >> ACC_DEGREE;\r\n        // check [0..255] range for some voxels out from histogram peak\r\n        val = (val <= MAX_BYTE) ? val : MAX_BYTE;\r\n        dataArray[i] = val;\r\n        // progress update\r\n        if (callbackProgress && ((i & progressMask) === 0) && (i > 0)) {\r\n          const ratio = 0.5 + 0.5 * (i / numVoxels);\r\n          callbackProgress(ratio);\r\n        }\r\n      } // for (i) all voxels\r\n    } // if 8 bit\r\n    if (dataType === NIFTI_DATA_TYPE_FLOAT32) {\r\n      for (i = 0; i < numVoxels; i++) {\r\n        let val = Math.floor(this.readFloatFromBuffer(bufBytes, dataOff + j));\r\n        // eslint-disable-next-line\r\n        j += 4;\r\n        // scale down to [0..255]\r\n        val = (val * scale) >> ACC_DEGREE;\r\n        // check [0..255] range for some voxels out from histogram peak\r\n        val = (val <= MAX_BYTE) ? val : MAX_BYTE;\r\n        dataArray[i] = val;\r\n        // progress update\r\n        if (callbackProgress && ((i & progressMask) === 0) && (i > 0)) {\r\n          const ratio = 0.5 + 0.5 * (i / numVoxels);\r\n          callbackProgress(ratio);\r\n        }\r\n      } // for (i) all voxels\r\n    } // if 16 bit\r\n\r\n\r\n    let xyDim = this.m_xDim * this.m_yDim;\r\n    /*\r\n    // Scale down volume by slices\r\n    const numPixelsInVolume = this.m_xDim * this.m_yDim * this.m_zDim;\r\n    // eslint-disable-next-line\r\n    const MAX_VOLUME_PIXELS = 512 * 512 * 256;\r\n    if (this.m_needScaleDownTexture && (numPixelsInVolume > MAX_VOLUME_PIXELS)) {\r\n      const XY_MAX_DIM = 512;\r\n      const Z_LOW_DIM = 120;\r\n      const xDimDst = (this.m_xDim <= XY_MAX_DIM) ? this.m_xDim : XY_MAX_DIM;\r\n      const yDimDst = (this.m_yDim <= XY_MAX_DIM) ? this.m_yDim : XY_MAX_DIM;\r\n      const zDimDst = Z_LOW_DIM;\r\n      const dataNew = VolumeTools.scaleTextureDown(this, dataArray, xDimDst, yDimDst, zDimDst);\r\n      dataArray = dataNew;\r\n      xyDim = this.m_xDim * this.m_yDim;\r\n      console.log(`Volume scaled down to: ${xDimDst} * ${yDimDst} * ${zDimDst}.`);\r\n    }\r\n    */\r\n    /*\r\n    // Special volume texture size fix (z dim should be even)\r\n    if (NEED_EVEN_TEXTURE_SIZE) {\r\n      const xDim = this.m_xDim;\r\n      const yDim = this.m_yDim;\r\n      const zDim = this.m_zDim;\r\n      if ((zDim & 1) !== 0) {\r\n        const volDataAlignedSize = VolumeTools.makeTextureSizeEven(dataArray, xDim, yDim, zDim);\r\n        // Align all dims to 4*x\r\n        const NUM3 = 3;\r\n        this.m_xDim = (xDim + NUM3) & (~NUM3);\r\n        this.m_yDim = (yDim + NUM3) & (~NUM3);\r\n        this.m_zDim = (zDim + NUM3) & (~NUM3);\r\n        dataArray = volDataAlignedSize;\r\n      }\r\n    }\r\n    */\r\n    // clear borders\r\n    let x; let y;\r\n    let z;\r\n    const zOffMin = 0 * xyDim;\r\n    const zOffMax = (this.m_zDim - 1) * xyDim;\r\n    for (y = 0; y < this.m_yDim; y++) {\r\n      const yOff = y * this.m_xDim;\r\n      for (x = 0; x < this.m_xDim; x++) {\r\n        let off;\r\n        off = zOffMin + yOff + x;\r\n        dataArray[off] = 0;\r\n        off = zOffMax + yOff + x;\r\n        dataArray[off] = 0;\r\n      } // for (x)\r\n    }   // for (y)\r\n    const xOffMin = 0;\r\n    const xOffMax = this.m_xDim - 1;\r\n    for (z = 0; z < this.m_zDim; z++) {\r\n      const zOff = z * xyDim;\r\n      for (y = 0; y < this.m_yDim; y++) {\r\n        let off;\r\n        off = zOff + (y * this.m_xDim) + xOffMin;\r\n        dataArray[off] = 0;\r\n        off = zOff + (y * this.m_xDim) + xOffMax;\r\n        dataArray[off] = 0;\r\n      }\r\n    }\r\n    const yOffMin = 0;\r\n    const yOffMax = (this.m_yDim - 1) * this.m_xDim;\r\n    for (z = 0; z < this.m_zDim; z++) {\r\n      const zOff = z * xyDim;\r\n      for (x = 0; x < this.m_xDim; x++) {\r\n        let off;\r\n        off = zOff + yOffMin + x;\r\n        dataArray[off] = 0;\r\n        off = zOff + yOffMax + x;\r\n        dataArray[off] = 0;\r\n      }\r\n    }\r\n\r\n    // save to result volume\r\n    volDst.m_xDim = this.m_xDim;\r\n    volDst.m_yDim = this.m_yDim;\r\n    volDst.m_zDim = this.m_zDim;\r\n\r\n    const ONE = 1;\r\n    volDst.m_bytesPerVoxel = ONE;\r\n    volDst.m_dataArray = dataArray;\r\n    volDst.m_dataSize = numVoxels;\r\n    volDst.m_boxSize = this.m_boxSize;\r\n\r\n    console.log(`Nifti header read OK. Volume pixels = ${this.m_xDim} * ${this.m_yDim} * ${this.m_zDim}`);\r\n    \r\n    // Finally invoke user callback after file was read\r\n    const KTX_GL_RED = 0x1903;\r\n    const KTX_UNSIGNED_BYTE = 0x1401;\r\n    const header = {\r\n      m_pixelWidth: this.m_xDim,\r\n      m_pixelHeight: this.m_yDim,\r\n      m_pixelDepth: this.m_zDim,\r\n      m_glType: KTX_UNSIGNED_BYTE,\r\n      m_glTypeSize: 1,\r\n      m_glFormat: KTX_GL_RED,\r\n      m_glInternalFormat: KTX_GL_RED,\r\n      m_glBaseInternalFormat: KTX_GL_RED,\r\n    };\r\n    if (callbackProgress) {\r\n      callbackProgress(1.0);\r\n    }\r\n    if (callbackComplete) {\r\n      callbackComplete(LoadResult.SUCCESS, header, dataSize, dataArray);\r\n    } // if callbackComplete ready\r\n\r\n    return true;\r\n  } // end of readFromBuffer\r\n\r\n  /**\r\n  *\r\n  * Read Nifti file from URL\r\n  * @param {object} volDst volume to read\r\n  * @param {string} strUrl from where\r\n  * @param {Function} callbackProgress invoke during loading\r\n  * @param {Function} callbackComplete invoke at the end with final success code\r\n  */\r\n  readFromUrl(volDst, strUrl, callbackProgress, callbackComplete) {\r\n    console.log(`LoadedNifti. staring read ${strUrl}`);\r\n    this.m_fileLoader = new FileLoader(strUrl);\r\n    this.m_fileLoader.readFile((arrBuf) => {\r\n      const okRead = this.readFromBuffer(volDst, arrBuf, callbackProgress, callbackComplete);\r\n      return okRead;\r\n    }, (errMsg) => {\r\n      console.log(`LoadedNifti. Error read file: ${errMsg}`);\r\n      callbackComplete(LoadResult.ERROR_CANT_OPEN_URL, null, 0, null);\r\n    });\r\n    return true;\r\n  } // end of readFromUrl\r\n\r\n} // end class LoaderNifti\r\n\r\nexport default LoaderNifti;\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Dicom tags description\r\n* @module lib/scripts/loaders/dicomdict\r\n*/\r\n\r\n\r\nexport default class DicomDictionary {\r\n\r\n  constructor() {\r\n    this.TAGS = [\r\n      /* eslint-disable */\r\n      [0x0002, 0x0000, 'OB', 'FileMetaInfoGroupLength'],\r\n      [0x0002, 0x0001, 'OB', 'FileMetaInformationVersion'],\r\n      [0x0002, 0x0002, 'UI', 'MediaStoredSOPClassUID'],\r\n\r\n      [0x0002, 0x0003, 'UI', 'MediaStoredSOPInstanceUID'],\r\n      [0x0002, 0x0010, 'UI', 'TransferSyntaxUID'],\r\n      [0x0002, 0x0012, 'UI', 'ImplementationClassUID'],\r\n      [0x0002, 0x0013, 'UI', 'ImplementationVersionName'],\r\n      [0x0002, 0x0016, 'UI', 'SourceApplicationEntityTitle'],\r\n      [0x0002, 0x0100, 'UI', 'PrivateInformationCreatorUID'],\r\n      [0x0002, 0x0102, 'UI', 'PrivateInformation'],\r\n\r\n      [0x0008, 0x0000, 'UL', 'IdentifyingGroupLength'],\r\n      [0x0008, 0x0001, 'UI', 'LengthToEnd'],\r\n      [0x0008, 0x0005, 'CS', 'SpecificCharacterSet'],\r\n      [0x0008, 0x0006, 'SQ', 'LanguageCodeSequence'],\r\n      [0x0008, 0x0008, 'CS', 'ImageType'],\r\n      [0x0008, 0x0010, 'SH', 'RecognitionCode'],\r\n      [0x0008, 0x0012, 'DA', 'InstanceCreationDate'],\r\n      [0x0008, 0x0013, 'TM', 'InstanceCreationTime'],\r\n      [0x0008, 0x0014, 'UI', 'InstanceCreatorUID'],\r\n      [0x0008, 0x0016, 'UI', 'SOPClassUID'],\r\n      [0x0008, 0x0018, 'UI', 'SOPInstanceUID'],\r\n      [0x0008, 0x001A, 'UI', 'RelatedGeneralSOPClassUID'],\r\n      [0x0008, 0x001B, 'UI', 'OriginalSpecializedSOPClassUID'],\r\n      [0x0008, 0x0020, 'DA', 'StudyDate'],\r\n      [0x0008, 0x0021, 'DA', 'SeriesDate'],\r\n      [0x0008, 0x0022, 'DA', 'AcquisitionDate'],\r\n      [0x0008, 0x0023, 'DA', 'ContentDate'],\r\n      [0x0008, 0x0024, 'DA', 'OverlayDate'],\r\n      [0x0008, 0x0025, 'DA', 'CurveDate'],\r\n      [0x0008, 0x002A, 'DT', 'AcquisitionDateTime'],\r\n      [0x0008, 0x0030, 'TM', 'StudyTime'],\r\n      [0x0008, 0x0031, 'TM', 'SeriesTime'],\r\n      [0x0008, 0x0032, 'TM', 'AcquisitionTime'],\r\n      [0x0008, 0x0033, 'TM', 'ContentTime'],\r\n      [0x0008, 0x0034, 'TM', 'OverlayTime'],\r\n      [0x0008, 0x0035, 'TM', 'CurveTime'],\r\n      [0x0008, 0x0040, 'US', 'DataSetType'],\r\n      [0x0008, 0x0041, 'LO', 'DataSetSubtype'],\r\n      [0x0008, 0x0042, 'CS', 'NuclearMedicineSeriesType'],\r\n      [0x0008, 0x0050, 'SH', 'AccessionNumber'],\r\n      [0x0008, 0x0051, 'SQ', 'IssuerOfAccessionNumberSequence'],\r\n      [0x0008, 0x0052, 'CS', 'QueryRetrieveLevel'],\r\n      [0x0008, 0x0054, 'AE', 'RetrieveAETitle'],\r\n      [0x0008, 0x0056, 'CS', 'InstanceAvailability'],\r\n      [0x0008, 0x0058, 'UI', 'FailedSOPInstanceUIDList'],\r\n      [0x0008, 0x0060, 'CS', 'Modality'],\r\n      [0x0008, 0x0070, 'XX', 'Manufacturer'],\r\n      [0x0008, 0x0080, 'XX', 'InstitutionName'],\r\n      [0x0008, 0x0081, 'XX', 'InstitutionAddress'],\r\n      [0x0008, 0x0090, 'XX', 'ReferringPhysicansName'],\r\n      [0x0008, 0x1010, 'XX', 'StationName'],\r\n      [0x0008, 0x1030, 'XX', 'StudyDescription'],\r\n      [0x0008, 0x103E, 'LO', 'SeriesDescription'],\r\n      [0x0008, 0x1040, 'XX', 'InstitutionDepartmentName'],\r\n      [0x0008, 0x1050, 'XX', 'PerformingPhysicansName'],\r\n      [0x0008, 0x1060, '\"XX', '\"Unkown'],\r\n      [0x0008, 0x1080, 'XX', 'AdmittingDiagnosesDescription'],\r\n      [0x0008, 0x1090, 'XX', 'ManufacturterModelName'],\r\n      [0x0008, 0x1111, 'XX', 'ReferencedPerformedProcStepSeq'],\r\n      [0x0008, 0x1140, 'XX', 'ReferencedImageSequence'],\r\n      [0x0008, 0x1150, 'UI', 'ReferencedSOP​ClassUID'],\r\n      [0x0008, 0x1155, 'UI', 'ReferencedSOP​InstanceUID'],\r\n\r\n      [0x0008, 0x2111, '\"XX', '\"DerivationDescription'],\r\n      [0x0008, 0x2112, '\"XX', '\"SourceImageSequence'],\r\n    \r\n      [0x0009, 0x0010, 'LO', 'PrivateCreator'],\r\n      [0x0009, 0x0011, '??', '\"Unknown'],\r\n      [0x0009, 0x0012, '??', '\"Unknown'],\r\n    \r\n      [0x0009, 0x1001, 'XX', 'PrivateTag'],\r\n      [0x0009, 0x1002, 'XX', 'PrivateTag'],\r\n      [0x0009, 0x1004, 'XX', 'PrivateTag'],\r\n      [0x0009, 0x1027, 'XX', 'PrivateTag'],\r\n      [0x0009, 0x1030, 'XX', 'PrivateTag'],\r\n      [0x0009, 0x1031, 'XX', 'PrivateTag'],\r\n      [0x0009, 0x10E3, 'XX', 'PrivateTag'],\r\n      [0x0009, 0x10E9, 'XX', 'PrivateTag'],\r\n\r\n      [0x0010, 0x0000, 'UL', 'PatientGroupLength'],\r\n      [0x0010, 0x0010, 'PN', 'PatientName'],\r\n      [0x0010, 0x0020, 'LO', 'PatientID'],\r\n      [0x0010, 0x0021, 'LO', 'IssuerOfPatientID'],\r\n      [0x0010, 0x0022, 'CS', 'TypeOfPatientID'],\r\n      [0x0010, 0x0024, 'SQ', 'IssuerOfPatientIDQualifiersSequence'],\r\n      [0x0010, 0x0030, 'DA', 'PatientBirthDate'],\r\n      [0x0010, 0x0032, 'TM', 'PatientBirthTime'],\r\n      [0x0010, 0x0040, 'CS', 'PatientGender'],\r\n      [0x0010, 0x0050, 'SQ', 'PatientInsurancePlanCodeSequence'],\r\n      [0x0010, 0x0101, 'SQ', 'PatientPrimaryLanguageCodeSequence'],\r\n      [0x0010, 0x0102, 'SQ', 'PatientPrimaryLanguageModifierCodeSequence'],\r\n      [0x0010, 0x1000, 'LO', 'OtherPatientIDs'],\r\n      [0x0010, 0x1001, 'PN', 'OtherPatientNames'],\r\n      [0x0010, 0x1002, 'SQ', 'OtherPatientIDsSequence'],\r\n      [0x0010, 0x1005, 'PN', 'PatientBirthName'],\r\n      [0x0010, 0x1010, 'AS', 'PatientAge'],\r\n      [0x0010, 0x1020, 'DS', 'PatientSize'],\r\n      [0x0010, 0x1021, 'SQ', 'PatientSizeCodeSequence'],\r\n      [0x0010, 0x1030, 'DS', 'PatientWeight'],\r\n      [0x0010, 0x1040, 'LO', 'PatientAddress'],\r\n      [0x0010, 0x1050, 'LO', 'InsurancePlanIdentification'],\r\n      [0x0010, 0x1060, 'PN', 'PatientMotherBirthName'],\r\n      [0x0010, 0x1080, 'LO', 'MilitaryRank'],\r\n      [0x0010, 0x1081, 'LO', 'BranchOfService'],\r\n      [0x0010, 0x1090, 'LO', 'MedicalRecordLocator'],\r\n      [0x0010, 0x2000, 'LO', 'MedicalAlerts'],\r\n      [0x0010, 0x2110, 'LO', 'Allergies'],\r\n      [0x0010, 0x2150, 'LO', 'CountryOfResidence'],\r\n      [0x0010, 0x2152, 'LO', 'RegionOfResidence'],\r\n      [0x0010, 0x2154, 'SH', 'PatientTelephoneNumbers'],\r\n      [0x0010, 0x2160, 'SH', 'EthnicGroup'],\r\n      [0x0010, 0x2180, 'SH', 'Occupation'],\r\n      [0x0010, 0x21A0, 'CS', 'SmokingStatus'],\r\n      [0x0010, 0x21B0, 'LT', 'AdditionalPatientHistory'],\r\n      [0x0010, 0x21C0, 'US', 'PregnancyStatus'],\r\n      [0x0010, 0x21D0, 'DA', 'LastMenstrualDate'],\r\n      [0x0010, 0x21F0, 'LO', 'PatientReligiousPreference'],\r\n      [0x0010, 0x2201, 'LO', 'PatientSpeciesDescription'],\r\n      [0x0010, 0x2202, 'SQ', 'PatientSpeciesCodeSequence'],\r\n      [0x0010, 0x2203, 'CS', 'PatientSexNeutered'],\r\n      [0x0010, 0x2210, 'CS', 'AnatomicalOrientationType'],\r\n      [0x0010, 0x2292, 'LO', 'PatientBreedDescription'],\r\n      [0x0010, 0x2293, 'SQ', 'PatientBreedCodeSequence'],\r\n      [0x0010, 0x2294, 'SQ', 'BreedRegistrationSequence'],\r\n      [0x0010, 0x2295, 'LO', 'BreedRegistrationNumber'],\r\n      [0x0010, 0x2296, 'SQ', 'BreedRegistryCodeSequence'],\r\n      [0x0010, 0x2297, 'PN', 'ResponsiblePerson'],\r\n      [0x0010, 0x2298, 'CS', 'ResponsiblePersonRole'],\r\n      [0x0010, 0x2299, 'LO', 'ResponsibleOrganization'],\r\n      [0x0010, 0x4000, 'LT', 'PatientComments'],\r\n      [0x0010, 0x9431, 'FL', 'ExaminedBodyThickness'],\r\n\r\n      [0x0018, 0x0000, 'UL', 'AcquisitionGroupLength'],\r\n      [0x0018, 0x0020, 'XX', 'ScanningSequence'],\r\n      [0x0018, 0x0021, 'XX', 'SequenceVariant'],\r\n      [0x0018, 0x0022, 'XX', 'ScanOptions'],\r\n      [0x0018, 0x0023, 'XX', 'MrAcquisionType'],\r\n      // Add new tag from 2019-01-23\r\n      [0x0018, 0x0024, '??', '\"SequenceName'],\r\n      [0x0018, 0x0025, 'XX', 'AngioFlag'],\r\n      [0x0018, 0x0050, 'XX', 'SliceThickness'],\r\n      [0x0018, 0x0060, 'DS', 'KVP'],\r\n      [0x0018, 0x0080, 'XX', 'RepetitionTime'],\r\n      [0x0018, 0x0081, 'XX', 'EchoTime'],\r\n      [0x0018, 0x0082, 'XX', 'InversionTime'],\r\n      [0x0018, 0x0083, 'XX', 'NumberOfAverages'],\r\n      [0x0018, 0x0084, 'XX', 'ImagingFrequency'],\r\n      [0x0018, 0x0085, 'XX', 'ImagedNucleus'],\r\n      [0x0018, 0x0086, 'XX', 'EchoNumber'],\r\n      [0x0018, 0x0087, 'XX', 'MagneticFieldStrength'],\r\n      [0x0018, 0x0088, 'XX', 'SpacingBetweenSlices'],\r\n      [0x0018, 0x0089, 'XX', 'NumberOfPhaseEncodingSteps'],\r\n      [0x0018, 0x0090, 'XX', 'DataCollectionDiameter'],\r\n      [0x0018, 0x0091, 'XX', 'EchoTrainLength'],\r\n      [0x0018, 0x0093, 'XX', 'ProcentSampling'],\r\n      [0x0018, 0x0094, 'XX', 'ProcentPhaseFieldOfView'],\r\n      [0x0018, 0x0095, 'XX', 'PixelBandwidth'],\r\n      [0x0018, 0x1000, 'XX', 'DeviceSerialNumber'],\r\n      [0x0018, 0x1002, \"??\", 'DeviceUID'],\r\n      [0x0018, 0x1003, \"??\", 'DeviceID'],\r\n      [0x0018, 0x1004, \"??\", 'PlateID'],\r\n      [0x0018, 0x1005, \"??\", 'GeneratorID'],\r\n      [0x0018, 0x1006, \"??\", 'GridID'],\r\n      [0x0018, 0x1007, \"??\", '\"CassetteID'],\r\n      [0x0018, 0x1008, \"??\", 'GantryID'],\r\n      [0x0018, 0x1010, \"??\", 'SecondaryCaptureDeviceID'],\r\n      [0x0018, 0x1011, \"??\", 'HardcopyCreationDeviceID'],\r\n      [0x0018, 0x1012, \"??\", 'DateOfSecondaryCapture'],\r\n      [0x0018, 0x1014, \"??\", 'TimeOfSecondaryCapture'],\r\n      [0x0018, 0x1016, \"??\", 'SecondaryCaptureDeviceManufacturer'],\r\n      [0x0018, 0x1017, \"??\", 'HardcopyDeviceManufacturer'],\r\n      [0x0018, 0x1018, \"??\", 'SecondaryCaptureDeviceModelName'],\r\n      [0x0018, 0x1019, \"??\", 'SecondaryCaptureDeviceSoftwareVers'],\r\n      [0x0018, 0x101A, \"??\", 'HardcopyDeviceSoftwareVersion'],\r\n      [0x0018, 0x101B, \"??\", 'HardcopyDeviceModelName'],\r\n    \r\n      [0x0018, 0x1020, 'XX', 'SoftwareVersions'],\r\n      [0x0018, 0x1030, 'XX', 'ProtocolName'],\r\n      [0x0018, 0x1081, 'XX', '\"LowR-RValue'],\r\n      [0x0018, 0x1082, 'XX', '\"HiR-RValue'],\r\n      [0x0018, 0x1083, 'XX', '\"IntervalsAcquired'],\r\n      [0x0018, 0x1084, 'XX', '\"IntervalsRejected'],\r\n    \r\n      [0x0018, 0x1088, 'XX', 'HeartRate'],\r\n      [0x0018, 0x1090, 'XX', 'CardiacNumberOfImages'],\r\n      [0x0018, 0x1094, 'XX', 'TriggerWindow'],\r\n      [0x0018, 0x1100, 'XX', 'ReconstructionDiameter'],\r\n      [0x0018, 0x1110, 'XX', 'DistanceSourceToDetector'],\r\n      [0x0018, 0x1111, 'XX', 'DistanceSourceToPatient'],\r\n      [0x0018, 0x1115, 'XX', 'Unknown'],\r\n      [0x0018, 0x1120, 'XX', 'GantryDetectorTilt'],\r\n      [0x0018, 0x1130, 'XX', 'TableHeight'],\r\n      [0x0018, 0x1140, 'XX', 'RotationDirection'],\r\n      [0x0018, 0x1150, 'XX', 'ExposureTime'],\r\n      [0x0018, 0x1151, 'XX', 'XRayTubeCurrent'],\r\n      [0x0018, 0x1152, 'XX', 'Exposure'],\r\n      [0x0018, 0x115e, 'XX', '\"Unknown'],\r\n\r\n      [0x0018, 0x1160, 'XX', 'FilterType'],\r\n      [0x0018, 0x1164, 'XX', '\"unknown'],\r\n      [0x0018, 0x1166, 'XX', '\"unknown'],\r\n      [0x0018, 0x1168, 'XX', '\"unknown'],\r\n    \r\n      [0x0018, 0x1170, 'XX', 'GeneratorPower'],\r\n      [0x0018, 0x1180, 'XX', '\"Unknown'],\r\n      [0x0018, 0x1190, 'XX', 'FocalSpot'],\r\n      [0x0018, 0x1210, 'XX', 'ConvolutionKernel'],\r\n      [0x0018, 0x1250, 'XX', 'ReceiveCoilName'],\r\n      [0x0018, 0x1310, 'XX', 'AcquisionMatrix'],\r\n      [0x0018, 0x1312, 'XX', 'InPlanePhaseEncodingDirection'],\r\n      [0x0018, 0x1314, 'XX', 'FlipAngle'],\r\n      [0x0018, 0x1315, 'XX', 'VariableFlipAngleFlag'],\r\n      [0x0018, 0x1316, 'XX', 'SAR'],\r\n      [0x0018, 0x1400, 'XX', 'unknown'],\r\n\r\n      [0x0018, 0x1600, 'XX', '\"ShutterShape'],\r\n      [0x0018, 0x1602, 'XX', 'ShutterLeftVerticalEdge'],\r\n      [0x0018, 0x1604, 'XX', '\"ShutterRightVerticalEdge'],\r\n      [0x0018, 0x1606, 'XX', '\"ShutterUpperHorizontalEdge'],\r\n      [0x0018, 0x1608, 'XX', '\"ShutterLowerHorizontalEdge'],\r\n      [0x0018, 0x1610, 'XX', '\"CenterOfCircularShutter'],\r\n      [0x0018, 0x1612, 'XX', '\"RadiusOfCircularShutter'],\r\n      [0x0018, 0x1620, 'XX', '\"VerticesOfPolygonalShutter'],\r\n      [0x0018, 0x1622, 'XX', '\"ShutterPresentationValue'],\r\n      [0x0018, 0x1623, 'XX', '\"ShutterOverlayGroup'],\r\n      [0x0018, 0x1624, 'XX', '\"ShutterPresentationColorCIELabVal'],\r\n    \r\n      [0x0018, 0x1700, 'XX', 'Unknown'],\r\n      [0x0018, 0x1702, 'XX', 'Unknown'],\r\n      [0x0018, 0x1704, 'XX', 'Unknown'],\r\n      [0x0018, 0x1706, 'XX', 'Unknown'],\r\n      [0x0018, 0x1708, 'XX', 'Unknown'],\r\n\r\n      [0x0018, 0x4000, 'XX', '\"AcquisitionComments'],\r\n      [0x0018, 0x5000, 'XX', 'OutputPower'],\r\n      [0x0018, 0x5020, 'XX', 'Unknown'],\r\n      [0x0018, 0x5021, 'XX', '\"Unknown'],\r\n\r\n      [0x0018, 0x5100, 'XX', 'PatientPosition'],\r\n      [0x0018, 0x5101, 'XX', 'ViewPosition'],\r\n      [0x0018, 0x6000, 'XX', 'Unknown'],\r\n    \r\n      [0x0018, 0x9301, 'XX', 'CTAcquisitionTypeSequence'],\r\n      [0x0018, 0x9302, 'XX', 'AcquisitionType'],\r\n      [0x0018, 0x9303, 'XX', 'TubeAngle'],\r\n      [0x0018, 0x9304, 'XX', 'CTAcquisitionDetailsSequence'],\r\n      [0x0018, 0x9305, 'XX', 'RevolutionTime'],\r\n      [0x0018, 0x9306, 'XX', 'SingleCollimationWidth'],\r\n      [0x0018, 0x9307, 'XX', 'TotalCollimationWidth'],\r\n      [0x0018, 0x9308, 'XX', 'CTTableDynamicsSequence'],\r\n      [0x0018, 0x9309, 'XX', 'TableSpeed'],\r\n      [0x0018, 0x9310, 'XX', 'TableFeedPerRotation'],\r\n    \r\n      [0x0018, 0x9311, 'XX', 'SpiralPitchFactor'],\r\n      [0x0018, 0x9312, 'XX', 'CTGeometrySequence'],\r\n      [0x0018, 0x9313, 'XX', 'DataCollectionCenterPatient'],\r\n      [0x0018, 0x9314, 'XX', 'CTReconstructionSequence'],\r\n      [0x0018, 0x9315, 'XX', 'ReconstructionAlgorithm'],\r\n      [0x0018, 0x9316, 'XX', 'ConvolutionKernelGroup'],\r\n      [0x0018, 0x9317, 'XX', 'ReconstructionFieldOfView'],\r\n      [0x0018, 0x9318, 'XX', 'ReconstructionTargetCenterPatient'],\r\n      [0x0018, 0x9319, 'XX', 'ReconstructionAngle'],\r\n      [0x0018, 0x9320, 'XX', 'ImageFilter'],\r\n      [0x0018, 0x9321, 'XX', 'CTExposureSequenc'],\r\n      [0x0018, 0x9322, 'XX', 'ReconstructionPixelSpacing'],\r\n      [0x0018, 0x9323, 'XX', 'ExposureModulationType'],\r\n      [0x0018, 0x9324, 'XX', 'EstimatedDoseSaving'],\r\n      [0x0018, 0x9325, 'XX', 'CTXRayDetailsSequence'],\r\n      [0x0018, 0x9326, 'XX', 'CTPositionSequence'],\r\n      [0x0018, 0x9327, 'XX', 'TablePosition'],\r\n      [0x0018, 0x9328, 'XX', 'ExposureTimeInMilliSec'],\r\n      [0x0018, 0x9329, 'XX', 'CTImageFrameTypeSequence'],\r\n      [0x0018, 0x9330, 'XX', 'XRayTubeCurrentInMilliAmps'],\r\n    \r\n      [0x0019, 0x0010, 'LO', 'PrivateCreator'],\r\n      [0x0019, 0x1002, 'XX', 'NumberOfCellsInDetector'],\r\n      [0x0019, 0x1003, 'XX', 'CellsNumberAtTheta'],\r\n      [0x0019, 0x1004, 'XX', 'CellsSpacing'],\r\n      [0x0019, 0x100F, 'XX', 'HorizFrameOfRef'],\r\n      [0x0019, 0x1011, 'XX', 'SeriesContrast'],\r\n      [0x0019, 0x1012, 'XX', 'LastPSeq'],\r\n      [0x0019, 0x1013, 'XX', 'StartNumberOfBaseLine'],\r\n      [0x0019, 0x1014, 'XX', 'EndNumberOfBaseLine'],\r\n      [0x0019, 0x1015, 'XX', 'StartNumberForEnchancedScans'],\r\n      [0x0019, 0x1016, 'XX', 'EndNumberForEnchancedScans'],\r\n      [0x0019, 0x1017, 'XX', 'SeriesPlane'],\r\n      [0x0019, 0x1018, 'XX', 'FirstScanRas'],\r\n      [0x0019, 0x1019, 'XX', 'FirstScanLocation'],\r\n      [0x0019, 0x101A, 'XX', 'LastScanRas'],\r\n      [0x0019, 0x101B, 'XX', 'LastScanLoc'],\r\n      [0x0019, 0x101E, 'XX', 'DisplayFieldOfView'],\r\n      [0x0019, 0x1023, 'XX', 'TableSpeed'],\r\n      [0x0019, 0x1024, 'XX', 'MidScanTime'],\r\n      [0x0019, 0x1025, 'XX', 'MidScanFlag'],\r\n      [0x0019, 0x1026, 'XX', 'DegreesOfAzimuth'],\r\n      [0x0019, 0x1027, 'XX', 'GantryPeriod'],\r\n      [0x0019, 0x102A, 'XX', 'XRayOnPosition'],\r\n      [0x0019, 0x102B, 'XX', 'XRayOffPosition'],\r\n      [0x0019, 0x102C, 'XX', 'NumberOfTriggers'],\r\n      [0x0019, 0x102E, 'XX', 'AngleOfFirstView'],\r\n      [0x0019, 0x102F, 'XX', 'TriggerFrequency'],\r\n      [0x0019, 0x1039, 'XX', 'ScanFovType'],\r\n      [0x0019, 0x1040, 'XX', 'StatReconFlag'],\r\n      [0x0019, 0x1041, 'XX', 'ComputeType'],\r\n      [0x0019, 0x1042, 'XX', 'SegmentNumber'],\r\n      [0x0019, 0x1043, 'XX', 'TotalSegmentsRequested'],\r\n      [0x0019, 0x1044, 'XX', 'InterscanDelay'],\r\n      [0x0019, 0x1047, 'XX', 'ViewCompressionFactor'],\r\n      [0x0019, 0x104A, 'XX', 'TotalNoOfRefChannels'],\r\n      [0x0019, 0x104B, 'XX', 'DataSizeForScanData'],\r\n      [0x0019, 0x1052, 'XX', 'ReconPostProcflag'],\r\n      [0x0019, 0x1057, 'XX', 'CTWaterNumber'],\r\n      [0x0019, 0x1058, 'XX', 'CTBoneNumber'],\r\n      [0x0019, 0x105A, 'XX', 'AcquisitionDuration'],\r\n      [0x0019, 0x105E, 'XX', 'NumberOfChannels'],\r\n      [0x0019, 0x105F, 'XX', 'IncrementBetweenChannels'],\r\n      [0x0019, 0x1060, 'XX', 'StartingView'],\r\n      [0x0019, 0x1061, 'XX', 'NumberOfViews'],\r\n      [0x0019, 0x1062, 'XX', 'IncrementBetweenViews'],\r\n      [0x0019, 0x106A, 'XX', 'DependantOnNoViewsProcessed'],\r\n      [0x0019, 0x107D, 'DS', 'SecondEcho'],\r\n      [0x0019, 0x107E, 'SS', 'NumberOfEchoes'],\r\n      [0x0019, 0x107F, 'DS', 'TableDelta'],\r\n      [0x0019, 0x1081, 'SS', 'Contiguous'],\r\n      [0x0019, 0x1084, 'DS', 'PeakSAR'],\r\n      [0x0019, 0x1087, 'DS', 'CardiacRepetitionTime'],\r\n      [0x0019, 0x1088, 'SS', 'ImagesPerCardiacCycle'],\r\n      [0x0019, 0x108A, 'SS', 'ActualReceiveGainAnalog'],\r\n      [0x0019, 0x108B, 'SS', 'ActualReceiveGainDigital'],\r\n      [0x0019, 0x108D, 'DS', 'DelayAfterTrigger'],\r\n      [0x0019, 0x108F, 'SS', 'Swappf'],\r\n      [0x0019, 0x1090, 'SS', 'PauseInterval'],\r\n      [0x0019, 0x1091, 'DS', 'PulseTime'],\r\n      [0x0019, 0x1092, 'SL', 'SliceOffsetOnFreqAxis'],\r\n      [0x0019, 0x1093, 'DS', 'CenterFrequency'],\r\n      [0x0019, 0x1094, 'SS', 'TransmitGain'],\r\n      [0x0019, 0x1095, 'SS', 'AnalogReceiverGain'],\r\n      [0x0019, 0x1096, 'SS', 'DigitalReceiverGain'],\r\n      [0x0019, 0x1097, 'SL', 'BitmapDefiningCVs'],\r\n      [0x0019, 0x109B, 'SS', 'PulseSeqMode'],\r\n      [0x0019, 0x109C, 'LO', 'PulseSeqName'],\r\n      [0x0019, 0x109D, 'DT', 'PulseSeqDate'],\r\n      [0x0019, 0x109E, 'LO', 'InternalPulseSeqName'],\r\n      [0x0019, 0x109F, 'SS', 'TransmittingCoil'],\r\n      [0x0019, 0x10A0, 'SS', 'SurfaceCoilType'],\r\n      [0x0019, 0x10A1, 'SS', 'ExtremityCoilFlag'],\r\n      [0x0019, 0x10A2, 'SL', 'RawDataRunNumber'],\r\n      [0x0019, 0x10A3, 'UL', 'CalibratedFieldStrength'],\r\n      [0x0019, 0x10A4, 'SS', 'SATFatWaterBone'],\r\n      [0x0019, 0x10A7, 'DS', 'UserData01'],\r\n      [0x0019, 0x10A8, 'DS', 'UserData02'],\r\n      [0x0019, 0x10A9, 'DS', 'UserData03'],\r\n      [0x0019, 0x10AA, 'DS', 'UserData04'],\r\n      [0x0019, 0x10AB, 'DS', 'UserData05'],\r\n      [0x0019, 0x10AC, 'DS', 'UserData06'],\r\n      [0x0019, 0x10AD, 'DS', 'UserData07'],\r\n      [0x0019, 0x10AE, 'DS', 'UserData08'],\r\n      [0x0019, 0x10AF, 'DS', 'UserData09'],\r\n      [0x0019, 0x10B0, 'DS', 'UserData10'],\r\n      [0x0019, 0x10B1, 'DS', 'UserData11'],\r\n      [0x0019, 0x10B2, 'DS', 'UserData12'],\r\n      [0x0019, 0x10B3, 'DS', 'UserData13'],\r\n      [0x0019, 0x10B4, 'DS', 'UserData14'],\r\n      [0x0019, 0x10B5, 'DS', 'UserData15'],\r\n      [0x0019, 0x10B6, 'DS', 'UserData16'],\r\n      [0x0019, 0x10B7, 'DS', 'UserData17'],\r\n      [0x0019, 0x10B8, 'DS', 'UserData18'],\r\n      [0x0019, 0x10B9, 'DS', 'UserData19'],\r\n      [0x0019, 0x10BA, 'DS', 'UserData20'],\r\n      [0x0019, 0x10BB, 'DS', 'UserData21'],\r\n      [0x0019, 0x10BC, 'DS', 'UserData22'],\r\n      [0x0019, 0x10BD, 'DS', 'UserData23'],\r\n      [0x0019, 0x10BE, 'DS', 'ProjectionAngle'],\r\n      [0x0019, 0x10C0, 'SS', 'SaturationPlanes'],\r\n      [0x0019, 0x10C2, 'SS', 'SATLocationR'],\r\n      [0x0019, 0x10C3, 'SS', 'SATLocationL'],\r\n      [0x0019, 0x10C4, 'SS', 'SATLocationA'],\r\n      [0x0019, 0x10C5, 'SS', 'SATLocationP'],\r\n      [0x0019, 0x10C6, 'SS', 'SATLocationH'],\r\n      [0x0019, 0x10C7, 'SS', 'SATLocationF'],\r\n      [0x0019, 0x10C8, 'SS', 'SATThicknessR-L'],\r\n      [0x0019, 0x10C9, 'SS', 'SATThicknessA-P'],\r\n      [0x0019, 0x10CA, 'SS', 'SATThicknessH-F'],\r\n      [0x0019, 0x10CB, 'SS', 'PrescribedFlowAxis'],\r\n      [0x0019, 0x10CC, 'SS', 'VelocityEncoding'],\r\n      [0x0019, 0x10CD, 'SS', 'ThicknessDisclaimer'],\r\n      [0x0019, 0x10CE, 'SS', 'PrescanType'],\r\n      [0x0019, 0x10CF, 'SS', 'PrescanStatus'],\r\n      [0x0019, 0x10D2, 'SS', 'ProjectionAlgorithm'],\r\n      [0x0019, 0x10D3, 'SH', 'ProjectionAlgorithm'],\r\n      [0x0019, 0x10D5, 'SS', 'FractionalEcho'],\r\n      [0x0019, 0x10D7, 'SS', 'CardiacPhases'],\r\n      [0x0019, 0x10D8, 'SS', 'VariableEchoflag'],\r\n      [0x0019, 0x10D9, 'DS', 'ConcatenatedSAT'],\r\n      [0x0019, 0x10DF, 'DS', 'UserData'],\r\n      [0x0019, 0x10E0, 'DS', 'UserData'],\r\n      [0x0019, 0x10E2, 'DS', 'VelocityEncodeScale'],\r\n      [0x0019, 0x10F2, 'SS', 'FastPhases'],\r\n      [0x0019, 0x10F9, 'DS', 'TransmissionGain'],\r\n\r\n      [0x0020, 0x0000, 'UL', 'RelationshipGroupLength'],\r\n      [0x0020, 0x000D, 'UI', 'StudyInstanceID'],\r\n      [0x0020, 0x000E, 'UI', 'SeriesInstanceID'],\r\n      [0x0020, 0x0010, 'IS', 'StudyID'],\r\n      [0x0020, 0x0011, 'IS', 'SeriesNumber'],\r\n      [0x0020, 0x0012, 'IS', 'AcquisionNumber'],\r\n      [0x0020, 0x0013, 'IS', 'ImageNumber'],\r\n      [0x0020, 0x0020, 'IS', 'PatientOrientation'],\r\n      [0x0020, 0x0032, 'DS', 'ImagePosition'],\r\n      [0x0020, 0x0037, 'DS', 'ImageOrientation'],\r\n      [0x0020, 0x0040, 'XX', 'PositionReferenceIndicator'],\r\n      [0x0020, 0x0041, 'XX', 'SliceLocation'],\r\n      [0x0020, 0x0052, 'UI', 'FrameOfRefefernceID'],\r\n      [0x0020, 0x0060, 'XX', 'Laterality'],\r\n      [0x0020, 0x1002, 'XX', 'ImagesInAcquision'],\r\n      [0x0020, 0x1040, 'LO', 'PositionReferenceIndicator'],\r\n      [0x0020, 0x1041, 'DS', 'SliceLocation'],\r\n      [0x0020, 0x9056, 'XX', 'StackId'],\r\n      [0x0020, 0x9057, 'XX', 'InStackPositionNumber'],\r\n\r\n      [0x0021, 0x0010, 'LO', 'PrivateCreator'],\r\n      [0x0021, 0x1003, 'XX', 'SeriesFromWhichPrescribed'],\r\n      [0x0021, 0x1005, 'XX', 'GenesisVersionNow'],\r\n      [0x0021, 0x1007, 'XX', 'SeriesRecordChecksum'],\r\n      [0x0021, 0x1018, 'XX', 'GenesisVersionNow'],\r\n      [0x0021, 0x1019, 'XX', 'AcqreconRecordChecksum'],\r\n      [0x0021, 0x1020, 'XX', 'TableStartLocation'],\r\n      [0x0021, 0x1035, 'XX', 'SeriesFromWhichPrescribed'],\r\n      [0x0021, 0x1036, 'XX', 'ImageFromWhichPrescribed'],\r\n      [0x0021, 0x1037, 'XX', 'ScreenFormat'],\r\n      [0x0021, 0x104A, 'XX', 'AnatomicalReferenceForScout'],\r\n      [0x0021, 0x104F, 'XX', 'LocationsInAcquisition'],\r\n      [0x0021, 0x1050, 'XX', 'GraphicallyPrescribed'],\r\n      [0x0021, 0x1051, 'XX', 'RotationFromSourceXRot'],\r\n      [0x0021, 0x1052, 'XX', 'RotationFromSourceYRot'],\r\n      [0x0021, 0x1053, 'XX', 'RotationFromSourceZRot'],\r\n      [0x0021, 0x1054, 'XX', 'ImagePosition'],\r\n      [0x0021, 0x1055, 'XX', 'ImageOrientation'],\r\n      [0x0021, 0x1056, 'XX', 'IntegerSlop'],\r\n      [0x0021, 0x1057, 'XX', 'IntegerSlop'],\r\n      [0x0021, 0x1058, 'XX', 'IntegerSlop'],\r\n      [0x0021, 0x1059, 'XX', 'IntegerSlop'],\r\n      [0x0021, 0x105A, 'XX', 'IntegerSlop'],\r\n      [0x0021, 0x105B, 'XX', 'FloatSlop'],\r\n      [0x0021, 0x105C, 'XX', 'FloatSlop'],\r\n      [0x0021, 0x105D, 'XX', 'FloatSlop'],\r\n      [0x0021, 0x105E, 'XX', 'FloatSlop'],\r\n      [0x0021, 0x105F, 'XX', 'FloatSlop'],\r\n      [0x0021, 0x1081, 'XX', 'AutoWindowLevelAlpha'],\r\n      [0x0021, 0x1082, 'XX', 'AutoWindowLevelBeta'],\r\n      [0x0021, 0x1083, 'XX', 'AutoWindowLevelWindow'],\r\n      [0x0021, 0x1084, 'XX', 'ToWindowLevelLevel'],\r\n      [0x0021, 0x1090, 'XX', 'TubeFocalSpotPosition'],\r\n      [0x0021, 0x1091, 'XX', 'BiopsyPosition'],\r\n      [0x0021, 0x1092, 'XX', 'BiopsyTLocation'],\r\n      [0x0021, 0x1093, 'XX', 'BiopsyRefLocation'],\r\n\r\n      [0x0023, 0x0010, 'LO', 'PrivateCreator'],\r\n      [0x0023, 0x1001, 'XX', 'NumberOfSeriesInStudy'],\r\n      [0x0023, 0x1002, 'XX', 'NumberOfUnarchivedSeries'],\r\n      [0x0023, 0x1010, 'XX', 'ReferenceImageField'],\r\n      [0x0023, 0x1050, 'XX', 'SummaryImage'],\r\n      [0x0023, 0x1070, 'XX', 'StartTimeSecsInFirstAxial'],\r\n      [0x0023, 0x1074, 'SL', 'NoofUpdatesToHeader'],\r\n      [0x0023, 0x107d, 'SS', 'IndicatesIfTheStudyHasCompleteInfo'],\r\n      [0x0023, 0x1080, 'LO', 'CRFilmFormat'],\r\n\r\n      [0x0025, 0x0010, 'LO', 'PrivateCreator'],\r\n      [0x0025, 0x1006, 'SS', 'LastPulseSequenceUsed'],\r\n      [0x0025, 0x1007, 'SL', 'ImagesInSeries'],\r\n      [0x0025, 0x1010, 'SL', 'LandmarkCounter'],\r\n      [0x0025, 0x1011, 'SS', 'NumberOfAcquisitions'],\r\n      [0x0025, 0x1014, 'SL', 'IndicatesNoofUpdatesToHeader'],\r\n      [0x0025, 0x1017, 'SL', 'SeriesCompleteFlag'],\r\n      [0x0025, 0x1018, 'SL', 'NumberOfImagesArchived'],\r\n      [0x0025, 0x1019, 'SL', 'LastImageNumberUsed'],\r\n      [0x0025, 0x101A, 'SH', 'PrimaryReceiverSuiteAndHost'],\r\n      [0x0025, 0x101B, 'OB', 'ProtocolDataBlock'],\r\n\r\n      [0x0027, 0x0010, 'LO', 'PrivateCreator'],\r\n      [0x0027, 0x1006, 'XX', 'ImageArchiveFlag'],\r\n      [0x0027, 0x1010, 'XX', 'ScoutType'],\r\n      [0x0027, 0x101C, 'XX', 'VmaMamp'],\r\n      [0x0027, 0x101D, 'XX', 'VmaPhase'],\r\n      [0x0027, 0x101E, 'XX', 'VmaMod'],\r\n      [0x0027, 0x101F, 'XX', 'VmaClip'],\r\n      [0x0027, 0x1020, 'XX', 'SmartScanOnOffFlag'],\r\n      [0x0027, 0x1030, 'XX', 'ForeignImageRevision'],\r\n      [0x0027, 0x1031, 'XX', 'ImagingMode'],\r\n      [0x0027, 0x1032, 'XX', 'PulseSequence'],\r\n      [0x0027, 0x1033, 'XX', 'ImagingOptions'],\r\n      [0x0027, 0x1035, 'XX', 'PlaneType'],\r\n      [0x0027, 0x1036, 'XX', 'ObliquePlane'],\r\n      [0x0027, 0x1040, 'XX', 'RASLetterOfImageLocation'],\r\n      [0x0027, 0x1041, 'XX', 'ImageLocation'],\r\n      [0x0027, 0x1042, 'XX', 'CenterRCoordOfPlaneImage'],\r\n      [0x0027, 0x1043, 'XX', 'CenterACoordOfPlaneImage'],\r\n      [0x0027, 0x1044, 'XX', 'CenterSCoordOfPlaneImage'],\r\n      [0x0027, 0x1045, 'XX', 'NormalRCoord'],\r\n      [0x0027, 0x1046, 'XX', 'NormalACoord'],\r\n      [0x0027, 0x1047, 'XX', 'NormalSCoord'],\r\n      [0x0027, 0x1048, 'XX', 'RCoordOfTopRightCorner'],\r\n      [0x0027, 0x1049, 'XX', 'ACoordOfTopRightCorner'],\r\n      [0x0027, 0x104A, 'XX', 'SCoordOfTopRightCorner'],\r\n      [0x0027, 0x104B, 'XX', 'RCoordOfBottomRightCorner'],\r\n      [0x0027, 0x104C, 'XX', 'ACoordOfBottomRightCorner'],\r\n      [0x0027, 0x104D, 'XX', 'SCoordOfBottomRightCorner'],\r\n      [0x0027, 0x1050, 'XX', 'TableStartLocation'],\r\n      [0x0027, 0x1051, 'XX', 'TableEndLocation'],\r\n      [0x0027, 0x1060, 'FL', 'ImageDimensionX'],\r\n      [0x0027, 0x1061, 'FL', 'ImageDimensionY'],\r\n      [0x0027, 0x1062, 'FL', 'NumberOfExcitations'],\r\n\r\n      [0x0028, 0x0000, 'UL', 'ImagePresentationGroupLength'],\r\n      [0x0028, 0x0002, 'US', 'SamplesPerPixel'],\r\n      [0x0028, 0x0004, 'CS', 'PhotometricInterpretation'],\r\n      [0x0028, 0x0006, 'US', 'Planar​Configuration'],\r\n      [0x0028, 0x0008, 'XX', 'NumberOfFrames'],\r\n      [0x0028, 0x0010, 'US', 'Rows'],\r\n      [0x0028, 0x0011, 'US', 'Columns'],\r\n      [0x0028, 0x0030, 'DS', 'PixelSpacing'],\r\n      [0x0028, 0x0100, 'US', 'BitsAllocated'],\r\n      [0x0028, 0x0101, 'US', 'BitsStored'],\r\n      [0x0028, 0x0102, 'US', 'HighBit'],\r\n      [0x0028, 0x0103, 'US', 'PixelRepresentation'],\r\n      [0x0028, 0x0106, 'XX', 'SmallestImagePixelValue'],\r\n      [0x0028, 0x0107, 'XX', 'LargestImagePixelValue'],\r\n      [0x0028, 0x0120, 'US', 'PixelAddingValue'],\r\n      [0x0028, 0x0301, 'CS', 'BurnderInAnnotation'],\r\n      [0x0028, 0x0303, 'CS', 'Longitudinal​Temporal​Information​Modified'],\r\n      [0x0028, 0x1050, 'DS', 'WindowCenter'],\r\n      [0x0028, 0x1051, 'DS', 'WindowWidth'],\r\n      [0x0028, 0x1052, 'DS', 'RescaleIntercept'],\r\n      [0x0028, 0x1053, 'DS', 'RescaleSlope'],\r\n      [0x0028, 0x1054, 'LO', 'RescaleType'],\r\n      [0x0028, 0x1055, 'LO', 'Window​Center​Width​Explanation'],\r\n\r\n      [0x0029, 0x0010, 'LO', 'PrivateCreator'],\r\n      [0x0029, 0x1015, 'SL', 'LowerRangeOfPixels1h'],\r\n      [0x0029, 0x1016, 'SL', 'LowerRangeOfPixels1i'],\r\n      [0x0029, 0x1017, 'SL', 'LowerRangeOfPixels2'],\r\n      [0x0029, 0x1018, 'SL', 'UpperRangeOfPixels2'],\r\n      [0x0029, 0x1026, 'SS', 'VersionOfTheHdrStruct'],\r\n      [0x0029, 0x1031, 'LO', 'PrivateTag'],\r\n      [0x0029, 0x1032, 'UL', 'PrivateTag'],\r\n      [0x0029, 0x1033, 'UL', 'PrivateTag'],\r\n      [0x0029, 0x1034, 'SL', 'AdvantageCompOverflow'],\r\n      [0x0029, 0x1035, 'SL', 'AdvantageCompUnderflow'],\r\n\r\n      [0x0032, 0x0000, 'UL', 'StudyGroupLength'],\r\n      [0x0032, 0x000c, 'XX', 'StrudyPriorityId'],\r\n      [0x0032, 0x1020, 'XX', 'ScheduledStudyLocation'],\r\n      [0x0032, 0x1030, 'XX', 'ReasonForStudy'],\r\n      [0x0032, 0x1060, 'XX', 'RequestedProcedureDescription'],\r\n\r\n      [0x0038, 0x0010, 'XX', 'AdmissionId'],\r\n      [0x0038, 0x0050, 'XX', 'SpecialNeeds'],\r\n      [0x0038, 0x0500, 'XX', 'PatientState'],\r\n    \r\n      [0x0040, 0x0000, 'UL', 'TextGroupLength'],\r\n      [0x0040, 0x0242, 'XX', 'PerformedStationName'],\r\n      [0x0040, 0x0243, 'XX', 'PerformedLocation'],\r\n      [0x0040, 0x0244, 'XX', 'PerformedProcedureStepStartDate'],\r\n      [0x0040, 0x0245, 'XX', 'PerformedProcedureStepStartTime'],\r\n      [0x0040, 0x0253, 'XX', 'PerformedProcedureStepId'],\r\n      [0x0040, 0x0254, 'XX', 'PerformedProcedureStepDescription'],\r\n      [0x0040, 0x0255, 'LO', 'PerformedProcedureTypeDescription'],\r\n      [0x0040, 0x0280, 'XX', '\"CommentsOnPerformedProcedureStep'],\r\n      [0x0040, 0x0321, 'XX', 'FilmConsumptionSequence'],\r\n    \r\n      [0x0040, 0x1001, 'XX', 'RequestedProcedureId'],\r\n      [0x0040, 0x1002, 'XX', 'Unknown'],\r\n      [0x0040, 0x1003, 'XX', 'Unknown'],\r\n      [0x0040, 0x1004, 'XX', 'PatientTransportArrangments'],\r\n      [0x0040, 0x1005, 'XX', 'RequestedProcedureLocation'],\r\n      [0x0040, 0x1010, 'XX', 'NamesOfIntendentRecipientsOfResults'],\r\n      [0x0040, 0x1400, 'XX', 'RequestedProcedureComments'],\r\n\r\n      [0x0040, 0x2400, 'XX', 'ImagingServiceRequestComments'],\r\n      [0x0040, 0x3001, 'XX', 'Unknown'],\r\n    \r\n      [0x0043, 0x0010, 'LO', 'PrivateCreator'],\r\n      [0x0043, 0x1001, 'XX', 'BitmapOfPrescanOptions'],\r\n      [0x0043, 0x1002, 'XX', 'GradientOffsetInX'],\r\n      [0x0043, 0x1003, 'XX', 'GradientOffsetInY'],\r\n      [0x0043, 0x1004, 'XX', 'GradientOffsetInZ'],\r\n      [0x0043, 0x1005, 'XX', 'ImgIsOriginalOrUnoriginal'],\r\n      [0x0043, 0x1006, 'XX', 'NumberOfEPIShots'],\r\n      [0x0043, 0x1007, 'XX', 'ViewsPerSegment'],\r\n      [0x0043, 0x1008, 'XX', 'RespiratoryRateBpm'],\r\n      [0x0043, 0x1009, 'XX', 'RespiratoryTriggerPoint'],\r\n      [0x0043, 0x100A, 'XX', 'TypeOfReceiverUsed'],\r\n      [0x0043, 0x100B, 'XX', 'PeakRateOfChangeOfGradientField'],\r\n      [0x0043, 0x100C, 'XX', 'LimitsInUnitsOfPercent'],\r\n      [0x0043, 0x100D, 'XX', 'PSDEstimatedLimit'],\r\n      [0x0043, 0x100E, 'XX', 'PSDEstimatedLimitInTeslaPerSecond'],\r\n      [0x0043, 0x100F, 'XX', 'Saravghead'],\r\n      [0x0043, 0x1010, 'XX', 'WindowValue'],\r\n      [0x0043, 0x1011, 'XX', 'TotalInputViews'],\r\n      [0x0043, 0x1012, 'XX', 'XRayChain'],\r\n      [0x0043, 0x1013, 'XX', 'DeconKernelParameters'],\r\n      [0x0043, 0x1014, 'XX', 'CalibrationParameters'],\r\n      [0x0043, 0x1015, 'XX', 'TotalOutputViews'],\r\n      [0x0043, 0x1016, 'XX', 'NumberOfOverranges'],\r\n      [0x0043, 0x1017, 'XX', 'IBHImageScaleFactors'],\r\n      [0x0043, 0x1018, 'XX', 'BBHCoefficients'],\r\n      [0x0043, 0x1019, 'XX', 'NumberOfBBHChainsToBlend'],\r\n      [0x0043, 0x101A, 'XX', 'StartingChannelNumber'],\r\n      [0x0043, 0x101B, 'XX', 'PpscanParameters'],\r\n      [0x0043, 0x101C, 'XX', 'GEImageIntegrity'],\r\n      [0x0043, 0x101D, 'XX', 'LevelValue'],\r\n      [0x0043, 0x101E, 'XX', 'DeltaStartTime'],\r\n      [0x0043, 0x101F, 'XX', 'MaxOverrangesInAView'],\r\n      [0x0043, 0x1020, 'XX', 'AvgOverrangesAllViews'],\r\n      [0x0043, 0x1021, 'XX', 'CorrectedAfterGlowTerms'],\r\n      [0x0043, 0x1025, 'XX', 'ReferenceChannels'],\r\n      [0x0043, 0x1026, 'XX', 'NoViewsRefChansBlocked'],\r\n      [0x0043, 0x1027, 'XX', 'ScanPitchRatio'],\r\n      [0x0043, 0x1028, 'XX', 'UniqueImageIden'],\r\n      [0x0043, 0x1029, 'XX', 'HistogramTables'],\r\n      [0x0043, 0x102A, 'XX', 'UserDefinedData'],\r\n      [0x0043, 0x102B, 'XX', 'PrivateScanOptions'],\r\n      [0x0043, 0x102C, 'XX', 'EffectiveEchoSpacing'],\r\n      [0x0043, 0x102D, 'XX', 'StringSlopField1'],\r\n      [0x0043, 0x102E, 'XX', 'StringSlopField2'],\r\n      [0x0043, 0x102F, 'XX', 'RawDataType'],\r\n      [0x0043, 0x1030, 'XX', 'RawDataType'],\r\n      [0x0043, 0x1031, 'XX', 'RACordOfTargetReconCenter'],\r\n      [0x0043, 0x1032, 'XX', 'RawDataType'],\r\n      [0x0043, 0x1033, 'XX', 'NegScanspacing'],\r\n      [0x0043, 0x1034, 'XX', 'OffsetFrequency'],\r\n      [0x0043, 0x1035, 'XX', 'UserUsageTag'],\r\n      [0x0043, 0x1036, 'XX', 'UserFillMapMSW'],\r\n      [0x0043, 0x1037, 'XX', 'UserFillMapLSW'],\r\n      [0x0043, 0x1038, 'XX', 'User25_48'],\r\n      [0x0043, 0x1039, 'XX', 'SlopInt6_9'],\r\n      [0x0043, 0x1040, 'XX', 'TriggerOnPosition'],\r\n      [0x0043, 0x1041, 'XX', 'DegreeOfRotation'],\r\n      [0x0043, 0x1042, 'XX', 'DASTriggerSource'],\r\n      [0x0043, 0x1043, 'XX', 'DASFpaGain'],\r\n      [0x0043, 0x1044, 'XX', 'DASOutputSource'],\r\n      [0x0043, 0x1045, 'XX', 'DASAdInput'],\r\n      [0x0043, 0x1046, 'XX', 'DASCalMode'],\r\n      [0x0043, 0x1047, 'XX', 'DASCalFrequency'],\r\n      [0x0043, 0x1048, 'XX', 'DASRegXm'],\r\n      [0x0043, 0x1049, 'XX', 'DASAutoZero'],\r\n      [0x0043, 0x104A, 'XX', 'StartingChannelOfView'],\r\n      [0x0043, 0x104B, 'XX', 'DASXmPattern'],\r\n      [0x0043, 0x104C, 'XX', 'TGGCTriggerMode'],\r\n      [0x0043, 0x104D, 'XX', 'StartScanToXrayOnDelay'],\r\n      [0x0043, 0x104E, 'XX', 'DurationOfXrayOn'],\r\n      [0x0043, 0x1060, 'XX', 'SlopInt10_17'],\r\n      [0x0043, 0x1061, 'XX', 'ScannerStudyEntityUID'],\r\n      [0x0043, 0x1062, 'XX', 'ScannerStudyID'],\r\n      [0x0043, 0x106F, 'XX', 'ScannerTableEntry'],\r\n      [0x0043, 0x107D, 'US', 'ReconModeFlagWord '],\r\n      [0x0043, 0x1080, 'LO', 'CoilIDData'],\r\n      [0x0043, 0x1081, 'LO', 'GECoilName'],\r\n      [0x0043, 0x1082, 'LO', 'SystemConfigurationInformation'],\r\n      [0x0043, 0x1083, 'DS', 'AssetRFactors'],\r\n      [0x0043, 0x1084, 'LO', 'AdditionalAssetData'],\r\n      [0x0043, 0x1089, 'LO', 'GoverningBodyAndSARDefinition'],\r\n      [0x0043, 0x108A, 'CS', 'PrivateInPlanePhaseEncodingDirection'],\r\n      [0x0043, 0x1090, 'LO', 'SARDefinition'],\r\n      [0x0043, 0x1091, 'DS', 'SARValue'],\r\n      [0x0043, 0x1095, 'LO', 'PrescanReuseString'],\r\n      [0x0043, 0x1096, 'CS', 'ContentQualification'],\r\n      [0x0043, 0x1097, 'LO', 'ImageFilteringParameters'],\r\n      [0x0043, 0x109A, 'IS', 'RxStackIdentification'],\r\n      [0x0043, 0x10AA, 'LO', 'AdditionalFilteringParameters'],\r\n      [0x0043, 0x10B1, 'SS', 'ExcitationMode'],\r\n\r\n      [0x0045, 0x0010, 'LO', 'PrivateCreator'],\r\n      [0x0045, 0x1001, 'XX', 'NumberOfMacroRowsInDetector'],\r\n      [0x0045, 0x1002, 'XX', 'MacroWidthAtISOCenter'],\r\n      [0x0045, 0x1003, 'XX', 'DASType'],\r\n      [0x0045, 0x1004, 'XX', 'DASGain'],\r\n      [0x0045, 0x1006, 'XX', 'TableDirectionInOrOut'],\r\n      [0x0045, 0x1007, 'XX', 'ZSmoothingFactor'],\r\n      [0x0045, 0x1008, 'XX', 'ViewWeightingMode'],\r\n      [0x0045, 0x1009, 'XX', 'SigmaRowNumberWhichRowsWereUsed'],\r\n      [0x0045, 0x100A, 'XX', 'MinimumDasValueFoundInTheScanData'],\r\n      [0x0045, 0x100B, 'XX', 'MaximumOffsetShiftValueUsed'],\r\n      [0x0045, 0x100C, 'XX', 'NumberOfViewsShifted'],\r\n      [0x0045, 0x100D, 'XX', 'ZTrackingFlag'],\r\n      [0x0045, 0x100E, 'XX', 'MeanZError'],\r\n      [0x0045, 0x100F, 'XX', 'ZTrackingMaximumError'],\r\n      [0x0045, 0x1010, 'XX', 'StartingViewForRow2a'],\r\n      [0x0045, 0x1011, 'XX', 'NumberOfViewsInRow2a'],\r\n      [0x0045, 0x1012, 'XX', 'StartingViewForRow1a'],\r\n      [0x0045, 0x1013, 'XX', 'SigmaMode'],\r\n      [0x0045, 0x1014, 'XX', 'NumberOfViewsInRow1a'],\r\n      [0x0045, 0x1015, 'XX', 'StartingViewForRow2b'],\r\n      [0x0045, 0x1016, 'XX', 'NumberOfViewsInRow2b'],\r\n      [0x0045, 0x1017, 'XX', 'StartingViewForRow1b'],\r\n      [0x0045, 0x1018, 'XX', 'NumberOfViewsInRow1b'],\r\n      [0x0045, 0x1021, 'XX', 'PrivateTag'],\r\n      [0x0045, 0x1022, 'XX', 'PrivateTag'],\r\n      [0x0045, 0x1032, 'XX', 'PrivateTag'],\r\n\r\n\r\n      [0x0053, 0x0010, 'LO', 'PrivateCreator'],\r\n      [0x0053, 0x1020, 'XX', 'PrivateTag'],\r\n      [0x0053, 0x1040, 'XX', 'PrivateTag'],\r\n      [0x0053, 0x1041, 'XX', 'PrivateTag'],\r\n      [0x0053, 0x1042, 'XX', 'PrivateTag'],\r\n      [0x0053, 0x1043, 'XX', 'PrivateTag'],\r\n      [0x0053, 0x1062, 'XX', 'PrivateTag'],\r\n\r\n      [0x0088, 0x0140, 'XX', 'StorageMediaFileSetUid'],\r\n      [0x0088, 0x0200, 'XX', 'IconImageSequence'],\r\n\r\n      [0x2001, 0x1003, 'XX', 'Unknown'],\r\n      [0x2001, 0x100a, 'XX', 'Unknown'],\r\n      [0x2001, 0x106e, 'XX', 'Unknown'],\r\n      [0x2005, 0x0012, 'XX', 'Unknown'],\r\n      [0x2005, 0x0013, 'XX', 'Unknown'],\r\n      [0x2005, 0x0014, 'XX', 'Unknown'],\r\n      [0x2005, 0x1213, 'XX', 'Unknown'],\r\n      [0x2005, 0x1406, 'XX', 'Unknown'],\r\n\r\n      [0x5533, 0x1203, 'XX', '\"Unknown'],\r\n      [0x5533, 0x5511, 'XX', '\"Unknown'],\r\n\r\n      [0x7fe0, 0x0000, 'IM', 'PixelDataGroupLength'],\r\n      [0x7fe0, 0x0010, 'IM', 'PixelData'],\r\n      /* eslint-enable */\r\n    ];\r\n  } // constructor\r\n\r\n  /**\r\n  * Get vr string code from group + element codes\r\n  * @param {number} group - group of the tag\r\n  * @param {number} element - element of the tag\r\n  * return {string} vr\r\n  */\r\n  getVr(group, element) {\r\n    let vr = '';\r\n    const numTags = this.TAGS.length;\r\n    for (let i = 0; i < numTags; i++) {\r\n      if ((this.TAGS[i][0] === group) && (this.TAGS[i][1] === element)) {\r\n        vr = this.TAGS[i][2];\r\n      }\r\n    } // for (i) all\r\n    if (element === 0) {\r\n      vr = 'UL';\r\n    }\r\n    return vr;\r\n  } // get VR\r\n\r\n  /**\r\n  * Get descripotion string  from group + element codes\r\n  * @param {number} group - group of the tag\r\n  * @param {number} element - element of the tag\r\n  * return {string} description\r\n  */\r\n  getTextDesc(group, element) {\r\n    let tagDesc = '?';\r\n    const numTags = this.TAGS.length;\r\n    for (let i = 0; i < numTags; i++) {\r\n      if ((this.TAGS[i][0] === group) && (this.TAGS[i][1] === element)) {\r\n        tagDesc = this.TAGS[i][3];\r\n      }\r\n    } // for (i) all\r\n    return tagDesc;\r\n  } // get tag text description\r\n}\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Dicom info\r\n* @module lib/scripts/loaders/dicominfo\r\n*/\r\n\r\n/**\r\n* Class @class DicomInfo for volume some important text data render\r\n*/\r\nclass DicomInfo {\r\n  constructor() {\r\n    this.m_patientName = '';\r\n    this.m_patientDateOfBirth = '';\r\n    this.m_studyDescr = '';\r\n    this.m_studyDate = '';\r\n    this.m_seriesTime = '';\r\n    this.m_seriesDescr = '';\r\n    this.m_bodyPartExamined = '';\r\n    this.m_institutionName = '';\r\n    this.m_operatorsName = '';\r\n    this.m_physicansName = '';\r\n\r\n    this.m_patientId = '';\r\n    this.m_patientGender = '';\r\n    this.m_acquisionTime = '';\r\n    this.m_manufacturerName = '';\r\n    // tags info for each slice. Each entry is DicomSliceInfo\r\n    this.m_sliceInfo = [];\r\n  }\r\n}\r\n\r\nexport default DicomInfo;\r\n","\r\n\r\n// *****************************************************************\r\n// Const \r\n// *****************************************************************\r\n\r\nconst TAG_TRANSFER_SYNTAX = [0x0002, 0x0010];\r\nconst TAG_META_LENGTH = [0x0002, 0x0000];\r\nconst TAG_PIXEL_DATA = [0x7FE0, 0x0010];\r\n\r\n/**\r\n* class DicomTag is used for parse tags inside dicom file structure\r\n*/\r\nclass DicomTag {\r\n  /**\r\n   * @param {number} group - group in pair group:element\r\n   * @param {number} element - element in pair group:element\r\n   * @param {string} vr - special string for tag\r\n   * @param {object} value - tag value: data array\r\n   * @param {number} offsetStart - start of tag\r\n   * @param {number} offsetValue - offset value\r\n   * @param {number} offsetEnd - offset in stream\r\n   * @param {number} littleEndian - is in little endian mode numbers encoding\r\n   */\r\n  constructor(group,\r\n    element,\r\n    vr,\r\n    value,\r\n    offsetStart,\r\n    offsetValue,\r\n    offsetEnd,\r\n    littleEndian) {\r\n    /** @property {number} m_group - group for group:element pair */\r\n    this.m_group = group;\r\n    /** @property {number} m_element - element for group:element pair */\r\n    this.m_element = element;\r\n    /** @property {string} m_vr - special VR text for tag */\r\n    this.m_vr = vr;\r\n    /** @property {object} m_value - array with content */\r\n    this.m_value = value;\r\n    /** @property {number} m_offsetStart - start of tag */\r\n    this.m_offsetStart = offsetStart;\r\n    /** @property {number} m_offsetValue - value of tag */\r\n    this.m_offsetValue = offsetValue;\r\n    /** @property {number} m_offsetEnd - end of tag */\r\n    this.m_offsetEnd = offsetEnd;\r\n    /** @property {number} m_littleEndian - is in big/little endian */\r\n    this.m_littleEndian = littleEndian;\r\n  }\r\n\r\n  /**\r\n  * get value\r\n  * @return {object} data content of this tag\r\n  */\r\n  value() {\r\n    return this.m_value;\r\n  }\r\n\r\n  /**\r\n  * check has transform syntax or not\r\n  * @return {boolean} is transform\r\n  */\r\n  isTransformSyntax() {\r\n    if ((this.m_group === TAG_TRANSFER_SYNTAX[0]) && (this.m_element === TAG_TRANSFER_SYNTAX[1])) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n  * check is this tag meta\r\n  * @return {boolean} true, if this tag is meta tag\r\n  */\r\n  isMetaLength() {\r\n    if ((this.m_group === TAG_META_LENGTH[0]) && (this.m_element === TAG_META_LENGTH[1])) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n  * check has image bits in this tag data\r\n  * @return {boolean} true, if image bits is inside tag data\r\n  */\r\n  isPixelData() {\r\n    if ((this.m_group === TAG_PIXEL_DATA[0]) && (this.m_element === TAG_PIXEL_DATA[1])) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\nexport default DicomTag;\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n/**\r\n* Get string hash\r\n* @module demo/engine/utils/hash\r\n*/\r\n// absolute imports\r\n/**\r\n* Class Hash to calc string hash\r\n* @class Hash\r\n*/\r\nclass Hash {\r\n\r\n  static getHash(strInp) {\r\n    const ROT = 27;\r\n    const len = strInp.length;\r\n    let hash = len * 53;\r\n    for (let i = 0; i < len; i++) {\r\n      const val = strInp.charCodeAt(i);\r\n      hash = hash * (val ^ 137211941);\r\n      // bit rotate\r\n      hash = (hash << ROT) | (hash >> (32 - ROT));\r\n      // mask\r\n      hash &= 0x3fffffff;\r\n    }\r\n    return hash;\r\n  }\r\n}\r\n\r\nexport default Hash;\r\n","\r\n// ********************************************************\r\n// Imports\r\n// ********************************************************\r\n\r\nimport Hash from '../utils/Hash';\r\n\r\n\r\n// ********************************************************\r\n// Class\r\n// ********************************************************\r\n\r\n/**\r\n* Class DicomSlice Single slice with info, used to detect series\r\n*/\r\n\r\nclass DicomSlice {\r\n  constructor() {\r\n    this.m_image = null;\r\n    this.m_sliceNumber = 0;\r\n    this.m_sliceLocation = 0.0;\r\n    // 10, 10\r\n    this.m_patientName = '';\r\n    // 8, 1030\r\n    this.m_studyDescr = '';\r\n    // 8, 20\r\n    this.m_studyDate = '';\r\n    // 8, 31\r\n    this.m_seriesTime = '';\r\n    // 8, 103E\r\n    this.m_seriesDescr = '';\r\n    // 18, 15\r\n    this.m_bodyPartExamined = '';\r\n    //\r\n    this.m_hash = 0;\r\n    this.m_xDim = 0;\r\n    this.m_yDim = 0;\r\n  }\r\n\r\n  buildHash() {\r\n    const strMix = this.m_patientName + this.m_studyDescr +\r\n    this.m_studyDate + this.m_seriesTime + \r\n    this.m_seriesDescr + this.m_bodyPartExamined;\r\n    this.m_hash = Hash.getHash(strMix);\r\n  } // end build hash\r\n} // end class DicomSlice\r\n\r\nexport default DicomSlice;\r\n","//\r\n//\r\n//\r\n\r\nimport DicomSlice from \"./dicomslice\";\r\n\r\nconst FLOAT_TOO_LARGE_VALUE = 555555555555.5;\r\n\r\n\r\nclass DicomSerie {\r\n  constructor(hash) {\r\n    console.assert(hash !== undefined);\r\n    console.assert(typeof hash === \"number\", \"hash shold be number\");\r\n\r\n    this.m_hash = hash;\r\n    this.m_slices = [];\r\n    this.m_minSlice = +FLOAT_TOO_LARGE_VALUE;\r\n    this.m_maxSlice = -FLOAT_TOO_LARGE_VALUE;\r\n  }\r\n\r\n  addSlice(slice) {\r\n    console.assert(slice !== undefined);\r\n    console.assert(slice instanceof DicomSlice, \"added slice should be DicomSlice object\");\r\n    this.m_slices.push(slice);\r\n    this.m_minSlice = (slice.m_sliceNumber < this.m_minSlice) ? slice.m_sliceNumber : this.m_minSlice;\r\n    this.m_maxSlice = (slice.m_sliceNumber > this.m_maxSlice) ? slice.m_sliceNumber : this.m_maxSlice;\r\n  }\r\n\r\n} // end DicomSerie\r\n\r\nexport default DicomSerie;\r\n","// ********************************************************\r\n// Imports\r\n// ********************************************************\r\n\r\nimport DicomSlice from './dicomslice';\r\nimport DicomSerie from './dicomserie';\r\n\r\n// ********************************************************\r\n// Const\r\n// ********************************************************\r\n\r\n// ********************************************************\r\n// Class\r\n// ********************************************************\r\n\r\n/**\r\n* Class DicomSlicesVolume Collected volume (from slices)\r\n*/\r\nclass DicomSlicesVolume {\r\n  constructor() {\r\n    //\r\n    // series[i]:\r\n    //  m_minSlice\r\n    //  m_maxSlice\r\n    //  m_slices[]\r\n    //\r\n    this.m_series = [];\r\n  }\r\n\r\n  destroy() {\r\n    this.m_series = [];\r\n  }\r\n\r\n  getSeries() {\r\n    return this.m_series;\r\n  }\r\n\r\n  //\r\n  // slice: DicomSlice\r\n  addSlice(slice) {\r\n    console.assert(slice !== undefined);\r\n    console.assert(slice instanceof DicomSlice, \"should be DicomSlice object\");\r\n    console.assert(slice.m_hash !== undefined);\r\n    console.assert(slice.m_hash !== 0);\r\n    let indSerie = this.getSerieIndex(slice);\r\n    if (indSerie < 0) {\r\n      // create new serie\r\n      const serieNew = new DicomSerie(slice.m_hash);\r\n      this.m_series.push(serieNew);\r\n      indSerie = this.m_series.length - 1;\r\n    }\r\n    // add slice to serie\r\n    const ser = this.m_series[indSerie];\r\n    ser.addSlice(slice);\r\n  } // end add slice\r\n\r\n  getSerieIndex(slice) {\r\n    const numSeries = this.m_series.length;\r\n    for (let i = 0; i < numSeries; i++) {\r\n      const serie = this.m_series[i];\r\n      if (serie.m_hash === slice.m_hash) {\r\n        return i;\r\n      }\r\n    } // end for\r\n    return -1;\r\n  } // end get serie index\r\n\r\n} // end class DicomSlicesVolume\r\n\r\nexport default DicomSlicesVolume;\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Dicom slice info\r\n* @module lib/scripts/loaders/dicomsliceinfo\r\n*/\r\n\r\n/**\r\n* Class @class DicomSliceInfo slice information\r\n*/\r\nclass DicomSliceInfo {\r\n  constructor() {\r\n    this.m_sliceName = '';\r\n    this.m_fileName = '';\r\n    // tags info for each slice. Each entry is DicomTagInfo\r\n    this.m_tags = [];\r\n  }\r\n}\r\n\r\nexport default DicomSliceInfo;\r\n","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n\"License\"); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n* Dicom tag info\r\n* @module lib/scripts/loaders/dicomtaginfo\r\n*/\r\n\r\n/**\r\n* Class @class DicomTagInfo tag descr\r\n*/\r\nclass DicomTagInfo {\r\n  constructor() {\r\n    this.m_tag = '';\r\n    this.m_attrName = '';\r\n    this.m_attrValue = '';\r\n  }\r\n}\r\n\r\nexport default DicomTagInfo;\r\n","\r\n// **********************************************\r\n// Imports\r\n// **********************************************\r\n\r\n// **********************************************\r\n// Class\r\n// **********************************************\r\n\r\nclass FileTools {\r\n  isValidUrl(strUrl) {\r\n    const regA = /^((ftp|http|https):\\/\\/)?(([\\S]+)\\.)?([\\S]+)\\.([A-z]{2,})(:\\d{1,6})?\\/[\\S]+/;\r\n    const regB = /(ftp|http|https):\\/\\/([\\d]+)\\.([\\d]+)\\.([\\d]+)\\.([\\d]+)(:([\\d]+))?\\/([\\S]+)/;\r\n    const isValidA = strUrl.match(regA);\r\n    const isValidB = strUrl.match(regB);\r\n    if ((isValidA === null) && (isValidB === null)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  } // end isValidUrl\r\n\r\n  getFileNameFromUrl(strUrl) {\r\n    let idx = strUrl.lastIndexOf('/');\r\n    if (idx < 0) {\r\n      idx = strUrl.lastIndexOf('\\\\');\r\n    }\r\n    if (idx < 0) {\r\n      console.log('getFileNameFromUrl: wrong URL!');\r\n      return '';\r\n    }\r\n    let strFileName = strUrl.substring(idx + 1);\r\n    const MAX_LEN = 40;\r\n    strFileName = (strFileName.length <= MAX_LEN) ? strFileName : strFileName.substring(0, MAX_LEN);\r\n    return strFileName;\r\n  }\r\n\r\n  getFolderNameFromUrl(strUrl) {\r\n    let idx = strUrl.lastIndexOf('/');\r\n    if (idx < 0) {\r\n      idx = strUrl.lastIndexOf('\\\\');\r\n    }\r\n    if (idx < 0) {\r\n      console.log('getFolderNameFromUrl: wrong URL!');\r\n      return '';\r\n    }\r\n    const strFolder = strUrl.substring(0, idx);\r\n    return strFolder;\r\n  }\r\n\r\n  isUrlExists(strUrl) {\r\n    let request = null;\r\n    if (window.XMLHttpRequest) {\r\n      request = new XMLHttpRequest();\r\n    } else {\r\n      // request = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n    }\r\n    // request.open('HEAD', strUrl, false);\r\n    const NEED_ASYNC = true;\r\n    request.open('GET', strUrl, NEED_ASYNC);\r\n    request.send();\r\n    const RES_FAIL_404 = 404;\r\n    const isValid = (request.status !== RES_FAIL_404);\r\n    return isValid;\r\n  } // isUrlkExist\r\n\r\n  encodeUrl(strIn) {\r\n    let strOut = '';\r\n    let dotFound = false;\r\n    const len = strIn.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const sym = strIn[i];\r\n      const isDelim = (sym === '/') || (sym === '.') || (sym === '-')  || (sym === '_');\r\n      if (dotFound && (!isDelim)) {\r\n        const c = strIn.charCodeAt(i);\r\n        const symModi = String.fromCharCode(c + 1);\r\n        strOut += symModi;\r\n      } else {\r\n        strOut += sym;\r\n      }\r\n      dotFound = (sym === '.') ? true : dotFound;\r\n    } // for (i)\r\n    return strOut;\r\n  } // encodeUrl\r\n\r\n  decodeUrl(strIn) {\r\n    let strOut = '';\r\n    let dotFound = false;\r\n    const len = strIn.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const sym = strIn[i];\r\n      const isDelim = (sym === '/') || (sym === '.') || (sym === '-')  || (sym === '_');\r\n      if (dotFound && (!isDelim)) {\r\n        const c = strIn.charCodeAt(i);\r\n        const symModi = String.fromCharCode(c - 1);\r\n        strOut += symModi;\r\n      } else {\r\n        strOut += sym;\r\n      }\r\n      dotFound = (sym === '.') ? true : dotFound;\r\n    } // for (i)\r\n    console.log(`${strOut}`);\r\n    return strOut;\r\n  } // encodeUrl\r\n\r\n} // class FileTools\r\nexport default FileTools;  \r\n","/**\r\n * @fileOverview LoaderDicom\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// ********************************************************\r\n// Imports\r\n// ********************************************************\r\n\r\n// import gdcm from 'gdcm-js';\r\n\r\n// import jpeg from 'jpeg-lossless-decoder-js';\r\n\r\nimport LoadResult from '../LoadResult';\r\n\r\nimport DicomDictionary from './dicomdict';\r\nimport DicomInfo from './dicominfo';\r\nimport DicomTag from './dicomtag';\r\nimport DicomSlice from './dicomslice';\r\nimport DicomSlicesVolume from './dicomslicesvolume';\r\nimport DicomSliceInfo from './dicomsliceinfo';\r\nimport DicomTagInfo from './dicomtaginfo';\r\nimport FileTools from './FileTools';\r\nimport FileLoader from './FileLoader';\r\n\r\n// import Volume from '../Volume';\r\nimport VolumeSet from '../VolumeSet';\r\nimport Volume from '../Volume';\r\n\r\n// ********************************************************\r\n// Const\r\n// ********************************************************\r\n\r\nconst DEBUG_PRINT_TAGS_INFO = false;\r\nconst DEBUG_PRINT_INDI_SLICE_INFO = false;\r\nconst NEED_SCAN_EMPTY_BORDER = false;\r\nconst NEED_APPLY_GAUSS_SMOOTHING = false;\r\n\r\n/** deep artificially fix volume texture size to even numbers */\r\nconst NEED_EVEN_TEXTURE_SIZE = false;\r\n\r\n/* eslint-disable */\r\nconst MAGIC_DICM = [68, 73, 67, 77];\r\n\r\nconst DICOM_ERROR_OK = 0;\r\nconst DICOM_ERROR_WRONG_HEADER = -1;\r\nconst DICOM_ERROR_TOO_SMALL_FILE = -2;\r\n\r\nconst UNDEFINED_LENGTH = 0xFFFFFFFF;\r\n\r\nconst LARGE_NUMBER = 0x3FFFFFFF;\r\n\r\nconst TAG_IMAGE_INSTANCE_NUMBER = [0x0020, 0x0013];\r\nconst TAG_PIXEL_DATA = [0x7FE0, 0x0010];\r\n\r\nconst TAG_BITS_ALLOCATED = [0x0028, 0x0100];\r\nconst TAG_IMAGE_ROWS = [0x0028, 0x0010];\r\nconst TAG_IMAGE_COLS = [0x0028, 0x0011];\r\nconst TAG_IMAGE_HIGH_BIT = [0x0028, 0x0102];\r\nconst TAG_IMAGE_SMALL_PIX_VAL = [0x0028, 0x0106];\r\nconst TAG_IMAGE_LARGE_PIX_VAL = [0x0028, 0x0107];\r\nconst TAG_PIXEL_PADDING_VALUE = [0x0028, 0x0120];\r\nconst TAG_PIXEL_SPACING = [0x0028, 0x0030];\r\nconst TAG_WINDOW_CENTER = [0x0028, 0x1050];\r\nconst TAG_WINDOW_WIDTH = [0x0028, 0x1051];\r\nconst TAG_RESCALE_INTERCEPT = [0x0028, 0x1052];\r\nconst TAG_RESCALE_SLOPE = [0x0028, 0x1053];\r\nconst TAG_RESCALE_TYPE = [0x0028, 0x1054];\r\nconst TAG_PIXEL_REPRESENTATION = [0x0028, 0x0103];\r\n\r\nconst TAG_IMAGE_POSITION = [0x0020, 0x0032];\r\nconst TAG_SLICE_LOCATION = [0x0020, 0x1041];\r\nconst TAG_SAMPLES_PER_PIXEL = [0x0028, 0x0002];\r\nconst TAG_SERIES_DESCRIPTION = [0x0008, 0x103E];\r\nconst TAG_SERIES_TIME = [0x0008, 0x31];\r\nconst TAG_END_OF_ITEMS = [0xFFFE, 0xE00D];\r\nconst TAG_END_OF_SEQUENCE = [0xFFFE, 0xE0DD];\r\nconst TAG_SERIES_NUMBER = [0x0020, 0x0011];\r\nconst TAG_SLICE_THICKNESS = [0x0018, 0x0050];\r\nconst TAG_BODY_PART_EXAMINED = [0x0018, 0x0015];\r\n\r\nconst TRANSFER_SYNTAX_IMPLICIT_LITTLE = '1.2.840.10008.1.2';\r\nconst TRANSFER_SYNTAX_EXPLICIT_LITTLE = '1.2.840.10008.1.2.1';\r\nconst TRANSFER_SYNTAX_EXPLICIT_BIG = '1.2.840.10008.1.2.2';\r\nconst TRANSFER_SYNTAX_COMPRESSION_JPEG = '1.2.840.10008.1.2.4';\r\nconst TRANSFER_SYNTAX_COMPRESSION_JPEG_LOSSLESS = '1.2.840.10008.1.2.4.57';\r\nconst TRANSFER_SYNTAX_COMPRESSION_JPEG_LOSSLESS_SEL1 = '1.2.840.10008.1.2.4.70';\r\nconst TRANSFER_SYNTAX_COMPRESSION_JPEG_BASELINE_8BIT = '1.2.840.10008.1.2.4.50';\r\nconst TRANSFER_SYNTAX_COMPRESSION_JPEG_BASELINE_12BIT = '\"1.2.840.10008.1.2.4.51';\r\nconst TRANSFER_SYNTAX_COMPRESSION_JPEG_2000_LOSSLESS = '1.2.840.10008.1.2.4.90';\r\nconst TRANSFER_SYNTAX_COMPRESSION_JPEG_2000 = '1.2.840.10008.1.2.4.91';\r\nconst TRANSFER_SYNTAX_COMPRESSION_RLE = '1.2.840.10008.1.2.5';\r\nconst TRANSFER_SYNTAX_COMPRESSION_DEFLATE = '1.2.840.10008.1.2.1.99';\r\n\r\n// Information from dicom tags, displayed in 2d screen\r\nconst TAG_PATIENT_NAME = [0x0010, 0x0010];\r\nconst TAG_PATIENT_ID = [0x0010, 0x0020];\r\nconst TAG_PATIENT_BIRTH_DATE = [0x0010, 0x0030];\r\nconst TAG_PATIENT_GENDER = [0x0010, 0x0040];\r\nconst TAG_STUDY_DATE = [0x0008, 0x0020];\r\nconst TAG_STUDY_DESCR = [0x0008, 0x1030];\r\nconst TAG_ACQUISION_TIME = [0x0008, 0x0032];\r\nconst TAG_INSTITUTION_NAME = [0x0008, 0x0080];\r\nconst TAG_PHYSICANS_NAME = [0x0008, 0x0090];\r\nconst TAG_MANUFACTURER_NAME = [0x0008, 0x0070];\r\nconst TAG_OPERATORS_NAME = [0x0008, 0x1070];\r\n\r\n// const NEED_EVEN_TEXTURE_SIZE = false;\r\n\r\n// ********************************************************\r\n// Class\r\n// ********************************************************\r\n\r\n/**\r\n * Class LoaderDicom some text later...\r\n */\r\nclass LoaderDicom{\r\n  /**\r\n   * @param {object} props - props from up level object\r\n   */\r\n  constructor(numFiles, needScaleDownTexture = false) {\r\n    this.m_xDim = -1;\r\n    this.m_yDim = -1;\r\n    this.m_zDim = numFiles;\r\n    this.m_needScaleDownTexture = needScaleDownTexture;\r\n    /** @property {object} m_fileLoader - low level file loader */\r\n    this.m_folder = null;\r\n    /** @property {boolean} m_isLoadedSuccessfull - Loaded flag: success o not */\r\n    this.m_isLoadedSuccessfull = false;\r\n    /** @property {number} m_dataSize - Volume data size in bytes */\r\n    this.m_dataSize = 0;\r\n    /** @property {array} m_dataArray - byte array for volume data */\r\n    this.m_dataArray = null;\r\n    /** dictionary */\r\n    this.m_dictionary = new DicomDictionary();\r\n    /** index of the image in slices set */\r\n    this.m_imageNumber = -1;\r\n    /** @property {array} m_errors - array  with error after file read, used internally */\r\n    this.m_errors = [];\r\n    /**  @property {string} m_transformSyntax - string with pixel data transform syntax */\r\n    this.m_transformSyntax = \"\";\r\n    /** @property {array} m_loaders - array with objects for individual file loading */\r\n    this.m_loaders = [];\r\n    /** @property {number} m_xDim - volume dimension on x (width) */\r\n    this.m_xDim = -1;\r\n    /** @property {number} m_yDim - volume dimension on y (height) */\r\n    this.m_yDim = -1;\r\n    /** @property {number} m_bitsPerPixel - bits per pixe;. Can be 8, 16, 32 */\r\n    this.m_bitsPerPixel = -1;\r\n    /** @property {number} m_padValue - background pixel value, not used in histogram */\r\n    this.m_padValue = -LARGE_NUMBER;\r\n    this.m_windowCenter = LARGE_NUMBER; // TAG_WINDOW_CENTER\r\n    this.m_windowWidth = LARGE_NUMBER; // TAG_WINDOW_WIDTH\r\n    this.m_rescaleIntercept = 0; // TAG_RESCALE_INTERCEPT, used as v` = v * rescaleSlope + rescaleIntercept\r\n    this.m_rescaleSlope = 1; // TAG_RESCALE_SLOPE\r\n    this.m_rescaleHounsfield = false;\r\n    this.m_pixelRepresentaionSigned = false;\r\n\r\n    /** @property {number} m_littleEndian - little ednian encoding of pixel data */\r\n    this.m_littleEndian = true;\r\n    /** @property {number} m_samplesPerPixel - number of samples per pixel. Can be 1 or 3. Used as average */\r\n    this.m_samplesPerPixel = 1;\r\n    /** @property {number} m_seriesNumber - Index of series to check the same image set in slices */\r\n    this.m_seriesNumber = -1;\r\n    /** @property {string} m_seriesDescr - Description of series */\r\n    this.m_seriesDescr = '';\r\n    /** @property {object} m_boxSize - vertex3f with physic volume dimension */\r\n    this.m_boxSize = {\r\n      x: 1.0,\r\n      y: 1.0,\r\n      z: 1.0,\r\n    };\r\n    /** @property {object} m_boxSize - vertex3f with physic volume dimension */\r\n    this.m_nonEmptyBoxMin = {\r\n      x: 0.0,\r\n      y: 0.0,\r\n      z: 0.0,\r\n    };\r\n    /** @property {object} m_boxSize - vertex3f with physic volume dimension */\r\n    this.m_nonEmptyBoxMax = {\r\n      x: 1.0,\r\n      y: 1.0,\r\n      z: 1.0,\r\n    };\r\n\r\n    /** @property {object} m_slicesVolume - Volume, where slices are collected */\r\n    this.m_slicesVolume = new DicomSlicesVolume();\r\n    /** @property {object} m_newTagEvent - custom event, that is send on new tag reading */\r\n    this.m_newTagEvent = new CustomEvent('newTag', {\r\n      detail: {\r\n        group: null,\r\n        element: null,\r\n        desc: null,\r\n        value: null,\r\n        imageNumber: null,\r\n        fileName: null,\r\n      },\r\n    });\r\n    /** @property {Object} m_info - Patient name, patient gender, ... */\r\n    this.m_dicomInfo = new DicomInfo();\r\n\r\n    // physical dimension\r\n    this.m_pixelSpacing = {\r\n      x: 0.0,\r\n      y: 0.0,\r\n      z: 0.0\r\n    };\r\n    this.m_filesLoadedCounter = 0;\r\n    this.m_numLoadedFiles = numFiles;\r\n\r\n    this.m_imagePosMin = {\r\n      // eslint-disable-next-line\r\n      x: +1.0e12,\r\n      // eslint-disable-next-line\r\n      y: +1.0e12,\r\n      // eslint-disable-next-line\r\n      z: +1.0e12\r\n    };\r\n    this.m_imagePosMax = {\r\n      // eslint-disable-next-line\r\n      x: -1.0e12,\r\n      // eslint-disable-next-line\r\n      y: -1.0e12,\r\n      // eslint-disable-next-line\r\n      z: -1.0e12\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n    this.m_sliceLocMin = +1.0e12;\r\n    // eslint-disable-next-line\r\n    this.m_sliceLocMax = -1.0e12;\r\n\r\n    this.runLoader = this.runLoader.bind(this);\r\n  }\r\n  getBoxSize() {\r\n    return this.m_boxSize;\r\n  }\r\n  getNonEmptyBoxMin() {\r\n    return this.m_nonEmptyBoxMin;\r\n  }\r\n  getNonEmptyBoxMax() {\r\n    return this.m_nonEmptyBoxMax;\r\n  }\r\n\r\n  getDicomInfo() {\r\n    return this.m_dicomInfo;\r\n  }\r\n  /**\r\n   * Create volume from slices set (m_slicesVolume)\r\n   * It can be several set of slices (for multiple series) and hash will\r\n   * select required slices\r\n   * \r\n   * Create volume data array from individual slices, loaded from different files\r\n   * @param {VolumeSet} volSet - destination volume set, will be created\r\n   * @param {number} indexSelected  - desired volume (serie) index\r\n   * @param {number} hashSelected - use only slices with this hash\r\n   * @return {LoadResult} LoadResult.SUCCESS if success\r\n   */\r\n createVolumeFromSlices(volSet, indexSelected, hashSelected) {\r\n  // check arguments\r\n  console.assert(volSet != null, \"Null volume\");\r\n  console.assert(volSet instanceof VolumeSet, \"Should be volume set\");\r\n  console.assert(typeof(indexSelected) === \"number\", \"index should be number\");\r\n  console.assert(typeof(hashSelected) === \"number\", \"index should be number\");\r\n\r\n  let volDst = null;\r\n  if (indexSelected < volSet.getNumVolumes()) {\r\n    volDst = volSet.getVolume(indexSelected);\r\n  } else {\r\n    volDst = new Volume();\r\n    volSet.addVolume(volDst);\r\n    volDst = volSet.getVolume(indexSelected);\r\n    console.assert(volDst !== null);\r\n  }\r\n\r\n  const numSeries = this.m_slicesVolume.m_series.length;\r\n  // get serie with given hash\r\n  let indSerie = -1;\r\n  for (let s = 0; s < numSeries; s++) {\r\n    if (this.m_slicesVolume.m_series[s].m_hash === hashSelected) {\r\n      indSerie = s; break;\r\n    }\r\n  }\r\n  console.assert(indSerie >= 0);\r\n  const serie = this.m_slicesVolume.m_series[indSerie];\r\n  const slice0 = serie.m_slices[0];\r\n  const numSlices = serie.m_slices.length;\r\n  this.m_xDim = slice0.m_xDim;\r\n  this.m_yDim = slice0.m_yDim;\r\n  this.m_zDim = serie.m_slices.length;\r\n  let xyDim = this.m_xDim * this.m_yDim;\r\n  \r\n  const imagePosBox = {\r\n    x: this.m_imagePosMax.x - this.m_imagePosMin.x,\r\n    y: this.m_imagePosMax.y - this.m_imagePosMin.y,\r\n    z: this.m_imagePosMax.z - this.m_imagePosMin.z\r\n  };\r\n  const TOO_MIN = 0.00001;\r\n  let zBox;\r\n  if (Math.abs(this.m_pixelSpacing.z) > TOO_MIN) {\r\n    zBox = this.m_pixelSpacing.z * this.m_zDim;\r\n  } else {\r\n    zBox = imagePosBox.z;\r\n    if (Math.abs(zBox) < TOO_MIN) {\r\n      zBox = imagePosBox.x;\r\n      if (Math.abs(zBox) < TOO_MIN) {\r\n        zBox = imagePosBox.y;\r\n      }\r\n    }\r\n  } // if pixel spacing 0\r\n  if (zBox < TOO_MIN) {\r\n    zBox = 1.0;\r\n  }\r\n  // check empty pixel spacing\r\n  if (this.m_pixelSpacing.x * this.m_pixelSpacing.y < TOO_MIN) {\r\n    this.m_pixelSpacing.x = 1.0;\r\n    this.m_pixelSpacing.y = 1.0;\r\n  }\r\n  this.m_pixelSpacing.z = zBox / this.m_zDim;\r\n  this.m_boxSize.z = this.m_zDim * this.m_pixelSpacing.z;\r\n  this.m_boxSize.x = this.m_xDim * this.m_pixelSpacing.x;\r\n  this.m_boxSize.y = this.m_yDim * this.m_pixelSpacing.y;\r\n  console.log(`createVolumeFromSlices. Volume local phys dim: ${this.m_boxSize.x} * ${this.m_boxSize.y} * ${this.m_boxSize.z}`);\r\n\r\n  let i;\r\n  let dataSize = 0;\r\n  let dataArray = null;\r\n\r\n  // convert big endian in slices\r\n  if (!this.m_littleEndian) {\r\n    for (let ser = 0; ser < numSeries; ser++){\r\n      const serie = this.m_slicesVolume.m_series[ser];\r\n      if (serie.m_hash !== hashSelected) {\r\n        continue;\r\n      }\r\n      for (let sl = 0; sl < numSlices; sl++) {\r\n        const slice = serie.m_slices[sl];\r\n        const sliceData16 = slice.m_image;\r\n        const xDim = slice.m_xDim;\r\n        const yDim = slice.m_yDim;\r\n        xyDim = xDim * yDim;\r\n        for (i = 0; i < xyDim; i++) {\r\n          const val16 = sliceData16[i];\r\n          sliceData16[i] = (val16 >> 8) | ((val16 << 8) & 0xffff);\r\n        } // for (i) all slice pixels\r\n      } // for sl\r\n    } // for ser\r\n  } // if big endian\r\n\r\n  // remove pad values or too much values\r\n  for (let ser = 0; ser < numSeries; ser++) {\r\n    const serie = this.m_slicesVolume.m_series[ser];\r\n    if (serie.m_hash !== hashSelected) {\r\n      continue;\r\n    }\r\n    for (let sl = 0; sl < numSlices; sl++) {\r\n      const slicePad = serie.m_slices[sl];\r\n      const xDim = slicePad.m_xDim;\r\n      const yDim = slicePad.m_yDim;\r\n      xyDim = xDim * yDim;\r\n      for (i = 0; i < xyDim; i++) {\r\n        const val16 = slicePad.m_image[i];\r\n        // if ((val16 === this.m_padValue) || ((val16 & 0x8000) !== 0)) {\r\n        if (val16 === this.m_padValue) {\r\n          val16 = 0;\r\n        }\r\n        slicePad.m_image[i] = val16;\r\n      } // for (i) all slice pixels\r\n    } // for sl\r\n  } // for ser\r\n\r\n  // dont apply rescale formula here, due to unsigned numbder can became signed, but store\r\n  // image in the unsigmed form\r\n\r\n  // get maximum value from slices (but only for given serie : hash)\r\n  let maxVal = -LARGE_NUMBER;\r\n  let minVal = +LARGE_NUMBER;\r\n  for (let ser = 0; ser < numSeries; ser++) {\r\n    const serie = this.m_slicesVolume.m_series[ser];\r\n    if (serie.m_hash !== hashSelected) {\r\n      continue;\r\n    }\r\n    for (let sl = 0; sl < numSlices; sl++) {\r\n      const slice = serie.m_slices[sl];\r\n      const sliceData16 = slice.m_image;\r\n      const xDim = slice.m_xDim;\r\n      const yDim = slice.m_yDim;\r\n      xyDim = xDim * yDim;\r\n      for (i = 0; i < xyDim; i++) {\r\n        const valData = sliceData16[i] * this.m_rescaleSlope + this.m_rescaleIntercept;\r\n        minVal = (valData < minVal) ? valData : minVal;\r\n        maxVal = (valData > maxVal) ? valData : maxVal;\r\n      } // for (i) all slice pixels\r\n    } // for sl\r\n  } // for ser\r\n\r\n  console.log(`Build Volume. min/max value=${minVal}/${maxVal}. Volume dim = ${this.m_xDim}*${this.m_yDim}*${this.m_zDim}`);\r\n  console.log(`Min slice number = ${serie.m_minSlice}`);\r\n  console.log(`Max slice number = ${serie.m_maxSlice}`);\r\n  maxVal = (maxVal - minVal > 0) ? maxVal : (maxVal + 1); \r\n\r\n  const BITS_ACCUR = 11;\r\n  const BITS_IN_BYTE = 8;\r\n  const scale = Math.floor((1 << (BITS_IN_BYTE + BITS_ACCUR)) / (maxVal - minVal));\r\n  const TOO_MIN_SCALE = 4;\r\n  if (scale <= TOO_MIN_SCALE) {\r\n    console.log('Bad scaling: image will be 0');\r\n    return LoadResult.ERROR_SCALING;\r\n  }\r\n\r\n  // get slices for selected serie\r\n  const srcSlices = serie.m_slices;\r\n\r\n  const numSlicesByTags = serie.m_maxSlice - serie.m_minSlice + 1;\r\n  if (numSlicesByTags !== numSlices) {\r\n    console.log(`Sort by location! N slices by tags = ${numSlicesByTags}, but N readed slices = ${numSlices}`);\r\n  }\r\n  // sort slices via slice location OR slice number\r\n  let minSliceNum = srcSlices[0].m_sliceNumber;\r\n  let maxSliceNum = srcSlices[0].m_sliceNumber;\r\n  for (let s = 0; s < numSlices; s++) {\r\n    const num = srcSlices[s].m_sliceNumber;\r\n    minSliceNum = (num < minSliceNum) ? num : minSliceNum;\r\n    maxSliceNum = (num > maxSliceNum) ? num : maxSliceNum;\r\n  }\r\n  const difSlceNum = maxSliceNum - minSliceNum;\r\n  if (difSlceNum > 0) {\r\n    // sort slices by slice number (read from dicom tag)\r\n    srcSlices.sort((a, b) => {\r\n      const zDif = a.m_sliceNumber - b.m_sliceNumber;\r\n      return zDif;\r\n    });\r\n  } else {\r\n    // sort slices by slice location (read from diocom tag)\r\n    srcSlices.sort((a, b) => {\r\n      const zDif = a.m_sliceLocation - b.m_sliceLocation;\r\n      return zDif;\r\n    });\r\n  }\r\n  // assign new slice numbers according accending location\r\n  let ind = 0;\r\n  for (let s = 0; s < numSlices; s++) {\r\n    srcSlices[s].m_sliceNumber = ind;\r\n    ind++;\r\n  }\r\n  this.m_zDim = numSlices;\r\n\r\n  // create out volume data array\r\n  // normal copy volume with transform 16 -> 8 bit\r\n\r\n  dataSize = this.m_xDim * this.m_yDim * this.m_zDim;\r\n  dataArray = new Uint8Array(dataSize);\r\n  if (dataArray === null) {\r\n    console.log('no memory');\r\n    return LoadResult.ERROR_NO_MEMORY;\r\n  }\r\n  for (i = 0; i < dataSize; i++) {\r\n    dataArray[i] = 0;\r\n  }\r\n\r\n  // convert slices data into volume set data (16 bpp -> 8 bpp, etc)\r\n  const MAX_BYTE = 255;\r\n  for (let s = 0; s < numSlices; s++) {\r\n    const sliceSrc = srcSlices[s];\r\n    xyDim = sliceSrc.m_xDim * sliceSrc.m_yDim;\r\n    const dataSrc16 = sliceSrc.m_image;\r\n    // console.log(`Slice[${s}] sliceNumber = ${slice.m_sliceNumber} sliceLocation = ${slice.m_sliceLocation}`);\r\n\r\n    // const z = slice.m_sliceNumber - this.m_slicesVolume.m_minSlice;\r\n    let z = sliceSrc.m_sliceNumber;\r\n    if (z >= serie.m_slices.length) {\r\n      z = sliceSrc.m_sliceNumber - serie.m_minSlice;\r\n      if ((z < 0) || (z >= this.m_zDim)) {\r\n        console.log('Invalid z slice reference');\r\n        return LoadResult.ERROR_INVALID_SLICE_INDEX;\r\n      } // if z invalid\r\n    } // if z more num slices\r\n\r\n    if (dataSrc16 !== null) {\r\n      const offZ = z * xyDim;\r\n\r\n      if ((this.m_windowCenter !== LARGE_NUMBER) && (this.m_windowWidth !== LARGE_NUMBER)) {\r\n        const winMin = this.m_windowCenter - this.m_windowWidth * 0.5;\r\n        for (i = 0; i < xyDim; i++) {\r\n          const valScaled = dataSrc16[i] * this.m_rescaleSlope + this.m_rescaleIntercept;\r\n\r\n          let val = 0;\r\n          if (this.m_rescaleHounsfield) {\r\n            // rescale for hounsfield units\r\n            val = Math.floor((valScaled - winMin) * 255 / this.m_windowWidth);\r\n          } else {\r\n            // usual (default) rescale\r\n            val = Math.floor(127 + (valScaled - this.m_windowCenter) * 128 / (this.m_windowWidth / 2));\r\n          }\r\n          val = (val >= 0) ? val : 0;\r\n          val = (val < 255) ? val : 255;\r\n          dataArray[offZ + i] = val;\r\n        } // for i\r\n      } else {\r\n        // window center, width not specified\r\n        for (i = 0; i < xyDim; i++) {\r\n          const val16 = dataSrc16[i] * this.m_rescaleSlope + this.m_rescaleIntercept;\r\n          let val = ((val16 - minVal) * scale) >> BITS_ACCUR;\r\n          // let val = Math.floor(255 * val16 / maxVal);\r\n          val = (val <= MAX_BYTE) ? val : MAX_BYTE;\r\n          dataArray[offZ + i] = val;\r\n        } // for i\r\n      } // no defined window center, width\r\n\r\n    } // if has slice data\r\n  } // for(s) all slices\r\n\r\n  // destroy for what?\r\n  // this.m_slicesVolume.destroy();\r\n\r\n  // Scale down volume by slices\r\n  const numPixelsInVolume = this.m_xDim * this.m_yDim * this.m_zDim;\r\n  // eslint-disable-next-line\r\n  const MAX_VOLUME_PIXELS = 512 * 512 * 256;\r\n  if (this.m_needScaleDownTexture && (numPixelsInVolume > MAX_VOLUME_PIXELS)) {\r\n    const XY_MAX_DIM = 512;\r\n    const Z_LOW_DIM = 120;\r\n    const xDimDst = (this.m_xDim <= XY_MAX_DIM) ? this.m_xDim : XY_MAX_DIM;\r\n    const yDimDst = (this.m_yDim <= XY_MAX_DIM) ? this.m_yDim : XY_MAX_DIM;\r\n    const zDimDst = Z_LOW_DIM;\r\n    const dataNew = VolumeTools.scaleTextureDown(this, dataArray, xDimDst, yDimDst, zDimDst);\r\n    dataArray = dataNew;\r\n    xyDim = this.m_xDim * this.m_yDim;\r\n    console.log(`Volume scaled down to: ${xDimDst} * ${yDimDst} * ${zDimDst}.`);\r\n  }\r\n\r\n  // Scan for empty voxels on border sides\r\n  if (NEED_SCAN_EMPTY_BORDER) {\r\n    const xDim = this.m_xDim;\r\n    const yDim = this.m_yDim;\r\n    const zDim = this.m_zDim;\r\n\r\n    const minValBarrier = 16;\r\n    let x;\r\n    let y;\r\n    let z;\r\n    let isEmpty;\r\n    isEmpty = true;\r\n    for (x = 0; (x < xDim / TWICE) && (isEmpty); x++) {\r\n      // check is empty plane\r\n      for (y = 0; (y < yDim) && (isEmpty); y++) {\r\n        for (z = 0; (z < zDim) && (isEmpty); z++) {\r\n          const off = (z * xyDim) + (y * xDim) + x;\r\n          if (dataArray[off] > minValBarrier) {\r\n            isEmpty = false;\r\n          }\r\n        } // for (z)\r\n      } // for (y()\r\n    } // for (x)\r\n    const xBorderMin = x;\r\n\r\n    isEmpty = true;\r\n    for (x = xDim - 1; (x > xDim / TWICE) && (isEmpty); x--) {\r\n      // check is empty plane\r\n      for (y = 0; (y < yDim) && (isEmpty); y++) {\r\n        for (z = 0; (z < zDim) && (isEmpty); z++) {\r\n          const off = (z * xyDim) + (y * xDim) + x;\r\n          if (dataArray[off] > minValBarrier) {\r\n            isEmpty = false;\r\n          }\r\n        } // for (z)\r\n      } // for (y()\r\n    } // for (x)\r\n    const xBorderMax = x;\r\n\r\n    isEmpty = true;\r\n    for (y = 0; (y < yDim / TWICE) && (isEmpty); y++) {\r\n      // check is empty plane\r\n      for (x = 0; (x < xDim) && (isEmpty); x++) {\r\n        for (z = 0; (z < zDim) && (isEmpty); z++) {\r\n          const off = (z * xyDim) + (y * xDim) + x;\r\n          if (dataArray[off] > minValBarrier) {\r\n            isEmpty = false;\r\n          }\r\n        } // for (z)\r\n      } // for (y()\r\n    } // for (x)\r\n    const yBorderMin = y;\r\n\r\n    isEmpty = true;\r\n    for (y = yDim - 1; (y > yDim / TWICE) && (isEmpty); y--) {\r\n      // check is empty plane\r\n      for (x = 0; (x < xDim) && (isEmpty); x++) {\r\n        for (z = 0; (z < zDim) && (isEmpty); z++) {\r\n          const off = (z * xyDim) + (y * xDim) + x;\r\n          if (dataArray[off] > minValBarrier) {\r\n            isEmpty = false;\r\n          }\r\n        } // for (z)\r\n      } // for (y()\r\n    } // for (x)\r\n    const yBorderMax = y;\r\n\r\n    isEmpty = true;\r\n    for (z = 0; (z < zDim / TWICE) && (isEmpty); z++) {\r\n      // check is empty plane\r\n      for (x = 0; (x < xDim) && (isEmpty); x++) {\r\n        for (y = 0; (y < yDim) && (isEmpty); y++) {\r\n          const off = (z * xyDim) + (y * xDim) + x;\r\n          if (dataArray[off] > minValBarrier) {\r\n            isEmpty = false;\r\n          }\r\n        } // for (z)\r\n      } // for (y()\r\n    } // for (x)\r\n    const zBorderMin = z;\r\n\r\n    isEmpty = true;\r\n    for (z = zDim - 1; (z > zDim / TWICE) && (isEmpty); z--) {\r\n      // check is empty plane\r\n      for (x = 0; (x < xDim) && (isEmpty); x++) {\r\n        for (y = 0; (y < yDim) && (isEmpty); y++) {\r\n          const off = (z * xyDim) + (y * xDim) + x;\r\n          if (dataArray[off] > minValBarrier) {\r\n            isEmpty = false;\r\n          }\r\n        } // for (z)\r\n      } // for (y()\r\n    } // for (x)\r\n    const zBorderMax = z;\r\n\r\n    // console.log(`Border scan: xBorderMin = ${xBorderMin}, xBorderMax = ${xBorderMax}. xDim = ${xDim}`);\r\n    // console.log(`Border scan: yBorderMin = ${yBorderMin}, yBorderMax = ${yBorderMax}. yDim = ${yDim}`);\r\n    // console.log(`Border scan: zBorderMin = ${zBorderMin}, zBorderMax = ${zBorderMax}. zDim = ${zDim}`);\r\n    this.m_nonEmptyBoxMin.x = xBorderMin / xDim;\r\n    this.m_nonEmptyBoxMin.y = yBorderMin / yDim;\r\n    this.m_nonEmptyBoxMin.z = zBorderMin / zDim;\r\n    this.m_nonEmptyBoxMax.x = xBorderMax / xDim;\r\n    this.m_nonEmptyBoxMax.y = yBorderMax / yDim;\r\n    this.m_nonEmptyBoxMax.z = zBorderMax / zDim;\r\n\r\n    this.m_boxSize.z = (zBorderMax - zBorderMin) * this.m_pixelSpacing.z;\r\n    this.m_boxSize.x = (xBorderMax - xBorderMin) * this.m_pixelSpacing.x;\r\n    this.m_boxSize.y = (yBorderMax - yBorderMin) * this.m_pixelSpacing.y;\r\n\r\n    const neMin = this.m_nonEmptyBoxMin;\r\n    const neMax = this.m_nonEmptyBoxMax;\r\n    console.log(`Border scan min: ${neMin.x}, ${neMin.y}, ${neMin.z}`);\r\n    console.log(`Border scan max: ${neMax.x}, ${neMax.y}, ${neMax.z}`);\r\n  } // if need scan empty borders\r\n\r\n  // Special volume texture size fix (z dim should be even)\r\n  if (NEED_EVEN_TEXTURE_SIZE) {\r\n    const xDim = this.m_xDim;\r\n    const yDim = this.m_yDim;\r\n    const zDim = this.m_zDim;\r\n    if ((zDim & 1) !== 0) {\r\n      const volDataAlignedSize = VolumeTools.makeTextureSizeEven(dataArray, xDim, yDim, zDim);\r\n      // Align all dims to 4*x\r\n      const NUM3 = 3;\r\n      this.m_xDim = (xDim + NUM3) & (~NUM3);\r\n      this.m_yDim = (yDim + NUM3) & (~NUM3);\r\n      this.m_zDim = (zDim + NUM3) & (~NUM3);\r\n      dataArray = volDataAlignedSize;\r\n    }\r\n  }\r\n\r\n  // Apply Gauss smooth filter\r\n  if (NEED_APPLY_GAUSS_SMOOTHING) {\r\n    const volTools = new VolumeTools();\r\n    const GAUSS_RADIUS = 2;\r\n    const GAUSS_SIGMA = 1.4;\r\n    volTools.gaussSmooth(dataArray, this.m_xDim, this.m_yDim, this.m_zDim, GAUSS_RADIUS, GAUSS_SIGMA);\r\n  }\r\n\r\n  // Apply 0 to the edges of volume\r\n  const MIN_NUM_SLICES_FOR_VOL = 4;\r\n  if (this.m_zDim > MIN_NUM_SLICES_FOR_VOL) {\r\n    let x;\r\n    let y;\r\n    let z;\r\n    let yOff;\r\n    let zOff;\r\n    // z planes\r\n    z = 0;\r\n    const zOffMin = z * this.m_xDim * this.m_yDim;\r\n    z = this.m_zDim - 1;\r\n    const zOffMax = z * this.m_xDim * this.m_yDim;\r\n    for (y = 0; y < this.m_yDim; y++) {\r\n      yOff = y * this.m_xDim;\r\n      for (x = 0; x < this.m_xDim; x++) {\r\n        dataArray[zOffMin + yOff + x] = 0;\r\n        dataArray[zOffMax + yOff + x] = 0;\r\n      } // for x\r\n    }  // for y\r\n\r\n    // x planes\r\n    x = 0;\r\n    const xOffMin = x;\r\n    x = this.m_xDim - 1;\r\n    const xOffMax = x;\r\n    for (z = 0; z < this.m_zDim; z++) {\r\n      zOff = z * this.m_xDim * this.m_yDim;\r\n      for (y = 0; y < this.m_yDim; y++) {\r\n        yOff = y * this.m_xDim;\r\n        dataArray[zOff + yOff + xOffMin] = 0;\r\n        dataArray[zOff + yOff + xOffMax] = 0;\r\n      }\r\n    }\r\n    // y planes\r\n    y = 0;\r\n    const yOffMin = y * this.m_xDim;\r\n    y = this.m_yDim - 1;\r\n    const yOffMax = y * this.m_xDim;\r\n    for (z = 0; z < this.m_zDim; z++) {\r\n      zOff = z * this.m_xDim * this.m_yDim;\r\n      for (x = 0; x < this.m_xDim; x++) {\r\n        dataArray[zOff + x + yOffMin] = 0;\r\n        dataArray[zOff + x + yOffMax] = 0;\r\n      } // for x\r\n    } // for z\r\n  } // if zDim more min possible for volume\r\n\r\n  const KTX_GL_RED = 0x1903;\r\n  const KTX_UNSIGNED_BYTE = 0x1401;\r\n  const header = {\r\n    m_pixelWidth: this.m_xDim,\r\n    m_pixelHeight: this.m_yDim,\r\n    m_pixelDepth: this.m_zDim,\r\n    m_glType: KTX_UNSIGNED_BYTE,\r\n    m_glTypeSize: 1,\r\n    m_glFormat: KTX_GL_RED,\r\n    m_glInternalFormat: KTX_GL_RED,\r\n    m_glBaseInternalFormat: KTX_GL_RED,\r\n  };\r\n  const callbackComplete = this.m_callbackComplete;\r\n  if (callbackComplete) {\r\n    callbackComplete(LoadResult.SUCCESS, header, dataSize, dataArray);\r\n  } // if callback ready\r\n  const ONE = 1;\r\n\r\n  volDst.m_xDim = this.m_xDim;\r\n  volDst.m_yDim = this.m_yDim;\r\n  volDst.m_zDim = this.m_zDim;\r\n  volDst.m_dataArray = dataArray;\r\n  volDst.m_dataSize = dataSize;\r\n  volDst.m_bytesPerVoxel = ONE;\r\n  volDst.m_boxSize.x = this.m_boxSize.x;\r\n  volDst.m_boxSize.y = this.m_boxSize.y;\r\n  volDst.m_boxSize.z = this.m_boxSize.z;\r\n\r\n  volDst.m_patientName = this.m_dicomInfo.m_patientName;\r\n  volDst.m_patientBirth = this.m_dicomInfo.m_patientDateOfBirth;\r\n  volDst.m_seriesDescr = this.m_dicomInfo.m_seriesDescr;\r\n\r\n\r\n  volDst.m_studyDescr = this.m_dicomInfo.m_studyDescr;\r\n  volDst.m_studyDate = this.m_dicomInfo.m_studyDate;\r\n  volDst.m_seriesTime = this.m_dicomInfo.m_seriesTime;\r\n  volDst.m_bodyPartExamined = this.m_dicomInfo.m_bodyPartExamined;\r\n  volDst.m_institutionName = this.m_dicomInfo.m_institutionName;\r\n  volDst.m_operatorsName = this.m_dicomInfo.m_operatorsName;\r\n  volDst.m_physicansName = this.m_dicomInfo.m_physicansName;\r\n\r\n  volDst.createIcon();\r\n\r\n\r\n  return LoadResult.SUCCESS;\r\n} // end createVolumeFromSlices\r\n\r\n  static getVrsStringIndex(vr) {\r\n    const VRS = [\r\n      'AE', 'AS', 'AT', 'CS', 'DA', 'DS', 'DT', 'FL',\r\n      'FD', 'IS', 'LO', 'LT', 'OB', 'OD', 'OF', 'OW',\r\n      'PN', 'SH', 'SL', 'SS', 'ST', 'TM', 'UI', 'UL',\r\n      'UN', 'US', 'UT',\r\n    ];\r\n    const numElems = VRS.length;\r\n    for (let i = 0; i < numElems; i++) {\r\n      if (VRS[i] === vr) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n  static getDataVrsStringIndex(vr) {\r\n    const DATA_VRS = [\r\n      'OB', 'OW', 'OF', 'SQ', 'UT', 'UN',\r\n    ];\r\n    const numElems = DATA_VRS.length;\r\n    for (let i = 0; i < numElems; i++) {\r\n      if (DATA_VRS[i] === vr) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n  /**\r\n  * Convert DataView object into string\r\n  * @param {object} dataView - DataView object (created from ArrayBuffer)\r\n  * @param {number} offset - current offset in buffer, when string started\r\n  * @param {number} lengthBuf - number of bytes to convert to string\r\n  * @return {string} string presentation of DataView\r\n  */\r\n  static getStringAt(dataView, offset, lengthBuf) {\r\n    let str = '';\r\n    for (let i = 0; i < lengthBuf; i++) {\r\n      const ch = dataView.getUint8(offset + i);\r\n      if (ch !== 0) {\r\n        str += String.fromCharCode(ch);\r\n      }\r\n    }\r\n    return str;\r\n  }\r\n  static getUtf8StringAt(dataView, offset, lengthBuf) {\r\n    let str = '';\r\n    let i = 0;\r\n    while (i < lengthBuf) {\r\n      let c = dataView.getUint8(offset + i); i++;\r\n      if (c == 0x5e) {\r\n        c = 32;\r\n      }\r\n      switch (c >> 4) {\r\n        case 0: case 1:\r\n        case 2: case 3:\r\n        case 4: case 5:\r\n        case 6: case 7:\r\n          str += String.fromCharCode(c);\r\n          break;\r\n        case 12: case 13:\r\n          const char2 = dataView.getUint8(offset + i); i++;\r\n          str += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\r\n          break;\r\n        case 14:\r\n          const ch2 = dataView.getUint8(offset + i); i++;\r\n          const ch3 = dataView.getUint8(offset + i); i++;\r\n          str += String.fromCharCode(((c & 0x0F) << 12) |\r\n                                     ((ch2 & 0x3F) << 6) |\r\n                                     ((ch3 & 0x3F) << 0));\r\n          break;          \r\n      } // switch\r\n \r\n    } // while not end string\r\n    return str;\r\n  }\r\n  static getAttrValueAsString(tag) {\r\n    if (tag.m_value === null) {\r\n      if (tag.m_vr === 'SQ') { // sequence of items\r\n        return '(Sequence Data)';\r\n      }\r\n      return null;\r\n    }\r\n    const SIZE_SHORT = 2;\r\n    const SIZE_DWORD = 4;\r\n    const dvTag = new DataView(tag.m_value);\r\n    let tmp = null;\r\n    let res = null;\r\n    let date = null;\r\n    let readBytes = 0;\r\n    // to do: add AT, OB?, OD?, OF?, OW?, Unknown?\r\n    switch (tag.m_vr) {\r\n      case 'AE': // application entity\r\n        return LoaderDicom.getStringAt(dvTag, 0, tag.m_value.byteLength);\r\n      case 'AS': // age string\r\n        tmp = LoaderDicom.getStringAt(dvTag, 0, tag.m_value.byteLength);\r\n        // eslint-disable-next-line\r\n        res = Number(tmp.slice(0, 3)).toString();\r\n        switch (tmp[3]) {\r\n          case 'D':\r\n            return `${res} days`;\r\n          case 'W':\r\n            return `${res} weeks`;\r\n          case 'M':\r\n            return `${res} months`;\r\n          case 'Y':\r\n            return `${res} years`;\r\n          default:\r\n            return null;\r\n        }\r\n      case 'CS': // code string\r\n        return LoaderDicom.getStringAt(dvTag, 0, tag.m_value.byteLength);\r\n      case 'DA': // date\r\n        tmp = LoaderDicom.getStringAt(dvTag, 0, tag.m_value.byteLength);\r\n        // eslint-disable-next-line\r\n        date = new Date(`${tmp.slice(0, 4)}-${tmp.slice(4, 6)}-${tmp.slice(6, 8)}`);\r\n        return date.toLocaleDateString();\r\n      case 'DS': // decimal string\r\n        return LoaderDicom.getStringAt(dvTag, 0, tag.m_value.byteLength);\r\n      case 'DT': // date time\r\n        // to do: parse date-time as YYYYMMDDHHMMSS.FFFFFF&ZZXX\r\n        return LoaderDicom.getStringAt(dvTag, 0, tag.m_value.byteLength);\r\n      case 'FL': // floating point single\r\n        res = dvTag.getFloat32(0, tag.m_littleEndian).toString();\r\n        readBytes = SIZE_DWORD;\r\n        while (readBytes + SIZE_DWORD <= dvTag.byteLength) {\r\n          res = `${res} \\\\ ${dvTag.getFloat32(readBytes, tag.m_littleEndian).toString()}`;\r\n          readBytes += SIZE_DWORD;\r\n        }\r\n        return res;\r\n      case 'FD': // floating point double\r\n        res = dvTag.getFloat64(0, tag.m_littleEndian).toString();\r\n        readBytes = (SIZE_DWORD + SIZE_DWORD);\r\n        while (readBytes + SIZE_DWORD + SIZE_DWORD <= dvTag.byteLength) {\r\n          res = `${res} \\\\ ${dvTag.getFloat64(readBytes, tag.m_littleEndian).toString()}`;\r\n          readBytes += (SIZE_DWORD + SIZE_DWORD);\r\n        }\r\n        return res;\r\n      case 'IS': // integer string\r\n        return LoaderDicom.getStringAt(dvTag, 0, tag.m_value.byteLength);\r\n      case 'LO': // long string\r\n        return LoaderDicom.getStringAt(dvTag, 0, tag.m_value.byteLength);\r\n      case 'LT': // long text\r\n        // to do: check if it works for several paragraphs\r\n        return LoaderDicom.getStringAt(dvTag, 0, tag.m_value.byteLength);\r\n      case 'PN': // person name\r\n        return LoaderDicom.getStringAt(dvTag, 0, tag.m_value.byteLength);\r\n      case 'SH': // short string\r\n        return LoaderDicom.getStringAt(dvTag, 0, tag.m_value.byteLength);\r\n      case 'SL': // signed long\r\n        res = dvTag.getInt32(0, tag.m_littleEndian).toString();\r\n        readBytes = SIZE_DWORD;\r\n        while (readBytes + SIZE_SHORT <= dvTag.byteLength) {\r\n          res = `${res} \\\\ ${dvTag.getInt16(readBytes, tag.m_littleEndian).toString()}`;\r\n          readBytes += SIZE_DWORD;\r\n        }\r\n        return res;\r\n      case 'SS': // signed short\r\n        res = dvTag.getInt16(0, tag.m_littleEndian).toString();\r\n        readBytes = SIZE_SHORT;\r\n        while (readBytes + SIZE_SHORT <= dvTag.byteLength) {\r\n          res = `${res} \\\\ ${dvTag.getInt16(readBytes, tag.m_littleEndian).toString()}`;\r\n          readBytes += SIZE_SHORT;\r\n        }\r\n        return res;\r\n      case 'ST': // short text\r\n        return LoaderDicom.getStringAt(dvTag, 0, tag.m_value.byteLength);\r\n      case 'TM': // time\r\n        tmp = LoaderDicom.getStringAt(dvTag, 0, tag.m_value.byteLength);\r\n        if (tag.m_value.byteLength >= SIZE_SHORT) {\r\n          // eslint-disable-next-line\r\n          res = `${Number(tmp.slice(0, 2))}h`;\r\n        }\r\n        if (tag.m_value.byteLength >= SIZE_DWORD) {\r\n          // eslint-disable-next-line\r\n          res = `${res} ${Number(tmp.slice(2, 4))}m`;\r\n        }\r\n        if (tag.m_value.byteLength > SIZE_DWORD) {\r\n          // eslint-disable-next-line\r\n          res = `${res} ${parseFloat(tmp.slice(4, tag.m_value.byteLength))}s`;\r\n        }\r\n        return res;\r\n      case 'UI': // unique identifier\r\n        return LoaderDicom.getStringAt(dvTag, 0, tag.m_value.byteLength);\r\n      case 'UL': // unsigned long\r\n        res = dvTag.getUint32(0, tag.m_littleEndian).toString();\r\n        readBytes = SIZE_DWORD;\r\n        while (readBytes + SIZE_DWORD <= dvTag.byteLength) {\r\n          res = `${res} \\\\ ${dvTag.getUint32(readBytes, tag.m_littleEndian).toString()}`;\r\n          readBytes += SIZE_DWORD;\r\n        }\r\n        return res;\r\n      case 'US': // unsigned short\r\n        res = dvTag.getUint16(0, tag.m_littleEndian).toString();\r\n        readBytes = SIZE_SHORT;\r\n        while (readBytes + SIZE_SHORT <= dvTag.byteLength) {\r\n          res = `${res} \\\\ ${dvTag.getUint16(readBytes, tag.m_littleEndian).toString()}`;\r\n          readBytes += SIZE_SHORT;\r\n        }\r\n        return res;\r\n      case 'UT': // unlimited text\r\n        // to do: check if it works for several paragraphs\r\n        return LoaderDicom.getStringAt(dvTag, 0, tag.m_value.byteLength);\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  /**\r\n  * Get next tag from stream\r\n  * @param {object} dataView - array\r\n  * @param {number} offset - current offset in buffer\r\n  * @return {object} if success or null, when fail. Fail reasons: invalid tag length read.\r\n  */\r\n getNextTag(dataView, offset) {\r\n  // check end of buffer\r\n  if (offset >= dataView.byteLengh) {\r\n    return null;\r\n  }\r\n  const SIZE_SHORT = 2;\r\n  const SIZE_DWORD = 4;\r\n\r\n  let little = true;\r\n  let group = 0;\r\n  let element = 0;\r\n  let lenData = 0;\r\n  const offsetStart = offset;\r\n  let vr = '';\r\n\r\n  const MAGIC_GROUP = 0x0002;\r\n\r\n  if (this.m_metaFinished) {\r\n    little = this.m_littleEndian;\r\n    group = dataView.getUint16(offset, little);\r\n  } else {\r\n    group = dataView.getUint16(offset, 1);\r\n    if (((this.m_metaFinishedOffset !== -1) && (offset >= this.m_metaFinishedOffset)) || (group !== MAGIC_GROUP)) {\r\n      this.m_metaFinished = 1;\r\n      little = this.m_littleEndian;\r\n      group = dataView.getUint16(offset, little);\r\n    } else {\r\n      little = true;\r\n    }\r\n  }\r\n  if (!this.m_metaFound && (group === MAGIC_GROUP)) {\r\n    this.m_metaFound = true;\r\n  }\r\n  offset += SIZE_SHORT; // skip group number\r\n\r\n  element = dataView.getUint16(offset, little);\r\n  offset += SIZE_SHORT; // skip element number\r\n\r\n  if (this.m_explicit || !this.m_metaFinished) {\r\n    vr = LoaderDicom.getStringAt(dataView, offset, SIZE_SHORT);\r\n    if (!this.m_metaFound && this.m_metaFinished && (LoaderDicom.getVrsStringIndex(vr) === -1)) {\r\n      vr = DicomDictionary.getVr(group, element);\r\n      lenData = dataView.getUint32(offset, little);\r\n      // assert for lenData < 1024 * 1024 * 32\r\n      offset += SIZE_DWORD;\r\n      this.m_explicit = false;\r\n    } else {\r\n      offset += SIZE_SHORT;\r\n      if (LoaderDicom.getDataVrsStringIndex(vr) !== -1) {\r\n        offset += SIZE_SHORT;\r\n        lenData = dataView.getUint32(offset, little);\r\n        // assert for lenData < 1024 * 1024 * 32\r\n        offset += SIZE_DWORD;\r\n      } else {\r\n        lenData = dataView.getUint16(offset, little);\r\n        // assert for lenData < 1024 * 1024 * 32\r\n        offset += SIZE_SHORT;\r\n      }\r\n    }\r\n  } else {\r\n    vr = this.m_dictionary.getVr(group, element);\r\n    lenData = dataView.getUint32(offset, little);\r\n    // assert for lenData < 1024 * 1024 * 32\r\n    if (lenData === UNDEFINED_LENGTH) {\r\n      vr = 'SQ';\r\n    }\r\n    offset += SIZE_DWORD;\r\n  }\r\n  const offsetValue = offset;\r\n  let dataValue = null;\r\n  if (vr === 'SQ') {\r\n    // see nema dicom Table 7.5-3\r\n    // for now just skip sequence items\r\n    if (lenData === UNDEFINED_LENGTH) {\r\n      let sqGroup = 0;\r\n      let sqElement = 0;\r\n      while (!((sqGroup === TAG_END_OF_SEQUENCE[0]) && (sqElement === TAG_END_OF_SEQUENCE[1]))) {\r\n        sqGroup = dataView.getUint16(offset, little);\r\n        offset += SIZE_SHORT;\r\n        sqElement = dataView.getUint16(offset, little);\r\n        offset += SIZE_SHORT;\r\n        const sqLength = dataView.getUint32(offset, little);\r\n        offset += SIZE_DWORD;\r\n        if (sqLength === UNDEFINED_LENGTH) {\r\n          // item delim. tag (fffe, e00d)\r\n          while (!(((sqGroup === TAG_END_OF_ITEMS[0]) && (sqElement === TAG_END_OF_ITEMS[1])) ||\r\n            ((sqGroup === TAG_END_OF_SEQUENCE[0]) && (sqElement === TAG_END_OF_SEQUENCE[1])))) {\r\n            const tagNew = this.getNextTag(dataView, offset);\r\n            offset = tagNew.m_offsetEnd;\r\n            sqGroup = dataView.getUint16(offset, little);\r\n            sqElement = dataView.getUint16(offset + SIZE_SHORT, little);\r\n          }\r\n          offset += (SIZE_DWORD + SIZE_DWORD); // 4 for group and element + 4 for length field\r\n        } else { // if sqLength is ffffffff\r\n          offset += sqLength;\r\n        }\r\n      } // while not end tag sequence\r\n      lenData = 0;\r\n    } // if length equal to ffffffff\r\n  } else if (lenData > 0) {\r\n    if (lenData === UNDEFINED_LENGTH) {\r\n      if ((group === TAG_PIXEL_DATA[0]) && (element === TAG_PIXEL_DATA[1])) {\r\n        lenData = (dataView.byteLength - offset);\r\n      }\r\n    }\r\n    // Get data from buffer, starting from offset\r\n    dataValue = dataView.buffer.slice(offset, offset + lenData);\r\n  }\r\n  const VAL_16 = 16;\r\n  if (DEBUG_PRINT_TAGS_INFO) {\r\n    const strDesc = this.m_dictionary.getTextDesc(group, element);\r\n    const strGr = group.toString(VAL_16);\r\n    const strEl = element.toString(VAL_16);\r\n    console.log(`Tag {${strGr},${strEl}}, VR='${vr}', Length=${lenData}, Desc=${strDesc}`);\r\n  }\r\n  const VAL_MIN_ONE = 0xffffffff;\r\n  if (lenData === VAL_MIN_ONE) {\r\n    return null;\r\n  }\r\n\r\n  offset += lenData;\r\n  const tag = new DicomTag(group, element, vr, dataValue, offsetStart, offsetValue, offset, this.m_littleEndian);\r\n\r\n  if (tag) {\r\n    this.m_newTagEvent.detail.group = group.toString(VAL_16);\r\n    this.m_newTagEvent.detail.element = element.toString(VAL_16);\r\n    this.m_newTagEvent.detail.desc = this.m_dictionary.getTextDesc(group, element);\r\n    this.m_newTagEvent.detail.value = LoaderDicom.getAttrValueAsString(tag);\r\n    if ((group === TAG_IMAGE_INSTANCE_NUMBER[0]) && (element === TAG_IMAGE_INSTANCE_NUMBER[1])) {\r\n      this.m_newTagEvent.detail.imageNumber = parseInt(this.m_newTagEvent.detail.value, 10);\r\n    } else {\r\n      this.m_newTagEvent.detail.imageNumber = -1;\r\n    }\r\n    dispatchEvent(this.m_newTagEvent);\r\n  }\r\n\r\n  if (tag.isTransformSyntax()) {\r\n    const tagDataLen = tag.m_value.byteLength;\r\n    const dvTag = new DataView(tag.m_value);\r\n    const strTagVal = LoaderDicom.getStringAt(dvTag, 0, tagDataLen);\r\n    if (strTagVal === TRANSFER_SYNTAX_IMPLICIT_LITTLE) {\r\n      this.m_explicit = false;\r\n      this.m_littleEndian = true;\r\n    } else if (strTagVal === TRANSFER_SYNTAX_EXPLICIT_BIG) {\r\n      this.m_explicit = true;\r\n      this.m_littleEndian = false;\r\n    } else if (strTagVal === TRANSFER_SYNTAX_COMPRESSION_DEFLATE) {\r\n      this.m_needsDeflate = true;\r\n      this.m_explicit = true;\r\n      this.m_littleEndian = true;\r\n    } else if (strTagVal == TRANSFER_SYNTAX_COMPRESSION_JPEG) {\r\n      this.m_transformSyntax = TRANSFER_SYNTAX_COMPRESSION_JPEG;\r\n    } else if (strTagVal == TRANSFER_SYNTAX_COMPRESSION_JPEG_LOSSLESS_SEL1) {\r\n      this.m_transformSyntax = TRANSFER_SYNTAX_COMPRESSION_JPEG_LOSSLESS_SEL1;\r\n    } else if (strTagVal == TRANSFER_SYNTAX_COMPRESSION_JPEG_LOSSLESS) {\r\n      this.m_transformSyntax = TRANSFER_SYNTAX_COMPRESSION_JPEG_LOSSLESS;\r\n    } else if (strTagVal == TRANSFER_SYNTAX_COMPRESSION_JPEG_BASELINE_8BIT) {\r\n      this.m_transformSyntax = TRANSFER_SYNTAX_COMPRESSION_JPEG_BASELINE_8BIT;\r\n    } else if (strTagVal == TRANSFER_SYNTAX_COMPRESSION_JPEG_BASELINE_12BIT) {\r\n      this.m_transformSyntax = TRANSFER_SYNTAX_COMPRESSION_JPEG_BASELINE_12BIT;\r\n    } else if (strTagVal == TRANSFER_SYNTAX_COMPRESSION_JPEG_2000_LOSSLESS) {\r\n      this.m_transformSyntax = TRANSFER_SYNTAX_COMPRESSION_JPEG_2000_LOSSLESS;\r\n    } else if (strTagVal == TRANSFER_SYNTAX_COMPRESSION_JPEG_2000) {\r\n      this.m_transformSyntax = TRANSFER_SYNTAX_COMPRESSION_JPEG_2000;\r\n    } else if (strTagVal == TRANSFER_SYNTAX_COMPRESSION_RLE) {\r\n      this.m_transformSyntax = TRANSFER_SYNTAX_COMPRESSION_RLE;\r\n\r\n    } else {\r\n      this.m_explicit = true;\r\n      this.m_littleEndian = true;\r\n    }\r\n  } else if (tag.isMetaLength()) {\r\n    this.m_metaFinishedOffset = tag.m_value[0] + offset;\r\n  }\r\n  return tag;\r\n  } // getNextTag\r\n  static numberToHexString(val) {\r\n    const str = val.toString(16);\r\n    const len = str.length;\r\n    const numLeadZeros = 4 - len;\r\n    let strZeros = '';\r\n    for (let i = 0; i < numLeadZeros; i++) {\r\n      strZeros += '0';\r\n    }\r\n    const strRes = '0x' + strZeros + str;\r\n    return strRes;\r\n  }\r\n  readFromGoogleBuffer(i, fileName, ratioLoaded, arrBuf, callbackProgress, callbackComplete)\r\n  {\r\n    const dataView = new DataView(arrBuf);\r\n    let fileSize = dataView.byteLength;\r\n    // fileSize = (fileSize) & (~1);\r\n    // console.log(`readFromGoogleBuffer. fileSize = ${fileSize}`);\r\n    // fileSize = (fileSize <= 512) ? fileSize : 512;\r\n\r\n    // const strHeader = LoaderDicom.getStringAt(dataView, 0, 512);\r\n    // console.log(`readFromGoogleBuffer. header = ${strHeader}`);\r\n\r\n    const OFF_CONTENT_TYPE = 64;\r\n    const LEN_CONTENT_TYPE = 32;\r\n    const strCtx = LoaderDicom.getStringAt(dataView, OFF_CONTENT_TYPE, LEN_CONTENT_TYPE);\r\n    const STR_CTX_MATCH = 'Content-Type: application/dicom;';\r\n    const isEqCtxStr = (strCtx === STR_CTX_MATCH);\r\n    if (isEqCtxStr) {\r\n      const SIZE_GOOGLE_HEADER = 136;\r\n      const arrBufWoHead = arrBuf.slice(SIZE_GOOGLE_HEADER);\r\n      const dataViewWoGoogle = new DataView(arrBufWoHead);\r\n      const okRet = this.readFromBuffer(i, fileName, ratioLoaded, arrBufWoHead, callbackProgress, callbackComplete)\r\n      return okRet;\r\n    } else {\r\n      console.log(`readFromGoogleBuffer. bad content type = ${strCtx}`);\r\n      return LoadResult.BAD_HEADER;\r\n    }\r\n  }\r\n  /**\r\n  * Read from local file buffer\r\n  * @param {number} indexFile - index of slice loaded\r\n  * @param {string} fileName - Loaded file\r\n  * @param {number} ratioLoaded - ratio from 0 to 1.0.\r\n  * @param {object} arrBuf - source byte buffer, ArrayBuffer type\r\n  * @return LoadResult.XXX\r\n  */\r\n  readFromBuffer(indexFile, fileName, ratioLoaded, arrBuf, callbackProgress, callbackComplete) {\r\n    if (typeof indexFile !== 'number') {\r\n      console.log('LoaderDicom.readFromBuffer: bad indexFile argument');\r\n    }\r\n    if (typeof fileName !== 'string') {\r\n      console.log('LoaderDicom.readFromBuffer: bad fileName argument');\r\n    }\r\n    if (typeof arrBuf !== 'object') {\r\n      console.log('LoaderDicom.readFromBuffer: bad arrBuf argument');\r\n    }\r\n    // const bufBytes = new Uint8Array(arrBuf);\r\n    // const isUint8Arr = bufBytes instanceof Uint8Array;\r\n    // if (!isUint8Arr) {\r\n    //   console.log('LoaderDicom. readFromBuffer. Error read buffer');\r\n    //   return false;\r\n    // }\r\n\r\n    // console.log(`LoaderDicom. readFromBuffer. file = ${fileName}, ratio = ${ratioLoaded}`);\r\n\r\n    // add info\r\n    const dicomInfo = this.m_dicomInfo;\r\n    const sliceInfo = new DicomSliceInfo();\r\n    const strSlice = 'Slice ' + indexFile.toString();\r\n    sliceInfo.m_sliceName = strSlice;\r\n    sliceInfo.m_fileName = fileName;\r\n    sliceInfo.m_tags = [];\r\n    dicomInfo.m_sliceInfo.push(sliceInfo);\r\n\r\n    const dataView = new DataView(arrBuf);\r\n    if (dataView === null) {\r\n      console.log('No memory');\r\n      return LoadResult.ERROR_NO_MEMORY;\r\n    }\r\n    const fileSize = dataView.byteLength;\r\n    // check dicom header\r\n    const SIZE_HEAD = 144;\r\n    if (fileSize < SIZE_HEAD) {\r\n      // this.m_errors[indexFile] = DICOM_ERROR_TOO_SMALL_FILE;\r\n      this.m_error = LoadResult.ERROR_TOO_SMALL_DATA_SIZE;\r\n      if (callbackComplete !== undefined) {\r\n        callbackComplete(LoadResult.ERROR_TOO_SMALL_DATA_SIZE);\r\n      }\r\n      return LoadResult.ERROR_TOO_SMALL_DATA_SIZE;\r\n    }\r\n    const OFF_MAGIC = 128;\r\n    const SIZE_DWORD = 4;\r\n    const SIZE_SHORT = 2;\r\n    for (let i = 0; i < SIZE_DWORD; i++) {\r\n      const v = dataView.getUint8(OFF_MAGIC + i);\r\n      if (v !== MAGIC_DICM[i]) {\r\n        this.m_errors[indexFile] = DICOM_ERROR_WRONG_HEADER;\r\n        console.log(`Dicom readFromBuffer. Wrong header in file: ${fileName}`);\r\n        if (callbackComplete !== undefined) {\r\n          callbackComplete(LoadResult.WRONG_HEADER_MAGIC);\r\n        }\r\n        return LoadResult.WRONG_HEADER_MAGIC;\r\n      }\r\n    }\r\n    let offset = OFF_MAGIC;\r\n    offset += SIZE_DWORD;\r\n\r\n    //\r\n    this.m_littleEndian = true;\r\n    this.m_explicit = true;\r\n    this.m_metaFound = false;\r\n    this.m_metaFinished = false;\r\n    this.m_metaFinishedOffset = -1;\r\n    this.m_needsDeflate = false;\r\n\r\n    this.m_imageNumber = -1;\r\n    this.m_xDim = -1;\r\n    this.m_yDim = -1;\r\n    this.m_bitsPerPixel = -1;\r\n    this.m_windowCenter = -1;\r\n    this.m_windowWidth = -1;\r\n    let pixelBitMask = 0;\r\n    let pixelPaddingValue = 0;\r\n    let pixelsTagReaded = false;\r\n    let pixelMinValue = -1;\r\n    let pixelMaxValue = -1;\r\n\r\n    // read tag by tag, until image tag\r\n    let tag;\r\n    for (tag = this.getNextTag(dataView, offset); tag !== null;) {\r\n      if (tag.isPixelData()) {\r\n        pixelsTagReaded = true;\r\n        break;\r\n      }\r\n      offset = tag.m_offsetEnd;\r\n      tag = this.getNextTag(dataView, offset);\r\n      if (tag === null) {\r\n        break;\r\n      }\r\n\r\n      // add to tag info\r\n      const dicomInfo = this.m_dicomInfo;\r\n      const numlices = dicomInfo.m_sliceInfo.length;\r\n      const sliceInfo = dicomInfo.m_sliceInfo[numlices - 1];\r\n      const tagInfo = new DicomTagInfo();\r\n      tagInfo.m_tag = '(' + \r\n        LoaderDicom.numberToHexString(tag.m_group) + ',' + \r\n        LoaderDicom.numberToHexString(tag.m_element) + ')';\r\n      const strTagName = this.m_dictionary.getTextDesc(tag.m_group, tag.m_element);\r\n      tagInfo.m_attrName = (strTagName.length > 1) ? strTagName : '';\r\n\r\n      let strVal = LoaderDicom.getAttrValueAsString(tag);\r\n      strVal = (strVal !== null) ? strVal : '';\r\n\r\n      tagInfo.m_attrValue = strVal;\r\n      sliceInfo.m_tags.push(tagInfo);\r\n\r\n      // console.log(`Add tag info. tag = ${tagInfo.m_tag} atNa = ${tagInfo.m_attrName} atVal = ${tagInfo.m_attrValue} `);\r\n\r\n      // get important info from tag: image number\r\n      if ((tag.m_group === TAG_IMAGE_INSTANCE_NUMBER[0]) && (tag.m_element === TAG_IMAGE_INSTANCE_NUMBER[1])) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        const strNum = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n        this.m_imageNumber = parseInt(strNum, 10) - 1;\r\n        if (DEBUG_PRINT_TAGS_INFO) {\r\n          console.log(`Str = ${strNum}, ImageNumber = ${this.m_imageNumber}`);\r\n        }\r\n      }\r\n      // get important tag: image rows\r\n      if ((tag.m_group === TAG_IMAGE_ROWS[0]) && (tag.m_element === TAG_IMAGE_ROWS[1])) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        const yDim = (dataLen === SIZE_SHORT) ?\r\n          dv.getUint16(0, this.m_littleEndian) : dv.getUint32(0, this.m_littleEndian);\r\n        if (DEBUG_PRINT_TAGS_INFO) {\r\n          console.log(`yDim = ${yDim}`);\r\n        }\r\n        if (this.m_yDim < 0) {\r\n          this.m_yDim = yDim;\r\n        } else if (this.m_yDim !== yDim) {\r\n          console.log('Bad image size y');\r\n          if (callbackComplete !== undefined) {\r\n            callbackComplete(LoadResult.WRONG_IMAGE_DIM_Y);\r\n          }\r\n          return LoadResult.WRONG_IMAGE_DIM_Y;\r\n        }\r\n      }\r\n      // get important tag: image cols\r\n      if ((tag.m_group === TAG_IMAGE_COLS[0]) && (tag.m_element === TAG_IMAGE_COLS[1])) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        const xDim = (dataLen === SIZE_SHORT) ?\r\n          dv.getUint16(0, this.m_littleEndian) : dv.getUint32(0, this.m_littleEndian);\r\n        if (DEBUG_PRINT_TAGS_INFO) {\r\n          console.log(`xDim = ${xDim}`);\r\n        }\r\n        if (this.m_xDim < 0) {\r\n          this.m_xDim = xDim;\r\n        } else if (this.m_xDim !== xDim) {\r\n          console.log('Bad image size x');\r\n          if (callbackComplete !== undefined) {\r\n            callbackComplete(LoadResult.WRONG_IMAGE_DIM_X);\r\n          }\r\n          return LoadResult.WRONG_IMAGE_DIM_X;\r\n        }\r\n      }\r\n      // get important tag: bits allocated\r\n      if ((tag.m_group === TAG_BITS_ALLOCATED[0]) && (tag.m_element === TAG_BITS_ALLOCATED[1])) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        this.m_bitsPerPixel = (dataLen === SIZE_SHORT) ?\r\n          dv.getUint16(0, this.m_littleEndian) : dv.getUint32(0, this.m_littleEndian);\r\n        if (DEBUG_PRINT_TAGS_INFO) {\r\n          console.log(`bitsPerPixel = ${this.m_bitsPerPixel}`);\r\n        }\r\n      }\r\n\r\n      // window center\r\n      if ((tag.m_group === TAG_WINDOW_CENTER[0]) && (tag.m_element === TAG_WINDOW_CENTER[1])) {\r\n        if ((tag.m_value != null) && (tag.m_value.byteLength > 0)) {\r\n          const dataLen = tag.m_value.byteLength;\r\n          const dv = new DataView(tag.m_value);\r\n          const strNum = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n          this.m_windowCenter = parseInt(strNum, 10);\r\n          if (DEBUG_PRINT_TAGS_INFO) {\r\n            console.log(`Str = ${strNum}, WindowCenter = ${this.m_windowCenter}`);\r\n          }\r\n        } // if non zero data\r\n      } // window center\r\n      \r\n      // window width\r\n      if ((tag.m_group === TAG_WINDOW_WIDTH[0]) && (tag.m_element === TAG_WINDOW_WIDTH[1])) {\r\n        if ((tag.m_value != null) && (tag.m_value.byteLength > 0)) {\r\n          const dataLen = tag.m_value.byteLength;\r\n          const dv = new DataView(tag.m_value);\r\n          const strNum = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n          this.m_windowWidth = parseInt(strNum, 10);\r\n          if (DEBUG_PRINT_TAGS_INFO) {\r\n            console.log(`Str = ${strNum}, WindowWidth = ${this.m_windowWidth}`);\r\n          }\r\n        } // if non zero data\r\n      } // window width\r\n\r\n      // rescale intercept\r\n      if ((tag.m_group === TAG_RESCALE_INTERCEPT[0]) && (tag.m_element === TAG_RESCALE_INTERCEPT[1])) {\r\n        if ((tag.m_value != null) && (tag.m_value.byteLength > 0)) {\r\n          const dataLen = tag.m_value.byteLength;\r\n          const dv = new DataView(tag.m_value);\r\n          const strNum = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n          this.m_rescaleIntercept = parseInt(strNum, 10);\r\n          if (DEBUG_PRINT_TAGS_INFO) {\r\n            console.log(`Str = ${strNum}, RescaleIntercept = ${this.m_rescaleIntercept}`);\r\n          }\r\n        } // if non zero data\r\n      } // rescale intercept\r\n\r\n      // rescale slope\r\n      if ((tag.m_group === TAG_RESCALE_SLOPE[0]) && (tag.m_element === TAG_RESCALE_SLOPE[1])) {\r\n        if ((tag.m_value != null) && (tag.m_value.byteLength > 0)) {\r\n          const dataLen = tag.m_value.byteLength;\r\n          const dv = new DataView(tag.m_value);\r\n          const strNum = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n          this.m_rescaleSlope = parseInt(strNum, 10);\r\n          if (DEBUG_PRINT_TAGS_INFO) {\r\n            console.log(`Str = ${strNum}, RescaleSlope = ${this.m_rescaleSlope}`);\r\n          }\r\n        } // if non zero data\r\n      } // rescale slope\r\n\r\n      // rescale type\r\n      if ((tag.m_group === TAG_RESCALE_TYPE[0]) && (tag.m_element === TAG_RESCALE_TYPE[1])) {\r\n        if ((tag.m_value != null) && (tag.m_value.byteLength > 0)) {\r\n          const dataLen = tag.m_value.byteLength;\r\n          const dv = new DataView(tag.m_value);\r\n          const strVal = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n          if (strVal === 'HU') {\r\n            this.m_rescaleHounsfield = true;  \r\n          }\r\n          if (DEBUG_PRINT_TAGS_INFO) {\r\n            console.log(`Str = ${strNum}, RescaleType = ${this.m_rescaleHounsfield}`);\r\n          }\r\n        } // if non zero data\r\n      } // rescale type\r\n\r\n      // pixel representation\r\n      if ((tag.m_group === TAG_PIXEL_REPRESENTATION[0]) && (tag.m_element === TAG_PIXEL_REPRESENTATION[1])) {\r\n        if ((tag.m_value != null) && (tag.m_value.byteLength > 0)) {\r\n          const dataLenPixRep = tag.m_value.byteLength;\r\n          const dvPixRep = new DataView(tag.m_value);\r\n          const pixRep = (dataLenPixRep === SIZE_SHORT) ?\r\n            dvPixRep.getUint16(0, this.m_littleEndian) : dvPixRep.getUint32(0, this.m_littleEndian);\r\n          if (pixRep === 1) {\r\n            this.m_pixelRepresentaionSigned = true;\r\n          }\r\n          if (DEBUG_PRINT_TAGS_INFO) {\r\n            console.log(`Str = ${strNum}, Pixel representation is signed = ${this.m_pixelRepresentaionSigned}`);\r\n          }\r\n        } // if non zero data\r\n      } // rescale slope\r\n\r\n      // get series number\r\n      if ((tag.m_group === TAG_SERIES_NUMBER[0]) && (tag.m_element === TAG_SERIES_NUMBER[1])) {\r\n        if ((tag.m_value != null) && (tag.m_value.byteLength > 0)) {\r\n          const dataLen = tag.m_value.byteLength;\r\n          const dv = new DataView(tag.m_value);\r\n          const strNum = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n          this.m_seriesNumber = parseInt(strNum, 10);\r\n          if (DEBUG_PRINT_TAGS_INFO) {\r\n            console.log(`Str = ${strNum}, SeriesNumber = ${this.m_seriesNumber}`);\r\n          }\r\n        } // if non zero data\r\n      } // series number\r\n\r\n      // get important tag: series description\r\n      if ((tag.m_group === TAG_SERIES_DESCRIPTION[0]) && (tag.m_element === TAG_SERIES_DESCRIPTION[1]) &&\r\n        (tag.m_value !== null)) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        this.m_seriesDescr = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n        if (DEBUG_PRINT_TAGS_INFO) {\r\n          console.log(`Series description = ${this.m_seriesDescr}`);\r\n        }\r\n      }\r\n      // get important tag: hight bit\r\n      if ((tag.m_group === TAG_IMAGE_HIGH_BIT[0]) && (tag.m_element === TAG_IMAGE_HIGH_BIT[1])) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        const highBit = (dataLen === SIZE_SHORT) ?\r\n          dv.getUint16(0, this.m_littleEndian) : dv.getUint32(0, this.m_littleEndian);\r\n        pixelBitMask = (1 << (highBit + 1)) - 1;\r\n        if (DEBUG_PRINT_TAGS_INFO) {\r\n          console.log(`highBit = ${highBit}`);\r\n        }\r\n      }\r\n\r\n      // get important tag: min pixel value\r\n      if ((tag.m_group === TAG_IMAGE_SMALL_PIX_VAL[0]) && (tag.m_element === TAG_IMAGE_SMALL_PIX_VAL[1])) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        pixelMinValue = (dataLen === SIZE_SHORT) ?\r\n          dv.getInt16(0, this.m_littleEndian) : dv.getInt32(0, this.m_littleEndian);\r\n        if (DEBUG_PRINT_TAGS_INFO) {\r\n          console.log(`pixelMinValue = ${pixelMinValue}`);\r\n        }\r\n      }\r\n\r\n      // get important tag: max pixel value\r\n      if ((tag.m_group === TAG_IMAGE_LARGE_PIX_VAL[0]) && (tag.m_element === TAG_IMAGE_LARGE_PIX_VAL[1])) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        pixelMaxValue = (dataLen === SIZE_SHORT) ?\r\n          dv.getInt16(0, this.m_littleEndian) : dv.getInt32(0, this.m_littleEndian);\r\n        if (DEBUG_PRINT_TAGS_INFO) {\r\n          console.log(`pixelMaxValue = ${pixelMaxValue}`);\r\n        }\r\n      }\r\n\r\n      // get important tag: pixel padding value\r\n      if ((tag.m_group === TAG_PIXEL_PADDING_VALUE[0]) && (tag.m_element === TAG_PIXEL_PADDING_VALUE[1])) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        pixelPaddingValue = (dataLen === SIZE_SHORT) ?\r\n          dv.getUint16(0, this.m_littleEndian) : dv.getUint32(0, this.m_littleEndian);\r\n        this.m_padValue = pixelPaddingValue;\r\n        if (DEBUG_PRINT_TAGS_INFO) {\r\n          console.log(`pixelPaddingValue = ${pixelPaddingValue}`);\r\n        }\r\n      }\r\n      // get important tag: pixel spacing in 2d (xy)\r\n      if ((tag.m_group === TAG_PIXEL_SPACING[0]) && (tag.m_element === TAG_PIXEL_SPACING[1])) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        const strPixelSpacing = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n        const strArr = strPixelSpacing.split('\\\\');\r\n        if (strArr.length === SIZE_SHORT) {\r\n          this.m_pixelSpacing.x = parseFloat(strArr[0]);\r\n          this.m_pixelSpacing.y = parseFloat(strArr[1]);\r\n          if (DEBUG_PRINT_TAGS_INFO) {\r\n            console.log(`TAG. pixel spacing xy = ${this.m_pixelSpacing.x} * ${this.m_pixelSpacing.y}`);\r\n          }\r\n        }\r\n      }\r\n      // get important tag: image position (x,y,z)\r\n      if ((tag.m_group === TAG_IMAGE_POSITION[0]) && (tag.m_element === TAG_IMAGE_POSITION[1])) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        const strImagePosition = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n        const strArr = strImagePosition.split('\\\\');\r\n        const NUM_COMPONENTS_3 = 3;\r\n        if (strArr.length === NUM_COMPONENTS_3) {\r\n          // eslint-disable-next-line\r\n          const xPos = parseFloat(strArr[0]);\r\n          // eslint-disable-next-line\r\n          const yPos = parseFloat(strArr[1]);\r\n          // eslint-disable-next-line\r\n          const zPos = parseFloat(strArr[2]);\r\n          this.m_imagePosMin.x = (xPos < this.m_imagePosMin.x) ? xPos : this.m_imagePosMin.x;\r\n          this.m_imagePosMin.y = (yPos < this.m_imagePosMin.y) ? yPos : this.m_imagePosMin.y;\r\n          this.m_imagePosMin.z = (zPos < this.m_imagePosMin.z) ? zPos : this.m_imagePosMin.z;\r\n          this.m_imagePosMax.x = (xPos > this.m_imagePosMax.x) ? xPos : this.m_imagePosMax.x;\r\n          this.m_imagePosMax.y = (yPos > this.m_imagePosMax.y) ? yPos : this.m_imagePosMax.y;\r\n          this.m_imagePosMax.z = (zPos > this.m_imagePosMax.z) ? zPos : this.m_imagePosMax.z;\r\n          if (DEBUG_PRINT_TAGS_INFO) {\r\n            console.log(`TAG. image position x,y,z = ${xPos}, ${yPos}, ${zPos}`);\r\n          }\r\n        }\r\n      }\r\n\r\n      // slice thickness\r\n      if ((tag.m_group === TAG_SLICE_THICKNESS[0]) && (tag.m_element === TAG_SLICE_THICKNESS[1])) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        const strSliceThickness = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n        this.m_pixelSpacing.z = parseFloat(strSliceThickness);\r\n        if (DEBUG_PRINT_TAGS_INFO) {\r\n          console.log(`TAG. slice thickness = ${this.m_pixelSpacing.z}`);\r\n        }\r\n      }\r\n\r\n      // get important tag: slice location (x,y,z)\r\n      if ((tag.m_group === TAG_SLICE_LOCATION[0]) && (tag.m_element === TAG_SLICE_LOCATION[1])) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        const strSliceLocation = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n        const sliceLoc = parseFloat(strSliceLocation);\r\n        this.m_sliceLocation = sliceLoc;\r\n        this.m_sliceLocMin = (sliceLoc < this.m_sliceLocMin) ? sliceLoc : this.m_sliceLocMin;\r\n        this.m_sliceLocMax = (sliceLoc > this.m_sliceLocMax) ? sliceLoc : this.m_sliceLocMax;\r\n        if (DEBUG_PRINT_TAGS_INFO) {\r\n          console.log(`TAG. Slice location = ${this.m_sliceLocation}`);\r\n        }\r\n      }\r\n\r\n      // get important tag: samples per pixel\r\n      if ((tag.m_group === TAG_SAMPLES_PER_PIXEL[0]) && (tag.m_element === TAG_SAMPLES_PER_PIXEL[1])) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        this.m_samplesPerPixel = (dataLen === SIZE_SHORT) ?\r\n          dv.getUint16(0, this.m_littleEndian) : dv.getUint32(0, this.m_littleEndian);\r\n        if (DEBUG_PRINT_TAGS_INFO) {\r\n          console.log(`samplesPerPixel = ${this.m_samplesPerPixel}`);\r\n        }\r\n      }\r\n\r\n      // dicom info\r\n      if ((tag.m_group === TAG_SERIES_DESCRIPTION[0]) && (tag.m_element === TAG_SERIES_DESCRIPTION[1]) &&\r\n        (tag.m_value !== null)) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        const strDescr = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n        // console.log(`DicomLoader. Series descr read = ${strDescr}`);\r\n        this.m_dicomInfo.m_seriesDescr = strDescr;\r\n      }\r\n      if ((tag.m_group === TAG_SERIES_TIME[0]) && (tag.m_element === TAG_SERIES_TIME[1]) &&\r\n        (tag.m_value !== null)) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        const strTimeMerged = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n        // eslint-disable-next-line\r\n        const strHour = strTimeMerged.substring(0, 2);\r\n        // eslint-disable-next-line\r\n        const strMinute = strTimeMerged.substring(2, 4);\r\n        // eslint-disable-next-line\r\n        const strSec = strTimeMerged.substring(4, strTimeMerged.length);\r\n        const strTimeBuild = `${strHour}:${strMinute}:${strSec}`;\r\n        // console.log(`Series time read = ${strTimeBuild}`);\r\n        this.m_dicomInfo.m_seriesTime = strTimeBuild;\r\n        if (DEBUG_PRINT_TAGS_INFO) {\r\n          console.log(`Series time = ${this.m_dicomInfo.m_seriesTime}`);\r\n        }\r\n      }\r\n      if ((tag.m_group === TAG_PATIENT_NAME[0]) && (tag.m_element === TAG_PATIENT_NAME[1]) &&\r\n        (tag.m_value !== null)) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        this.m_dicomInfo.m_patientName = LoaderDicom.getUtf8StringAt(dv, 0, dataLen);\r\n        this.m_dicomInfo.m_patientName = this.m_dicomInfo.m_patientName.trim();\r\n        //console.log(`m_patientName = ${this.m_dicomInfo.m_patientName}`);\r\n      }\r\n      if ((tag.m_group === TAG_PATIENT_ID[0]) && (tag.m_element === TAG_PATIENT_ID[1]) &&\r\n        (tag.m_value !== null)) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        this.m_dicomInfo.m_patientId = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n        // console.log(`m_patientId = ${this.m_dicomInfo.m_patientId}`);\r\n      }\r\n      if ((tag.m_group === TAG_PATIENT_GENDER[0]) && (tag.m_element === TAG_PATIENT_GENDER[1]) &&\r\n        (tag.m_value !== null)) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        this.m_dicomInfo.m_patientGender = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n        // console.log(`m_patientGender = ${this.m_dicomInfo.m_patientGender}`);\r\n      }\r\n      if ((tag.m_group === TAG_PATIENT_BIRTH_DATE[0]) && (tag.m_element === TAG_PATIENT_BIRTH_DATE[1]) &&\r\n        (tag.m_value !== null)) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        const strDateMerged = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n        // eslint-disable-next-line\r\n        const strY = strDateMerged.substring(0, 4);\r\n        // eslint-disable-next-line\r\n        const strM = strDateMerged.substring(4, 6);\r\n        // eslint-disable-next-line\r\n        const strD = strDateMerged.substring(6);\r\n        this.m_dicomInfo.m_patientDateOfBirth = `${strD}/${strM}/${strY}`;\r\n        // console.log(`m_patientDateOfBirth = ${this.m_dicomInfo.m_patientDateOfBirth}`);\r\n      }\r\n      if ((tag.m_group === TAG_STUDY_DATE[0]) && (tag.m_element === TAG_STUDY_DATE[1]) &&\r\n        (tag.m_value !== null)) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        const strDateMerged = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n        // eslint-disable-next-line\r\n        const strY = strDateMerged.substring(0, 4);\r\n        // eslint-disable-next-line\r\n        const strM = strDateMerged.substring(4, 6);\r\n        // eslint-disable-next-line\r\n        const strD = strDateMerged.substring(6);\r\n        this.m_dicomInfo.m_studyDate = `${strD}/${strM}/${strY}`;\r\n        // console.log(`m_studyDate = ${this.m_dicomInfo.m_studyDate}`);\r\n      }\r\n      if ((tag.m_group === TAG_STUDY_DESCR[0]) && (tag.m_element === TAG_STUDY_DESCR[1]) &&\r\n        (tag.m_value !== null)) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        const strDescr = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n        this.m_dicomInfo.m_studyDescr = strDescr;\r\n        this.m_dicomInfo.m_studyDescr = this.m_dicomInfo.m_studyDescr.trim();\r\n        // console.log(`m_studyDescr = ${this.m_dicomInfo.m_studyDescr}`);\r\n      }\r\n      if ((tag.m_group === TAG_BODY_PART_EXAMINED[0]) && (tag.m_element === TAG_BODY_PART_EXAMINED[1]) &&\r\n        (tag.m_value !== null)) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        this.m_dicomInfo.m_bodyPartExamined = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n        // console.log(`m_patientName = ${this.m_dicomInfo.m_patientName}`);\r\n      }\r\n\r\n\r\n      if ((tag.m_group === TAG_ACQUISION_TIME[0]) && (tag.m_element === TAG_ACQUISION_TIME[1]) &&\r\n        (tag.m_value !== null)) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        this.m_dicomInfo.m_acquisionTime = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n        // console.log(`m_acquisionTime = ${this.m_dicomInfo.m_acquisionTime}`);\r\n      }\r\n      if ((tag.m_group === TAG_INSTITUTION_NAME[0]) && (tag.m_element === TAG_INSTITUTION_NAME[1]) &&\r\n        (tag.m_value !== null)) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        this.m_dicomInfo.m_institutionName = LoaderDicom.getUtf8StringAt(dv, 0, dataLen);\r\n        this.m_dicomInfo.m_institutionName = this.m_dicomInfo.m_institutionName.trim();\r\n        // console.log(`m_institutionName = ${this.m_dicomInfo.m_institutionName}`);\r\n      }\r\n\r\n      if ((tag.m_group === TAG_OPERATORS_NAME[0]) && (tag.m_element === TAG_OPERATORS_NAME[1]) &&\r\n      (tag.m_value !== null)) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        this.m_dicomInfo.m_operatorsName = LoaderDicom.getUtf8StringAt(dv, 0, dataLen);\r\n        this.m_dicomInfo.m_operatorsName = this.m_dicomInfo.m_operatorsName.trim();\r\n        // console.log(`m_operatorsName = ${this.m_dicomInfo.m_operatorsName}`);\r\n      }\r\n      if ((tag.m_group === TAG_PHYSICANS_NAME[0]) && (tag.m_element === TAG_PHYSICANS_NAME[1]) &&\r\n        (tag.m_value !== null)) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        this.m_dicomInfo.m_physicansName = LoaderDicom.getUtf8StringAt(dv, 0, dataLen);\r\n        this.m_dicomInfo.m_physicansName = this.m_dicomInfo.m_physicansName.trim();\r\n        // console.log(`m_physicansName = ${this.m_dicomInfo.m_physicansName}`);\r\n      }\r\n      if ((tag.m_group === TAG_MANUFACTURER_NAME[0]) && (tag.m_element === TAG_MANUFACTURER_NAME[1]) &&\r\n        (tag.m_value !== null)) {\r\n        const dataLen = tag.m_value.byteLength;\r\n        const dv = new DataView(tag.m_value);\r\n        this.m_dicomInfo.m_manufacturerName = LoaderDicom.getStringAt(dv, 0, dataLen);\r\n        this.m_dicomInfo.m_manufacturerName = this.m_dicomInfo.m_manufacturerName.trim();\r\n        // console.log(`m_manufacturerName = ${this.m_dicomInfo.m_manufacturerName}`);\r\n      }\r\n    } // for all tags readed\r\n    if (!pixelsTagReaded) {\r\n      if (callbackComplete !== undefined) {\r\n        callbackComplete(LoadResult.ERROR_PIXELS_TAG_NOT_FOUND);\r\n      }\r\n      return LoadResult.ERROR_PIXELS_TAG_NOT_FOUND;\r\n    }\r\n    // check transform syntax\r\n    if (this.m_transformSyntax.length > 1) {\r\n      // const decoder = new jpeg.lossless.Decoder();\r\n      // const outBuffer = decoder.decompress(tag.m_value);\r\n      if (callbackComplete !== undefined) {\r\n        callbackComplete(LoadResult.ERROR_COMPRESSED_IMAGE_NOT_SUPPORTED);\r\n      }\r\n      return LoadResult.ERROR_COMPRESSED_IMAGE_NOT_SUPPORTED;\r\n    }\r\n\r\n    // check correct data from tags\r\n    const BITS_IN_BYTE = 8;\r\n    const imageSizeBytes = Math.floor(this.m_xDim * this.m_yDim * (this.m_bitsPerPixel / BITS_IN_BYTE) * this.m_samplesPerPixel);\r\n    if ((imageSizeBytes !== tag.m_value.byteLength) || (pixelBitMask === 0)) {\r\n      console.log(`Wrong image pixels size. Readed ${tag.m_value.byteLength}, but expected ${imageSizeBytes}`);\r\n      if (callbackComplete !== undefined) {\r\n        callbackComplete(LoadResult.ERROR_COMPRESSED_IMAGE_NOT_SUPPORTED);\r\n      }\r\n      return LoadResult.WRONG_HEADER_DATA_SIZE;\r\n    }\r\n\r\n    const numPixels = this.m_xDim * this.m_yDim;\r\n    // const volSlice = this.m_slicesVolume.getNewSlice();\r\n    const volSlice = new DicomSlice();\r\n    if (volSlice === null) {\r\n      console.log('No memory');\r\n      return LoadResult.ERROR_NO_MEMORY;\r\n    }\r\n\r\n    if (this.m_pixelRepresentaionSigned) {\r\n      volSlice.m_image = new Int16Array(numPixels);\r\n    } else {\r\n      volSlice.m_image = new Uint16Array(numPixels);\r\n    }\r\n    if (volSlice.m_image === null) {\r\n      console.log('No memory');\r\n      return LoadResult.ERROR_NO_MEMORY;\r\n    }\r\n    volSlice.m_sliceNumber = this.m_imageNumber;\r\n    volSlice.m_sliceLocation = this.m_sliceLocation;\r\n    volSlice.m_patientName = this.m_dicomInfo.m_patientName;\r\n    volSlice.m_studyDescr = this.m_dicomInfo.m_studyDescr;\r\n    volSlice.m_studyDate = this.m_dicomInfo.m_studyDate;\r\n    volSlice.m_seriesTime = this.m_dicomInfo.m_seriesTime;\r\n    volSlice.m_seriesDescr = this.m_dicomInfo.m_seriesDescr;\r\n    volSlice.m_bodyPartExamined = this.m_dicomInfo.m_bodyPartExamined;\r\n    volSlice.m_institutionName = this.m_dicomInfo.m_institutionName;\r\n    volSlice.m_operatorsName = this.m_dicomInfo.m_operatorsName;\r\n    volSlice.m_physicansName = this.m_dicomInfo.m_physicansName;\r\n    volSlice.buildHash();\r\n\r\n    volSlice.m_xDim = this.m_xDim;\r\n    volSlice.m_yDim = this.m_yDim;\r\n\r\n    // console.log(`patName = ${volSlice.m_patientName}`);\r\n    // console.log(`studyDescr = ${volSlice.m_studyDescr}`);\r\n    // console.log(`studyDate = ${volSlice.m_studyDate}`);\r\n    // console.log(`seriesTime = ${volSlice.m_seriesTime}`);\r\n    // console.log(`seriesDescr = ${volSlice.m_seriesDescr}`);\r\n    // console.log(`bodyPartExamined = ${volSlice.m_bodyPartExamined}`);\r\n\r\n    \r\n\r\n    // Fill slice image\r\n    // const imageDst = this.m_slices[this.m_imageNumber];\r\n    const imageDst = volSlice.m_image;\r\n    const imageSrc = new DataView(tag.m_value);\r\n    if (imageSrc === null) {\r\n      console.log('No memory');\r\n      return LoadResult.ERROR_NO_MEMORY;\r\n    }\r\n\r\n    const BITS_8 = 8;\r\n    const BITS_16 = 16;\r\n    const NUM_1 = 1;\r\n    const NUM_3 = 3;\r\n\r\n    let i;\r\n    if (this.m_bitsPerPixel === BITS_8) {\r\n      if (this.m_samplesPerPixel === NUM_1) {\r\n        for (i = 0; i < numPixels; i++) {\r\n          const val = imageSrc.getUint8(i);\r\n          imageDst[i] = val;\r\n        }\r\n          // if 1 sample per pixel\r\n      } else if (this.m_samplesPerPixel === NUM_3) {\r\n        // if 3 samples per pixel\r\n        let j = 0;\r\n        for (i = 0; i < numPixels; i++, j += 3) {\r\n          const b0 = imageSrc.getUint8(j + 0);\r\n          const b1 = imageSrc.getUint8(j + 1);\r\n          const b2 = imageSrc.getUint8(j + 2);\r\n          // assert(b0 < 256);\r\n          // assert(b1 < 256);\r\n          // assert(b2 < 256);\r\n          imageDst[i] = Math.floor((b0 + b1 + b2) / 3);\r\n        }\r\n      }\r\n    } else if (this.m_bitsPerPixel === BITS_16) {\r\n      let i2 = 0;\r\n      for (i = 0; i < numPixels; i++) {\r\n        let val = imageSrc.getUint16(i2, this.m_littleEndian);\r\n        i2 += SIZE_SHORT;\r\n        imageDst[i] = val;\r\n      } // end for i pixels\r\n    } else { // if 16 bpp\r\n      console.log('TODO: need to implement reading non-8 and non-16 bit dicom images');\r\n    }\r\n    this.m_error = DICOM_ERROR_OK;\r\n\r\n    // add volume slice to slices volume (and manage series)\r\n    this.m_slicesVolume.addSlice(volSlice);\r\n\r\n    // console.log(`Dicom read OK. Volume pixels = ${this.m_xDim} * ${this.m_yDim} * ${this.m_zDim}`);\r\n    if (callbackComplete !== undefined) {\r\n      callbackComplete(LoadResult.SUCCESS);\r\n    }\r\n    return LoadResult.SUCCESS;\r\n  } // end readFromBuffer\r\n\r\n  readFromUrl(volSet, strUrl, callbackProgress, callbackComplete) {\r\n    // check arguments\r\n    console.assert(volSet != null, \"Null volume\");\r\n    console.assert(volSet instanceof VolumeSet, \"Should be volume set\");\r\n    console.assert(strUrl != null, \"Null string url\");\r\n    \r\n    // console.log(`typeof(strUrl) - ${typeof(strUrl)}`);\r\n    console.assert(typeof(strUrl) === 'string', \"Should be string in url\");\r\n    \r\n    // replace file name to 'file_list.txt'\r\n    const ft = new FileTools();\r\n    const isValidUrl = ft.isValidUrl(strUrl);\r\n    if (!isValidUrl) {\r\n      console.log(`readFromUrl: not vaild URL = = ${strUrl} `);\r\n      return false;\r\n    }\r\n    this.m_folder = ft.getFolderNameFromUrl(strUrl);\r\n    const urlFileList = this.m_folder + '/file_list.txt';\r\n    console.log(`readFromUrl: load file = ${urlFileList} `);\r\n\r\n    const fileLoader = new FileLoader(urlFileList);\r\n    this.m_callbackComplete = callbackComplete;\r\n    this.m_callbackProgress = callbackProgress;\r\n    this.m_fileListCounter = 0;\r\n    fileLoader.readFile((arrBuf) => {\r\n      this.m_fileListCounter += 1;\r\n      if (this.m_fileListCounter === 1) {\r\n        const okRead = this.readReadyFileList(volSet, arrBuf, callbackProgress, callbackComplete);\r\n        return okRead;\r\n      }\r\n      return true;\r\n    }, (errMsg) => {\r\n      console.log(`Error read file: ${errMsg}`);\r\n      callbackComplete(LoadResult.ERROR_CANT_OPEN_URL, null, 0, null);\r\n      return false;\r\n    }); // get file from server\r\n    return true;\r\n  }\r\n  readReadyFileList(volSet, arrBuf, callbackProgress, callbackComplete) {\r\n    // check arguments\r\n    console.assert(volSet != null, \"Null volume\");\r\n    console.assert(volSet instanceof VolumeSet, \"Should be volume set\");\r\n    console.assert(arrBuf != null, \"Null array\");\r\n    console.assert(arrBuf.constructor.name === \"ArrayBuffer\", \"Should be ArrayBuf in arrBuf\");\r\n\r\n    const uint8Arr = new Uint8Array(arrBuf);\r\n    // const strFileContent = new TextDecoder('utf-8').decode(uint8Arr);\r\n    const strFileContent = String.fromCharCode.apply(null, uint8Arr);\r\n\r\n    const LEN_LOG = 64;\r\n    const strLog = strFileContent.substr(0, LEN_LOG);\r\n    console.log(`Loaded file list. Started with:  ${strLog} ...`);\r\n\r\n    const arrFileNames = strFileContent.split('\\n');\r\n\r\n    let numFiles = arrFileNames.length;\r\n    // check last empty elements\r\n    const MIN_FILE_NAME_SIZE = 4;\r\n    for (let i = numFiles - 1; i >= 0; i--) {\r\n      if (arrFileNames[i].endsWith('\\r')) {\r\n        arrFileNames[i] = arrFileNames[i].substring(0, arrFileNames[i].length - 1);\r\n      }\r\n      if (arrFileNames[i].length < MIN_FILE_NAME_SIZE) {\r\n        arrFileNames.pop();\r\n      }\r\n    }\r\n    numFiles = arrFileNames.length;\r\n\r\n    this.m_zDim = numFiles;\r\n    console.log(`Loaded file list. ${numFiles} files will be loaded. 1st file in list is = ${arrFileNames[0]}`);\r\n    console.log(`Loaded file list. Last file in list is = ${arrFileNames[numFiles - 1]}`);\r\n\r\n    // declare slices array\r\n    for (let i = 0; i < numFiles; i++) {\r\n      // this.m_slices[i] = null;\r\n      this.m_errors[i] = -1;\r\n      this.m_loaders[i] = null;\r\n    }\r\n\r\n    // physical dimension\r\n    this.m_pixelSpacing = {\r\n      x: 0.0,\r\n      y: 0.0,\r\n      z: 0.0,\r\n    };\r\n    this.m_filesLoadedCounter = 0;\r\n    this.m_numFailsLoad = 0;\r\n    this.m_numLoadedFiles = numFiles;\r\n\r\n    this.m_imagePosMin = {\r\n      // eslint-disable-next-line\r\n      x: +1.0e12,\r\n      // eslint-disable-next-line\r\n      y: +1.0e12,\r\n      // eslint-disable-next-line\r\n      z: +1.0e12\r\n    };\r\n    this.m_imagePosMax = {\r\n      // eslint-disable-next-line\r\n      x: -1.0e12,\r\n      // eslint-disable-next-line\r\n      y: -1.0e12,\r\n      // eslint-disable-next-line\r\n      z: -1.0e12\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n    this.m_sliceLocMin = +1.0e12;\r\n    // eslint-disable-next-line\r\n    this.m_sliceLocMax = -1.0e12;\r\n\r\n    for (let i = 0; (i < this.m_numLoadedFiles) && (this.m_numFailsLoad < 1); i++) {\r\n      const urlFile = `${this.m_folder}/${arrFileNames[i]}`;\r\n      // console.log(`Loading (${i})-th url: ${urlFile}`);\r\n      this.m_loaders[i] = new FileLoader(urlFile);\r\n      const loader = this.m_loaders[i];\r\n      const NOT_FROM_GOOGLE = false;\r\n      // let volDst = volSet.getVolume(0);\r\n      //if (volDst === null) {\r\n      //  volDst = new Volume();\r\n      //  volSet.addVolume(volDst);\r\n      // } \r\n      const okLoader = this.runLoader(volSet, arrFileNames[i], loader, i, callbackProgress, callbackComplete, NOT_FROM_GOOGLE);\r\n      if (!okLoader) {\r\n        return false;\r\n      }\r\n    }  // for i all files-slices in folder\r\n    return true;\r\n  } // end readReadyFileList(arrBuf)\r\n  /**\r\n  * Run loader to read dicom file\r\n  * @param {object} volSet - destination volum set\r\n  * @param {string} fileName - File to read\r\n  * @param {object} loader - loader object with file inside\r\n  * @param {number} i - index of file in files array\r\n  * @param {func} callbackProgress - callback for continiuos load reporting\r\n  * @param {func} callbackComplete - callback after load finish\r\n  * @param {bool} fromGoogle - true, if from google store\r\n  *\r\n  */\r\n  runLoader(volSet, fileName, loader, i, callbackProgress, callbackComplete, fromGoogle) {\r\n    this.m_fromGoogle = fromGoogle;\r\n    // console.log(`Loading url: ${fileName}`);\r\n    loader.readFile((fileArrBu) => {\r\n      const ratioLoaded = this.m_filesLoadedCounter / this.m_numLoadedFiles;\r\n      const VAL_MASK = 7;\r\n      if ((callbackProgress !== undefined) && ((this.m_filesLoadedCounter & VAL_MASK) === 0)) {\r\n        callbackProgress(ratioLoaded);\r\n      }\r\n      if ((callbackProgress !== undefined) &&\r\n        (this.m_filesLoadedCounter + 1 === this.m_numLoadedFiles)) {\r\n        callbackProgress(1.0);\r\n      }\r\n      this.m_newTagEvent.detail.fileName = fileName;\r\n\r\n      let status;\r\n      if (this.m_fromGoogle) {\r\n        status = this.readFromGoogleBuffer(i, fileName, ratioLoaded, fileArrBu, callbackProgress, callbackComplete);\r\n      } else {\r\n        status = this.readFromBuffer(i, fileName, ratioLoaded, fileArrBu, callbackProgress, callbackComplete);\r\n      }\r\n\r\n      if ((status !== LoadResult.SUCCESS) && (this.m_numFailsLoad === 0)) {\r\n        this.m_numFailsLoad += 1;\r\n        if (callbackComplete !== null) {\r\n          callbackComplete(status, null, 0, null, fileName);\r\n          return false;\r\n        }\r\n      }\r\n      // update total files counter\r\n      this.m_filesLoadedCounter += 1;\r\n      if (DEBUG_PRINT_INDI_SLICE_INFO) {\r\n        console.log(`Loaded local indi slice: ${fileName}. Total loaded slices: ${this.m_filesLoadedCounter}`);\r\n      }\r\n      // console.log(`!!!!!!!!! m_filesLoadedCounter = ${this.m_filesLoadedCounter} / ${this.m_numLoadedFiles}`);\r\n\r\n      if (this.m_filesLoadedCounter === this.m_numLoadedFiles) {\r\n        // Finalize physic dimension\r\n        if (DEBUG_PRINT_TAGS_INFO) {\r\n          console.log(`slice location (min, max) = ${this.m_sliceLocMin}, ${this.m_sliceLocMax}`);\r\n        }\r\n        const imagePosBox = {\r\n          x: this.m_imagePosMax.x - this.m_imagePosMin.x,\r\n          y: this.m_imagePosMax.y - this.m_imagePosMin.y,\r\n          z: this.m_imagePosMax.z - this.m_imagePosMin.z\r\n        };\r\n        const TOO_MIN = 0.00001;\r\n        let zBox;\r\n        if (Math.abs(this.m_pixelSpacing.z) > TOO_MIN) {\r\n          zBox = this.m_pixelSpacing.z * this.m_zDim;\r\n        } else {\r\n          zBox = imagePosBox.z;\r\n          if (Math.abs(zBox) < TOO_MIN) {\r\n            zBox = imagePosBox.x;\r\n            if (Math.abs(zBox) < TOO_MIN) {\r\n              zBox = imagePosBox.y;\r\n            }\r\n          }\r\n        } // if pixel spacing 0\r\n        if (zBox < TOO_MIN) {\r\n          zBox = 1.0;\r\n        }\r\n\r\n        this.m_pixelSpacing.z = zBox / this.m_zDim;\r\n        this.m_boxSize.z = this.m_zDim * this.m_pixelSpacing.z;\r\n        this.m_boxSize.x = this.m_xDim * this.m_pixelSpacing.x;\r\n        this.m_boxSize.y = this.m_yDim * this.m_pixelSpacing.y;\r\n        console.log(`Volume local phys dim: ${this.m_boxSize.x} * ${this.m_boxSize.y} * ${this.m_boxSize.z}`);\r\n        // TODO: add hash\r\n        let series = this.m_slicesVolume.getSeries();\r\n        if (series.length === 0) {\r\n          this.m_slicesVolume.buildSeriesInfo();\r\n          series = this.m_slicesVolume.getSeries();\r\n        }\r\n        const indexSerie = 0;\r\n        const hash = series[indexSerie].m_hash;\r\n        const errStatus = this.createVolumeFromSlices(volSet, indexSerie,  hash);\r\n        if (callbackComplete !== null) {\r\n          callbackComplete(errStatus);\r\n          return true;\r\n        }\r\n      } // if last file was loaded\r\n      return true;\r\n    }, (errMsg) => {\r\n      console.log(`Error read file: ${errMsg}`);\r\n      return false;\r\n    }); // end of readfile\r\n    return true;\r\n  } // end runLoader\r\n\r\n\r\n\r\n} // end class LoaderDicom\r\n\r\nexport default LoaderDicom;\r\n\r\n ","/*\r\nLicensed to the Apache Software Foundation (ASF) under one\r\nor more contributor license agreements.  See the NOTICE file\r\ndistributed with this work for additional information\r\nregarding copyright ownership.  The ASF licenses this file\r\nto you under the Apache License, Version 2.0 (the\r\n'License'); you may not use this file except in compliance\r\nwith the License.  You may obtain a copy of the License at\r\n\r\n  http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing,\r\nsoftware distributed under the License is distributed on an\r\n'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, either express or implied.  See the License for the\r\nspecific language governing permissions and limitations\r\nunder the License.\r\n*/\r\n\r\n/**\r\n/**\r\n* File load from local disk or URL with promise to complete\r\n* @module demo/engine.loaders/loadpromise\r\n*/\r\n\r\n// ******************************************************************\r\n// class LoadFilePromise\r\n// ******************************************************************\r\n\r\n/** Class LoadFilePromise implements local and remote (via URL) file reading functionality via Promises */\r\nexport default class LoadFilePromise {\r\n  constructor() {\r\n    this.m_file = null;\r\n    this.m_reader = null;\r\n    this.m_request = null;\r\n  }\r\n\r\n  /**\r\n  * Read local file. If success, invoke resolve callback for created promise\r\n  *\r\n  * @param {object} file - file to read\r\n  * @return {object} Promise, working after file will be read\r\n  */\r\n  readLocal(file) {\r\n    return new Promise((resolve) => {\r\n      this.m_file = file;\r\n      this.m_reader = new FileReader();\r\n      this.m_reader.addEventListener('load', (evt) => {\r\n        const arrBuf = evt.target.result;\r\n        if (resolve) {\r\n          resolve(arrBuf);\r\n        }\r\n      });\r\n      this.m_reader.readAsArrayBuffer(this.m_file);\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Read remote file (via promise). If success, invoke resolve callback for created promise\r\n  *\r\n  * @param {string} url - file to read\r\n  * @return {object} Promise, working after file will be read\r\n  */\r\n  readFromUrl(url) {\r\n    return new Promise((resolve, reject) => {\r\n      this.m_url = url;\r\n      this.m_request = null;\r\n      const METHOD = 'GET';\r\n      this.m_request = new XMLHttpRequest();\r\n      if ('withCredentials' in this.m_request) {\r\n        // this.m_request.withCredentials = true;\r\n        const NEED_ASYNC = true;\r\n        this.m_request.open(METHOD, this.m_url, NEED_ASYNC);\r\n        // } else if (typeof XDomainRequest !== 'undefined') {\r\n        // console.log('HttpRequest: XDomainRequest will be used');\r\n        // this.m_request = new XDomainRequest();\r\n        // this.m_request.open(METHOD, this.m_url);\r\n      } else {\r\n        this.m_request = null;\r\n        console.log('This browser cant support CORS requests');\r\n        return;\r\n      }\r\n      this.m_request.responseType = 'arraybuffer';  // \"blob\"\r\n      this.m_request.addEventListener('load', (event) => {\r\n        const arrBuf = event.target.response;\r\n        if (arrBuf === null) {\r\n          console.log('Bad response type. Expect object type in response.');\r\n        } else {\r\n          resolve(arrBuf);\r\n        }\r\n      }, false);\r\n\r\n      this.m_request.addEventListener('error', (event) => {\r\n        const strError = `Error event happend for XMLHttpRequest: loaded = ${event.loaded}, total = ${event.total}`;\r\n        console.log(strError);\r\n        reject(strError);\r\n      }, false);\r\n      this.m_request.send();\r\n    });\r\n  }\r\n}\r\n","/**\r\n * @fileOverview LoaderHdr\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n// ********************************************************\r\n// Imports\r\n// ********************************************************\r\n\r\nimport LoadResult from '../LoadResult';\r\nimport FileTools from './FileTools';\r\nimport LoadFilePromise from './LoadPromise';\r\nimport Volume from '../Volume';\r\nimport VolumeSet from '../VolumeSet';\r\n\r\n\r\n// ********************************************************\r\n// Const\r\n// ********************************************************\r\n\r\n// const NEED_EVEN_TEXTURE_SIZE = false;\r\n\r\nconst HDR_DT_NONE = 0;\r\nconst HDR_DT_UNSIGNED_CHAR = 2;\r\nconst HDR_DT_SIGNED_SHORT = 4;\r\n\r\n// ********************************************************\r\n// Class\r\n// ********************************************************\r\n\r\n/**\r\n * Class LoaderHdr some text later...\r\n */\r\nclass LoaderHdr {\r\n  static readByteFromBuffer(buf, off) {\r\n    return buf[off];\r\n  }\r\n\r\n  /**\r\n  * Read 32 bit integer from input buffer\r\n  * @param {object} buf - source buffer\r\n  * @param {number} off - offset in buffer\r\n  * @return 32 bit integer number\r\n  */\r\n  static readIntFromBuffer(buf, off) {\r\n    const res = ((buf[off + 0]) |\r\n      // eslint-disable-next-line\r\n      (buf[off + 1] << 8) |\r\n      // eslint-disable-next-line\r\n      (buf[off + 2] << 16) |\r\n      // eslint-disable-next-line\r\n      (buf[off + 3] << 24)\r\n    );\r\n    return res;\r\n  }\r\n\r\n  /**\r\n  * Read 16 bit short integer from input buffer\r\n  * @param {object} buf - source buffer\r\n  * @param {number} off - offset in buffer\r\n  * @return 16 bit short integer number\r\n  */\r\n  static readShortFromBuffer(buf, off) {\r\n    // eslint-disable-next-line\r\n    const res = ((buf[off + 0]) | (buf[off + 1] << 8));\r\n    return res;\r\n  }\r\n\r\n  /**\r\n  * Read 32 bit float from input buffer\r\n  * @param {object} buf - source buffer\r\n  * @param {number} off - offset in buffer\r\n  * @return 32 bit float number\r\n  */\r\n  static readFloatFromBuffer(buf, off) {\r\n    const BYTES_IN_FLOAT = 4;\r\n    const arBuf = new ArrayBuffer(BYTES_IN_FLOAT);\r\n    const dataArray = new DataView(arBuf);\r\n    // eslint-disable-next-line\r\n    dataArray.setUint8(0, buf[off + 0]);\r\n    // eslint-disable-next-line\r\n    dataArray.setUint8(1, buf[off + 1]);\r\n    // eslint-disable-next-line\r\n    dataArray.setUint8(2, buf[off + 2]);\r\n    // eslint-disable-next-line\r\n    dataArray.setUint8(3, buf[off + 3]);\r\n    const IS_LITTLE_ENDIAN = true;\r\n    const res = dataArray.getFloat32(0, IS_LITTLE_ENDIAN);\r\n    return res;\r\n  }\r\n\r\n  /**\r\n  * Convert DataView object into string\r\n  * @param {object} buf - buffer\r\n  * @param {number} off - current offset in buffer, when string started\r\n  * @param {number} lengthBuf - number of bytes to convert to string\r\n  * @return {string} string presentation of DataView\r\n  */\r\n  static getStringAt(buf, off, lengthBuf) {\r\n    let str = '';\r\n    for (let i = 0; i < lengthBuf; i++) {\r\n      const ch = buf[off + i];\r\n      if (ch === 0) {\r\n        break;\r\n      }\r\n      str += String.fromCharCode(ch);\r\n    }\r\n    return str;\r\n  }\r\n\r\n  //\r\n  // read header file\r\n  //\r\n  readFromBufferHeader(volumeDst, arrBuf, callbackProgress, callbackComplete) {\r\n    // check arguments\r\n    console.assert(volumeDst != null, \"Null volume\");\r\n    console.assert(volumeDst instanceof Volume, \"Should be volume\");\r\n    console.assert(arrBuf != null, \"Null array\");\r\n    console.assert(arrBuf.constructor.name === \"ArrayBuffer\", \"Should be ArrayBuf in arrBuf\");\r\n\r\n    const bufBytes = new Uint8Array(arrBuf);\r\n    const bufLen = bufBytes.length;\r\n    const HDR_HEADER_SIZE = 348;\r\n    // console.log(`Header buf size === ${bufLen}`);\r\n    if (bufLen !== HDR_HEADER_SIZE) {\r\n      if (callbackComplete) {\r\n        callbackComplete(LoadResult.WRONG_HEADER_DATA_SIZE, null, 0, null);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const SIZE_DWORD = 4;\r\n    const SIZE_SHORT = 2;\r\n    const SIZE_BYTE = 1;\r\n\r\n    let bufOff = 0;\r\n    // read sizeof header\r\n    const sizeofHdr = LoaderHdr.readIntFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n    if (sizeofHdr !== HDR_HEADER_SIZE) {\r\n      console.log(`Hdr first int wrong: ${sizeofHdr}, but should be ${HDR_HEADER_SIZE}`);\r\n      if (callbackComplete) {\r\n        callbackComplete(LoadResult.BAD_HEADER, null, 0, null);\r\n      }\r\n      return false;\r\n    }\r\n    const ONE = 1;\r\n    const TWO = 2;\r\n\r\n    // read dataType char[10]\r\n    const DATA_TYPE_LEN = 10;\r\n    const strDataType = LoaderHdr.getStringAt(bufBytes, bufOff, DATA_TYPE_LEN);\r\n    bufOff += DATA_TYPE_LEN;\r\n    volumeDst.m_dataType = HDR_DT_NONE;\r\n    if (strDataType === 'CHAR') {\r\n      volumeDst.m_dataType = HDR_DT_UNSIGNED_CHAR;\r\n      volumeDst.m_bytesPerVoxel = ONE;\r\n    }\r\n    if (strDataType === 'SHORT') {\r\n      volumeDst.m_dataType = HDR_DT_SIGNED_SHORT;\r\n      volumeDst.m_bytesPerVoxel = TWO;\r\n    }\r\n    if (volumeDst.m_dataType === HDR_DT_NONE) {\r\n      console.log(`Hdr wrong data type. Should be CHAR or SHORT, but found: ${strDataType}`);\r\n      if (callbackComplete) {\r\n        callbackComplete(LoadResult.BAD_HEADER, null, 0, null);\r\n      }\r\n      return false;\r\n    }\r\n    console.log(`Hdr read data type = ${strDataType}`);\r\n\r\n    // read dbName char[18]\r\n    const DB_NAME_LEN = 18;\r\n    bufOff += DB_NAME_LEN;\r\n\r\n    // reads extents int\r\n    const iExtents = LoaderHdr.readIntFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n    const MAGIC_EXTENTS = 16384;\r\n    if (iExtents !== MAGIC_EXTENTS) {\r\n      console.log(`Hdr wrong extents in header. Should be ${MAGIC_EXTENTS}, but found: ${iExtents}`);\r\n      if (callbackComplete) {\r\n        callbackComplete(LoadResult.BAD_HEADER, null, 0, null);\r\n      }\r\n      return false;\r\n    }\r\n    // read session error\r\n    // const iSessionError = HdrVolume.readShortFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n\r\n    // read regular\r\n    const iRegular = LoaderHdr.readByteFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_BYTE;\r\n\r\n    const  MAGIC_REGULAR = 114;\r\n    if (iRegular !== MAGIC_REGULAR) {\r\n      console.log(`Hdr wrong regular in header. Should be ${MAGIC_REGULAR}, but found: ${iRegular}`);\r\n      if (callbackComplete) {\r\n        callbackComplete(LoadResult.BAD_HEADER, null, 0, null);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    // read hKeyUn\r\n    // const hKeyUn = HdrVolume.readByteFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_BYTE;\r\n\r\n    // read ushort dim[8]\r\n    // const dim0 = HdrVolume.readShortFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n    const dim1 = LoaderHdr.readShortFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n    const dim2 = LoaderHdr.readShortFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n    const dim3 = LoaderHdr.readShortFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n\r\n    volumeDst.m_xDim = dim1;\r\n    volumeDst.m_yDim = dim2;\r\n    volumeDst.m_zDim = dim3;\r\n    console.log(`HDR: volume dim = ${volumeDst.m_xDim} * ${volumeDst.m_yDim} * ${volumeDst.m_zDim} `);\r\n\r\n    // read unused dim [4,5,6,7]\r\n    const NUM_DIM_UNUSED = 4;\r\n    bufOff += SIZE_SHORT * NUM_DIM_UNUSED;\r\n\r\n    // read voxUnits\r\n    const VOX_UNITS_SIZE = 4;\r\n    bufOff += VOX_UNITS_SIZE;\r\n\r\n    // read calUnits char[8]\r\n    const CAL_UNITS_SIZE = 8;\r\n    bufOff += CAL_UNITS_SIZE;\r\n\r\n    // read unused\r\n    // const unusedH = HdrVolume.readShortFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n\r\n    // read dataType\r\n    const dataTypeH = LoaderHdr.readShortFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n    if (volumeDst.m_dataType === HDR_DT_UNSIGNED_CHAR) {\r\n      if (dataTypeH !== HDR_DT_UNSIGNED_CHAR) {\r\n        console.log('Wrong data tye for char typed header');\r\n        return false;\r\n      }\r\n    }\r\n    if (volumeDst.m_dataType === HDR_DT_SIGNED_SHORT) {\r\n      if (dataTypeH !== HDR_DT_SIGNED_SHORT) {\r\n        console.log('Wrong data tye for signed short typed header');\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // read bitPix\r\n    const BITS_IN_CHAR = 8;\r\n    const BITS_IN_WORD = 16;\r\n\r\n    const bitPixH = LoaderHdr.readShortFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n    if (volumeDst.m_dataType === HDR_DT_UNSIGNED_CHAR) {\r\n      if (bitPixH !== BITS_IN_CHAR) {\r\n        console.log('Wrong bits pix for char typed header');\r\n        return false;\r\n      }\r\n    }\r\n    if (volumeDst.m_dataType === HDR_DT_SIGNED_SHORT) {\r\n      if (bitPixH !== BITS_IN_WORD) {\r\n        console.log('Wrong bits pix for word typed header');\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // read dimUn\r\n    // const dimUn = HdrVolume.readShortFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n\r\n    // read pixDim : voxelDim\r\n    // const pixDim0 = HdrVolume.readFloatFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n    const pixDim1 = LoaderHdr.readFloatFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n    const pixDim2 = LoaderHdr.readFloatFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n    const pixDim3 = LoaderHdr.readFloatFromBuffer(bufBytes, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n\r\n    // read rest of pixDim\r\n    const NUM_REST_PIX_DIM = 4;\r\n    bufOff += SIZE_DWORD * NUM_REST_PIX_DIM;\r\n\r\n    volumeDst.m_boxSize.x = volumeDst.m_xDim * pixDim1;\r\n    volumeDst.m_boxSize.y = volumeDst.m_yDim * pixDim2;\r\n    volumeDst.m_boxSize.z = volumeDst.m_zDim * pixDim3;\r\n    console.log(`HDR: physic size = ${volumeDst.m_boxSize.x} * ${volumeDst.m_boxSize.y} * ${volumeDst.m_boxSize.z} `);\r\n\r\n    return true;\r\n  }\r\n\r\n  //\r\n  // read image file\r\n  //\r\n  readFromBufferImage(volumeDst, arrBuf, callbackProgress, callbackComplete) {\r\n    // check arguments\r\n    console.assert(volumeDst != null, \"Null volume\");\r\n    console.assert(volumeDst instanceof Volume, \"Should be volume\");\r\n    console.assert(arrBuf != null, \"Null array\");\r\n    console.assert(arrBuf.constructor.name === \"ArrayBuffer\", \"Should be ArrayBuf in arrBuf\");\r\n\r\n    const bufBytes = new Uint8Array(arrBuf);\r\n    const bufLen = bufBytes.length;\r\n    const MIN_BUF_SIZE = 8;\r\n    const MAX_BUF_SIZE = (1024 * 1024 * 230);\r\n    if (bufLen < MIN_BUF_SIZE) {\r\n      if (callbackComplete) {\r\n        callbackComplete(LoadResult.ERROR_TOO_SMALL_DATA_SIZE , null, 0, null);\r\n      }\r\n      return false;\r\n    }\r\n    if (bufLen >= MAX_BUF_SIZE) {\r\n      if (callbackComplete) {\r\n        callbackComplete(LoadResult.ERROR_TOO_LARGE_DATA_SIZE , null, 0, null);\r\n      }\r\n      return false;\r\n    }\r\n    volumeDst.m_imageBufferSize = bufLen;\r\n    volumeDst.m_arrBuf = arrBuf;\r\n    console.log(`readFromBufferImage complete with ${bufLen} bytes in image `);\r\n    return true;\r\n  } // end readFromBufferImage\r\n\r\n  //\r\n  // create volume from 2 components\r\n  //\r\n  createVolumeFromHeaderAndImage(volDst) {\r\n    // check arguments\r\n    console.assert(volDst != null, \"Null volume\");\r\n    console.assert(volDst instanceof Volume, \"Should be volume\");\r\n  \r\n    const NUM_BYTES_CHAR = 1;\r\n    const NUM_BYTES_WORD = 2;\r\n\r\n    let bytesPerPixel = 0;\r\n    if (volDst.m_dataType === HDR_DT_UNSIGNED_CHAR) {\r\n      bytesPerPixel = NUM_BYTES_CHAR;\r\n    }\r\n    if (volDst.m_dataType === HDR_DT_SIGNED_SHORT) {\r\n      bytesPerPixel = NUM_BYTES_WORD;\r\n    }\r\n    const numPixels = volDst.m_xDim * volDst.m_yDim * volDst.m_zDim;\r\n    const estimatedVolSize = numPixels * bytesPerPixel;\r\n    if (estimatedVolSize !== volDst.m_imageBufferSize) {\r\n      console.log(`HDR: wrong IMG data size. Read: ${volDst.m_imageBufferSize}, but expected ${estimatedVolSize} `);\r\n      return false;\r\n    }\r\n    const arrBuf = volDst.m_arrBuf;\r\n    if (volDst.m_dataType === HDR_DT_SIGNED_SHORT) {\r\n      const dataArray16 = new Uint16Array(arrBuf);\r\n      volDst.m_dataArray = new Uint8Array(numPixels);\r\n      // convert 16 bpp -> 8 bpp\r\n      let i;\r\n      let valMax = 0;\r\n      for (i = 0; i < numPixels; i++) {\r\n        valMax = (dataArray16[i] > valMax) ? dataArray16[i] : valMax;\r\n      }\r\n      // console.log(`IMG: maximum input color is ${valMax}`);\r\n      valMax++;\r\n\r\n      // scale down to 256 colors\r\n      const MAX_COLOR_BYTE = 255;\r\n      for (i = 0; i < numPixels; i++) {\r\n        volDst.m_dataArray[i] = Math.floor(MAX_COLOR_BYTE * dataArray16[i] / valMax);\r\n      }\r\n    } else if (volDst.m_dataType === HDR_DT_UNSIGNED_CHAR) {\r\n      // Read color indices info: usually this is 1 bpp data\r\n      const bufBytes = new Uint8Array(arrBuf);\r\n      volDst.m_dataArray = bufBytes;\r\n    }\r\n\r\n    // save to result volume\r\n    const ONE = 1;\r\n    volDst.m_bytesPerVoxel = ONE;\r\n    volDst.m_dataSize = volDst.m_imageBufferSize;\r\n    return true;\r\n  }\r\n\r\n  //\r\n  // create vol from 2 volumes: intensity and hdr\r\n  //\r\n  createRoiVolumeFromHeaderAndImage(volDst, volRoi) {\r\n    // check arguments\r\n    console.assert(volDst != null, \"Null volume\");\r\n    console.assert(volDst instanceof Volume, \"Should be volume\");\r\n    console.assert(volRoi != null, \"Null volume\");\r\n    console.assert(volRoi instanceof Volume, \"Should be volume\");\r\n\r\n    // both volumes are in 1 byte format\r\n    const ONE = 1;\r\n    if (volDst.m_bytesPerVoxel !== ONE) {\r\n      console.log('createRoiVolumeFromHeaderAndImage: bad volDst. m_bytesPerVoxel should be 1');\r\n      return false;\r\n    }\r\n    if (volRoi.m_bytesPerVoxel !== ONE) {\r\n      console.log('createRoiVolumeFromHeaderAndImage: bad volRoi');\r\n      return false;\r\n    }\r\n    // compare size\r\n    if ((volDst.m_xDim !== volRoi.m_xDim) || (volDst.m_yDim !== volRoi.m_yDim) || (volDst.m_zDim !== volRoi.m_zDim)) {\r\n      console.log('createRoiVolumeFromHeaderAndImage: different volumes sizes');\r\n      return false;\r\n    }\r\n    const numPixels = volDst.m_xDim * volDst.m_yDim * volDst.m_zDim;\r\n    const BYTES_IN_RGBA = 4;\r\n    const dataNew = new Uint8Array(numPixels * BYTES_IN_RGBA);\r\n\r\n    const arrBuf = volRoi.m_arrBuf;\r\n    const dataArrayRoi8 = new Uint8Array(arrBuf);\r\n\r\n    const OFF0 = 0; const OFF1 = 1;\r\n    const OFF2 = 2; const OFF3 = 3;\r\n    let j = 0;\r\n    for (let i = 0; i < numPixels; i++, j += BYTES_IN_RGBA) {\r\n      dataNew[j + OFF0] = volDst.m_dataArray[i];\r\n      dataNew[j + OFF1] = 0;\r\n      dataNew[j + OFF2] = 0;\r\n      dataNew[j + OFF3] = dataArrayRoi8[i];\r\n    }\r\n    volDst.m_dataArray = dataNew;\r\n    const FOUR = 4;\r\n    volDst.m_bytesPerVoxel = FOUR;\r\n    console.log('createRoiVolumeFromHeaderAndImage: success');\r\n    return true;\r\n  } //\r\n\r\n  /**\r\n   * Read hdr (h + img) files from URL\r\n   * \r\n   * @param {object} volSet - volume set\r\n   * @param {string} strUrl - url string\r\n   * @param {func} callbackProgress - callback during read progress\r\n   * @param {func} callbackComplete - callback after complete (good or bad)\r\n   * @return true, if success\r\n   */\r\n  readFromUrl(volSet, strUrl, callbackProgress, callbackComplete) {\r\n    console.log(`readFromUrl. going to read from ${strUrl} ...`);\r\n\r\n    const ft = new FileTools();\r\n    const isValidUrl = ft.isValidUrl(strUrl);\r\n    if (!isValidUrl) {\r\n      console.log(`readFromUrl: not vaild URL = = ${strUrl} `);\r\n      return false;\r\n    }\r\n    this.m_folder = ft.getFolderNameFromUrl(strUrl);\r\n    const fileName = ft.getFileNameFromUrl(strUrl);\r\n    // console.log(`readFromUrl: folder =  ${this.m_folder} filename = ${fileName}`);\r\n\r\n    const regExp = /(\\w+)_intn.(h|hdr)/;\r\n    const arrGrp = regExp.exec(fileName);\r\n    if (arrGrp.length !== 3) {\r\n      console.log(`LoaderHdr.readFromUrl: bad URL name = ${strUrl}. Should be in template NNN_intn.h `);\r\n      return false;\r\n    }\r\n    const namePrefix = arrGrp[1];\r\n    //console.log(`readFromUrl: name prefix = ${namePrefix}, grpLen = ${arrGrp.length}`);\r\n\r\n    const fileNameIntensityHeader = this.m_folder + '/' + namePrefix + '_intn.h';\r\n    const fileNameIntensityImage = this.m_folder + '/' + namePrefix + '_intn.img';\r\n    const fileNameMaskHeader = this.m_folder + '/' + namePrefix + '_mask.h';\r\n    const fileNameMaskImage = this.m_folder + '/' + namePrefix + '_mask.img';\r\n\r\n\r\n    const arrUrls = [];\r\n    arrUrls.push(fileNameIntensityHeader);\r\n    arrUrls.push(fileNameIntensityImage);\r\n    arrUrls.push(fileNameMaskHeader);\r\n    arrUrls.push(fileNameMaskImage);\r\n    const ok = this.readFromUrls(arrUrls, volSet, callbackProgress, callbackComplete);\r\n\r\n    return ok;\r\n  } // end of readFromUrl\r\n\r\n  /**\r\n   * \r\n   * @param {object} arrUrls  - array of strings urls\r\n   * @param {*} volSet  - dest volume set\r\n   * @param {*} callbackProgress - callback during read\r\n   * @param {*} callbackComplete - callback after end fo read\r\n   */\r\n  readFromUrls(arrUrls, volSet, callbackProgress, callbackComplete) {\r\n\r\n    // check arguments\r\n    console.assert(volSet != null, \"Null volume set\");\r\n    console.assert(volSet instanceof VolumeSet, \"Should be volume set\");\r\n    \r\n\r\n    const numUrls = arrUrls.length;\r\n    const NUM_URLS_IN_SET = 2;\r\n    const NUM_FILES_VOL_INT_ROI = 4;\r\n    if (numUrls === NUM_URLS_IN_SET) {\r\n      let urlHdr = arrUrls[0];\r\n      let urlImg = arrUrls[1];\r\n      const loaderHdr = new LoadFilePromise();\r\n      const loaderImg = new LoadFilePromise();\r\n      let indPointH = urlHdr.indexOf('.h');\r\n      if (indPointH === -1) {\r\n        indPointH = urlHdr.indexOf('.hdr');\r\n      }\r\n      if (indPointH === -1) {\r\n        const strCopy = urlHdr;\r\n        urlHdr = urlImg;\r\n        urlImg = strCopy;\r\n      }\r\n\r\n      // this.m_volIntensity = new HdrVolume(this.m_needScaleDownTexture);\r\n\r\n      const volDst = volSet.getVolume(0);\r\n      loaderHdr.readFromUrl(urlHdr).then((arrBufHdr) => {\r\n        this.readFromBufferHeader(volDst, arrBufHdr, callbackComplete, callbackProgress);\r\n        console.log(`Load success HDR file: ${urlHdr}`);\r\n        loaderImg.readFromUrl(urlImg).then((arrBufImg) => {\r\n          this.readFromBufferImage(volDst, arrBufImg, callbackComplete, callbackProgress);\r\n          console.log(`Load success IMG file: ${urlImg}`);\r\n\r\n          // complete 2 images\r\n          this.createVolumeFromHeaderAndImage(volDst);\r\n\r\n          // invoke callback for good loading end\r\n          callbackComplete(LoadResult.SUCCESS);\r\n\r\n        });\r\n      }, (error) => {\r\n        console.log('HDR File read error', error);\r\n        callbackComplete(LoadResult.ERROR_CANT_OPEN_URL, null, 0, null);\r\n        return false;\r\n      });\r\n    } else if (numUrls === NUM_FILES_VOL_INT_ROI) {\r\n      // read 4 files\r\n      const urlHdrInt = arrUrls[0];\r\n      const urlImgInt = arrUrls[1];\r\n      const urlHdrRoi = arrUrls[2];\r\n      const urlImgRoi = arrUrls[3];\r\n\r\n      const loaderHdrInt = new LoadFilePromise();\r\n      const loaderImgInt = new LoadFilePromise();\r\n      const loaderHdrRoi = new LoadFilePromise();\r\n      const loaderImgRoi = new LoadFilePromise();\r\n\r\n      // this.m_volIntensity = new HdrVolume(this.m_needScaleDownTexture);\r\n      // this.m_volRoi = new HdrVolume(this.m_needScaleDownTexture);\r\n\r\n      const volRoi = new Volume();\r\n      const volDst = volSet.getVolume(0);\r\n\r\n      loaderHdrInt.readFromUrl(urlHdrInt).then((arrBufHdr) => {\r\n        // this.m_volIntensity.readBufferHead(arrBufHdr, callbackComplete, callbackProgress);\r\n        // this.readBufferHead(arrBufHdr, callbackComplete, callbackProgress);\r\n        this.readFromBufferHeader(volDst, arrBufHdr, callbackComplete, callbackProgress);\r\n\r\n        console.log(`Load success HDR file: ${urlHdrInt}`);\r\n        loaderImgInt.readFromUrl(urlImgInt).then((arrBufImg) => {\r\n          // this.m_volIntensity.readBufferImg(arrBufImg, callbackComplete, callbackProgress);\r\n          // this.readBufferImg(arrBufImg, callbackComplete, callbackProgress);\r\n          this.readFromBufferImage(volDst, arrBufImg, callbackComplete, callbackProgress);\r\n          console.log(`Load success IMG file: ${urlImgInt}`);\r\n\r\n          loaderHdrRoi.readFromUrl(urlHdrRoi).then((arrBufferHdr) => {\r\n            //this.m_volRoi.readBufferHead(arrBufferHdr, callbackComplete, callbackProgress);\r\n            this.readFromBufferHeader(volRoi, arrBufferHdr, callbackComplete, callbackProgress);\r\n\r\n            loaderImgRoi.readFromUrl(urlImgRoi).then((arrBufferImg) => {\r\n\r\n              // this.m_volRoi.readBufferImg(arrBufferImg, callbackComplete, callbackProgress);\r\n              this.readFromBufferImage(volRoi, arrBufferImg, callbackComplete, callbackProgress);\r\n\r\n              // transform intensity data from 16 bpp -> 8 bpp\r\n              this.createVolumeFromHeaderAndImage(volDst);\r\n\r\n              // mix intensity + roi\r\n              this.createRoiVolumeFromHeaderAndImage(volDst, volRoi);\r\n\r\n              // invoke callback for good loading end\r\n              callbackComplete(LoadResult.SUCCESS);\r\n\r\n            }); // loaderImgRoi\r\n          }); // loaderHdrRoi\r\n\r\n        }); // loaderImgInt\r\n      }, (error) => {\r\n        console.log('HDR File read error', error);\r\n        return false;\r\n      }); // loaderHdrInt\r\n\r\n    } else {\r\n      console.log(`Error read hdr files. Should be ${NUM_URLS_IN_SET} files`);\r\n      return false;\r\n    }// if number of files equal to 2\r\n    return true;\r\n  } // end of readFromUrls\r\n} // end class LoaderHdr\r\n\r\nexport default LoaderHdr;\r\n","/**\r\n * @fileOverview VolumeSet\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n// ********************************************************\r\n// Imports\r\n// ********************************************************\r\n\r\nimport React from 'react';\r\n\r\nimport Volume from './Volume';\r\n\r\nimport LoaderKtx from './loaders/LoaderKtx';\r\nimport LoaderNifti from './loaders/LoaderNifti';\r\nimport LoaderDicom from './loaders/LoaderDicom';\r\nimport LoaderHdr from './loaders/LoaderHdr';\r\n\r\n// ********************************************************\r\n// Const\r\n// ********************************************************\r\n\r\n/** \r\n * Class representing a volume set \r\n * Typically set contains only 1 volume, but for some Dicom folders it can be more then 1 \r\n * See Volume class as an element of volume set\r\n */\r\nclass VolumeSet extends React.Component {\r\n  /**\r\n   * @param {object} props - props from up level object\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    /** nuber of volumes in set */\r\n    this.m_numVolumes = 0;\r\n    /** volumes array. see more details in class Volume */\r\n    this.m_volumes = [];\r\n    /** patient name (etracted from dicom tags or empty for non-dicom files) */\r\n    this.m_patientName = '';\r\n    /** date of patient birth */\r\n    this.m_patientBirth = '';\r\n    /** text description of serie */\r\n    this.m_seriesDescr = '';\r\n    /** text description of study */\r\n    this.m_studyDescr = '';\r\n    /** text with date of study */\r\n    this.m_studyDate = '';\r\n    /** text with time series taken */\r\n    this.m_seriesTime = '';\r\n    /** text with body part */\r\n    this.m_bodyPartExamined = '';\r\n    /** text institution like clinic, university, etc. */\r\n    this.m_institutionName = '';\r\n    /** text with operator name */\r\n    this.m_operatorsName = '';\r\n    /** text with physican name */\r\n    this.m_physicansName = '';\r\n  }\r\n\r\n  /**\r\n   * Add volume to set\r\n   * \r\n   * @param {Volume} vol - added volume\r\n   */\r\n  addVolume(vol) {\r\n    console.assert(vol instanceof Volume, \"VolumeSet.addVolume: arg must be Volume\");\r\n    // this.m_volumes[this.m_numVolumes] = vol;\r\n    this.m_volumes.push(vol);\r\n    this.m_numVolumes++;\r\n  }\r\n\r\n  /**\r\n   * Get number of volumes in st\r\n   * \r\n   * @return {number} Amount of volumes on set\r\n   */\r\n  getNumVolumes() {\r\n    return this.m_numVolumes;\r\n  }\r\n\r\n  /**\r\n   * Get volume by its index\r\n   * @param {number} idx - index of volume in set\r\n   * @return {Volume} volume is set or null\r\n   */\r\n  getVolume(idx) {\r\n    console.assert(Number.isInteger(idx), \"VolumeSet.getVolume: arg must be number\");\r\n    console.assert(idx < this.m_numVolumes, \"index of volume should be in range\");\r\n    console.assert(idx >= 0, \"index of volume should be non negative\");\r\n    if ((idx < 0) || (idx >= this.m_numVolumes)) {\r\n      return null;\r\n    }\r\n    return this.m_volumes[idx];\r\n  }\r\n\r\n  // do nothing. But we need to implement render() to run Volume tests\r\n  render() {\r\n    return <p>></p>;\r\n  }\r\n\r\n  // ********************************************\r\n  // Read metyhods. From Ktx, Dicom, ..\r\n  // ********************************************\r\n  /**\r\n   * Read KTX from local file buffer\r\n   * \r\n   * @param {char array} arrBuf \r\n   * @param {func} callbackProgress \r\n   * @param {func} callbackComplete \r\n   */\r\n  readFromKtx(arrBuf, callbackProgress, callbackComplete) {\r\n    console.assert(arrBuf != null);\r\n    console.assert(arrBuf.constructor.name === \"ArrayBuffer\", \"Should be ArrayBuf in arrBuf\");\r\n    const loader = new LoaderKtx();\r\n    const vol = this.getVolume(0);\r\n    const ret = loader.readFromBuffer(vol, arrBuf, callbackProgress, callbackComplete);\r\n    return ret;\r\n  }\r\n  \r\n  readFromKtxUrl(strUrl, callbackProgress, callbackComplete) {\r\n    const loader = new LoaderKtx();\r\n    const vol = this.getVolume(0);\r\n    loader.readFromUrl(vol, strUrl, callbackProgress, callbackComplete);\r\n  }\r\n\r\n  readFromNiiUrl(strUrl, callbackProgress, callbackComplete) {\r\n    const loader = new LoaderNifti();\r\n    const vol = this.getVolume(0);\r\n    const ret = loader.readFromUrl(vol, strUrl, callbackProgress, callbackComplete);\r\n    return ret;\r\n  }\r\n\r\n  readFromDicomUrl(strUrl, callbackProgress, callbackComplete) {\r\n    const NUM_FILES = 0; // will be filled later\r\n    const loader = new LoaderDicom(NUM_FILES);\r\n    const ret = loader.readFromUrl(this, strUrl, callbackProgress, callbackComplete);\r\n    return ret;\r\n  }\r\n\r\n  readFromHdrUrl(strUrl, callbackProgress, callbackComplete) {\r\n    const loader = new LoaderHdr();\r\n    const ret = loader.readFromUrl(this, strUrl, callbackProgress, callbackComplete);\r\n    return ret;\r\n  }\r\n\r\n  readFromNifti(arrBuf, callbackProgress, callbackComplete) {\r\n    const loader = new LoaderNifti();\r\n    const vol = this.getVolume(0);\r\n    const ret = loader.readFromBuffer(vol, arrBuf, callbackProgress, callbackComplete);\r\n    return ret;\r\n  }\r\n\r\n  readFromDicom(loader, arrBuf, callbackProgress, callbackComplete) {\r\n    const indexFile = 0;\r\n    const fileName = 'file???';\r\n    const ratio = 0.0;\r\n\r\n    const ret = loader.readFromBuffer(indexFile, fileName, ratio, arrBuf, callbackProgress, callbackComplete);\r\n    return ret;\r\n  }\r\n\r\n  readSingleSliceFromDicom(loader, indexFile, fileName, ratioLoaded, arrBuf, callbackProgress, callbackComplete) {\r\n    const ret = loader.readFromBuffer(indexFile, fileName, ratioLoaded, arrBuf, callbackProgress, callbackComplete);\r\n    return ret;\r\n  }\r\n\r\n} // end VolumeSet\r\n\r\nexport default VolumeSet;\r\n","/**\r\n * @fileOverview Texture3D\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n// ********************************************************\r\n// Imports\r\n// ********************************************************\r\n\r\nimport * as THREE from 'three';\r\n\r\n\r\n// ********************************************************\r\n// Const\r\n// ********************************************************\r\n\r\n// ********************************************************\r\n// Class\r\n// ********************************************************\r\n\r\n/**\r\n * Class Texture3D  some text later...\r\n */\r\nexport default class Texture3D {\r\n  constructor() {\r\n    this.m_texture = -1;\r\n  }\r\n\r\n  createFromRawVolume(vol) {\r\n    this.m_texture = new THREE.DataTexture3D(vol.m_dataArray, vol.m_xDim, vol.m_yDim, vol.m_zDim);\r\n  }\r\n}\r\n","import ModeView from \"../store/ModeView\";\r\nimport StoreActionType from \"../store/ActionTypes\";\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Modal, Container, Row, Col, Button, ButtonGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n\r\nconst LARGE_NUMBER = 0x3FFFFFFF;\r\nconst DEFAULT_WIN_MIN = 650 - 2000 / 2;\r\nconst DEFAULT_WIN_MAX = 650 + 2000 / 2;\r\n\r\n\r\nclass UiModalWindowCenterWidth extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.m_needMode3dLight = true;\r\n\r\n    this.onMode3dLight = this.onMode3dLight.bind(this);\r\n    this.m_objCanvas = null;\r\n    this.m_dataMin = LARGE_NUMBER;\r\n    this.m_dataMax = LARGE_NUMBER;\r\n\r\n    this.onButtonCancel = this.onButtonCancel.bind(this);\r\n    this.onButtonApply = this.onButtonApply.bind(this);\r\n\r\n    this.state = {\r\n      showModalWindowCenterWidth: false,\r\n      windowMin: DEFAULT_WIN_MIN,\r\n      windowMax: DEFAULT_WIN_MAX, \r\n    };\r\n  } // end constructor\r\n\r\n  onModalHide() {\r\n    this.setState({ showModalWindowCenterWidth: false });\r\n  }\r\n\r\n  reset() {\r\n    // restore data params to initial for next lloading\r\n    this.m_dataMin = LARGE_NUMBER;\r\n    this.m_dataMax = LARGE_NUMBER;\r\n    this.setState({ windowMin: DEFAULT_WIN_MIN });\r\n    this.setState({ windowMax: DEFAULT_WIN_MAX });\r\n  }\r\n\r\n  //\r\n  onButtonCancel() {\r\n    // console.log('TODO: on Cancel ...');\r\n    this.reset();\r\n\r\n    const onHideFunc = this.props.onHide;\r\n    onHideFunc(false);\r\n  }\r\n\r\n  //\r\n  onButtonApply() {\r\n//     console.log('TODO: on Apply Render file in 3d...');\r\n\r\n//     this.reset();\r\n// // const\r\n//     const store = this.props;\r\n    \r\n//     const loaderDicom = store.loaderDicom;\r\n//     const volSet = store.volumeSet;\r\n\r\n  \r\n//     const series = loaderDicom.m_slicesVolume.getSeries();\r\n//     const numSeries = series.length;\r\n//     for (let i = 0; i < numSeries; i++) {\r\n//       const hashCode = series[i].m_hash;\r\n//       loaderDicom.createVolumeFromSlices(volSet, i, hashCode);\r\n//     }\r\n\r\n//     // hide this modal\r\n//     const onHideFunc = this.props.onHide;\r\n//     onHideFunc(true);\r\n\r\n\r\n  }\r\n\r\n  //\r\n  componentDidMount() {\r\n    // use onRef to provide access to this for the parent component\r\n    // ini react hierarchy\r\n    this.props.onRef(this);\r\n    this.renderPreview();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onRef(undefined);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.renderPreview();\r\n  }\r\n\r\n  drawSlice(ctx, wScreen, hScreen, imgData, dataDst, series, loaderDicom) {\r\n    const serie = series[0];\r\n    const slices = serie.m_slices;\r\n    const numSlices = slices.length;\r\n\r\n    // sort slices via slice location OR slice number\r\n    let minSliceNum = slices[0].m_sliceNumber;\r\n    let maxSliceNum = slices[0].m_sliceNumber;\r\n    for (let s = 0; s < numSlices; s++) {\r\n      const num = slices[s].m_sliceNumber;\r\n      minSliceNum = (num < minSliceNum) ? num : minSliceNum;\r\n      maxSliceNum = (num > maxSliceNum) ? num : maxSliceNum;\r\n    }\r\n    const difSlceNum = maxSliceNum - minSliceNum;\r\n    if (difSlceNum > 0) {\r\n      // sort slices by slice number (read from dicom tag)\r\n      slices.sort((a, b) => {\r\n        const zDif = a.m_sliceNumber - b.m_sliceNumber;\r\n        return zDif;\r\n      });\r\n    } else {\r\n      // sort slices by slice location (read from diocom tag)\r\n      slices.sort((a, b) => {\r\n        const zDif = a.m_sliceLocation - b.m_sliceLocation;\r\n        return zDif;\r\n      });\r\n    }\r\n    // assign new slice numbers according accending location\r\n    let ind = 0;\r\n    for (let s = 0; s < numSlices; s++) {\r\n      slices[s].m_sliceNumber = ind;\r\n      ind++;\r\n    }\r\n    loaderDicom.m_zDim = numSlices;\r\n\r\n    const indexCenter = Math.floor(numSlices / 2);\r\n    const slice = slices[indexCenter];\r\n    const sliceData16 = slice.m_image;\r\n    const xDim = slice.m_xDim;\r\n    const yDim = slice.m_yDim;\r\n    let maxVal = -LARGE_NUMBER;\r\n    let minVal = +LARGE_NUMBER;\r\n    const xyDim = xDim * yDim;\r\n    const zOff = 0;\r\n    let i;\r\n    for (i = 0; i < xyDim; i++) {\r\n      let valSrc = sliceData16[i];\r\n      // check big endian\r\n      if (!loaderDicom.m_littleEndian) {\r\n        const valBytesSwap = (valSrc >> 8) | ((valSrc << 8) & 0xffff);\r\n        valSrc = valBytesSwap;\r\n      }\r\n      // check pad value\r\n      valSrc = (valSrc === loaderDicom.m_padValue) ? 0 : valSrc;\r\n      \r\n      const valData = valSrc * loaderDicom.m_rescaleSlope + loaderDicom.m_rescaleIntercept;\r\n      minVal = (valData < minVal) ? valData : minVal;\r\n      maxVal = (valData > maxVal) ? valData : maxVal;\r\n    } // for (i) all slice pixels\r\n    // console.log(`Modal dcm. min/max val = ${minVal} / ${maxVal}`);\r\n    // this.m_dataMin = minVal;\r\n    // this.m_dataMax = maxVal;\r\n\r\n    const wMin = this.state.windowMin;\r\n    const wMax = this.state.windowMax;\r\n    const wc = Math.floor((wMax + wMin) * 0.5);\r\n    const ww = wMax - wMin;\r\n\r\n    const BITS_ACCUR = 11;\r\n    const BITS_IN_BYTE = 8;\r\n    const scale = Math.floor((1 << (BITS_IN_BYTE + BITS_ACCUR)) / (maxVal - minVal));\r\n    const TOO_MIN_SCALE = 4;\r\n    if (scale <= TOO_MIN_SCALE) {\r\n      console.log('Bad scaling: image will be 0');\r\n      return;\r\n    }\r\n    // const MAX_BYTE = 255;\r\n\r\n    // create temp data array: 8 bit image for this slice\r\n    const dataArray = new Uint8Array(xyDim);\r\n    const winMin = wc - ww * 0.5;\r\n    for (i = 0; i < xyDim; i++) {\r\n      let valSrc = sliceData16[i];\r\n      // check big endian\r\n      if (!loaderDicom.m_littleEndian) {\r\n        const valBytesSwap = (valSrc >> 8) | ((valSrc << 8) & 0xffff);\r\n        valSrc = valBytesSwap;\r\n      }\r\n      // check pad value\r\n      valSrc = (valSrc === loaderDicom.m_padValue) ? 0 : valSrc;\r\n      const valScaled = valSrc * loaderDicom.m_rescaleSlope + loaderDicom.m_rescaleIntercept;\r\n\r\n      let val = 0;\r\n      if (loaderDicom.m_rescaleHounsfield) {\r\n        // rescale for hounsfield units\r\n        val = Math.floor((valScaled - winMin) * 255 / ww);\r\n      } else {\r\n        // usual (default) rescale\r\n        val = Math.floor(127 + (valScaled - wc) * 128 / (ww / 2));\r\n      }\r\n      val = (val >= 0) ? val : 0;\r\n      val = (val < 255) ? val : 255;\r\n      dataArray[zOff + i] = val;\r\n    } // for i\r\n\r\n    // draw 8 but image into window\r\n    let j = 0;\r\n    const xStep = xDim / wScreen;\r\n    const yStep = yDim / hScreen;\r\n    let ay = 0.0; \r\n    for (let y = 0; y < hScreen; y++, ay += yStep) {\r\n      const ySrc = Math.floor(ay);\r\n      const yOff = ySrc * xDim;\r\n      let ax = 0.0;\r\n      for (let x = 0; x < wScreen; x++, ax += xStep) {\r\n        const xSrc = Math.floor(ax);\r\n        const val = dataArray[zOff + yOff + xSrc];\r\n        dataDst[j + 0] = val;\r\n        dataDst[j + 1] = val;\r\n        dataDst[j + 2] = val;\r\n        dataDst[j + 3] = 255; // opacity\r\n        j += 4;\r\n      } // for x\r\n    } // for y\r\n    ctx.putImageData(imgData, 0, 0);\r\n  } // end draw slice\r\n\r\n  //\r\n  // render preview window with slice and selected window properties\r\n  //\r\n  renderPreview() {\r\n    const objCanvas = this.m_objCanvas;\r\n    if (objCanvas === null) {\r\n      return;\r\n    }\r\n\r\n    const wScreen = objCanvas.clientWidth;\r\n    const hScreen = objCanvas.clientHeight;\r\n\r\n    const ctx = objCanvas.getContext('2d');\r\n    const store = this.props;\r\n\r\n    // clear screen\r\n    ctx.fillStyle = 'rgb(40, 40, 40)';\r\n    ctx.fillRect(0, 0, wScreen, hScreen);\r\n\r\n    // destination buffer to write\r\n    const imgData = ctx.createImageData(wScreen, hScreen);\r\n    const dataDst = imgData.data;\r\n    let j = 0;\r\n    const TEST_RAINBOW = false;\r\n    if (TEST_RAINBOW) {\r\n      console.log(\"special rainbow test instead of slice render\");\r\n      for (let y = 0; y < hScreen; y++) {\r\n        for (let x = 0; x < wScreen; x++) {\r\n          let b = Math.floor(255.0 * x / wScreen);\r\n          let g = Math.floor(255.0 * y / hScreen);\r\n          let r = 50;\r\n          dataDst[j + 0] = r;\r\n          dataDst[j + 1] = g;\r\n          dataDst[j + 2] = b;\r\n          dataDst[j + 3] = 255;\r\n          j += 4;\r\n        }\r\n      }\r\n      ctx.putImageData(imgData, 0, 0);\r\n      return;\r\n    } // if test rainbow\r\n\r\n    const loaderDicom = store.loaderDicom;\r\n    if (loaderDicom === null) {\r\n      return;\r\n    }\r\n    const series = loaderDicom.m_slicesVolume.m_series;\r\n    if (series.length === 0) {\r\n      return;\r\n    }\r\n    this.drawSlice(ctx, wScreen, hScreen, imgData, dataDst, series, loaderDicom);\r\n  } // end render preview\r\n\r\n  //\r\n  // callbakc on user change window range (min, max)\r\n  //\r\n  onSliderWindowRange()\r\n  {\r\n    const arrVals = this.refs.sliderRange.slider.get();\r\n    const vMin = parseInt(arrVals[0]);\r\n    const vMax = parseInt(arrVals[1]);\r\n    this.setState({ windowMin: vMin });\r\n    this.setState({ windowMax: vMax });\r\n    // console.log(`slider min/max = ${vMin} / ${vMax}`);\r\n  }\r\n\r\n  getDataMinMax(store, loaderDicom) {\r\n    const series = loaderDicom.m_slicesVolume.m_series;\r\n    if (series.length === 0) {\r\n      return;\r\n    }\r\n    const serie = series[0];\r\n    const slices = serie.m_slices;\r\n    const slice = slices[0];\r\n    const sliceData16 = slice.m_image;\r\n    const xDim = slice.m_xDim;\r\n    const yDim = slice.m_yDim;\r\n    let maxVal = -LARGE_NUMBER;\r\n    let minVal = +LARGE_NUMBER;\r\n    const xyDim = xDim * yDim;\r\n    let i;\r\n    for (i = 0; i < xyDim; i++) {\r\n      let valSrc = sliceData16[i];\r\n      // check big endian\r\n      if (!loaderDicom.m_littleEndian) {\r\n        const valBytesSwap = (valSrc >> 8) | ((valSrc << 8) & 0xffff);\r\n        valSrc = valBytesSwap;\r\n      }\r\n      // check pad value\r\n      valSrc = (valSrc === loaderDicom.m_padValue) ? 0 : valSrc;\r\n      \r\n      const valData = valSrc * loaderDicom.m_rescaleSlope + loaderDicom.m_rescaleIntercept;\r\n      minVal = (valData < minVal) ? valData : minVal;\r\n      maxVal = (valData > maxVal) ? valData : maxVal;\r\n    } // for (i) all slice pixels\r\n    // console.log(`Modal dcm. min/max val = ${minVal} / ${maxVal}`);\r\n    this.m_dataMin = minVal;\r\n    this.m_dataMax = maxVal;\r\n    // console.log(`data min max ready`);\r\n  } // end get data min max\r\n\r\n  initWindowRange() {\r\n    const store = this.props;\r\n    const loaderDicom = store.loaderDicom;\r\n    if (loaderDicom !== null) {\r\n      let isValid = true;\r\n      isValid = (loaderDicom.m_windowCenter === LARGE_NUMBER) ? false : isValid;\r\n      isValid = (loaderDicom.m_windowWidth === LARGE_NUMBER) ? false : isValid;\r\n      isValid = (loaderDicom.m_windowWidth <= 0) ? false : isValid;\r\n\r\n      if (isValid) {\r\n        const wMin = Math.floor(loaderDicom.m_windowCenter - loaderDicom.m_windowWidth / 2);\r\n        const wMax = Math.floor(loaderDicom.m_windowCenter + loaderDicom.m_windowWidth / 2);\r\n        this.setState({ windowMin: wMin });\r\n        this.setState({ windowMax: wMax });\r\n      }\r\n      this.getDataMinMax(store, loaderDicom);\r\n    } // if loader dicom ready\r\n  } // end init\r\n\r\n  // render \r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\nonMode(indexMode) {\r\n  const store = this.props;\r\n  store.dispatch({\r\n    type: StoreActionType.SET_MODE_VIEW,\r\n    modeView: indexMode,\r\n  });\r\n}\r\n\r\nonMode3dLight() {\r\n  this.onMode(ModeView.VIEW_3D_LIGHT);\r\n\r\nconsole.log('TODO: on Apply Render file in 3d...');\r\n\r\nthis.reset();\r\n// const\r\nconst store = this.props;\r\n\r\nconst loaderDicom = store.loaderDicom;\r\nconst volSet = store.volumeSet;\r\n\r\n\r\nconst series = loaderDicom.m_slicesVolume.getSeries();\r\nconst numSeries = series.length;\r\nfor (let i = 0; i < numSeries; i++) {\r\n  const hashCode = series[i].m_hash;\r\n  loaderDicom.createVolumeFromSlices(volSet, i, hashCode);\r\n}\r\n\r\n// hide this modal\r\nconst onHideFunc = this.props.onHide;\r\nonHideFunc(true);\r\n}\r\n  render() {\r\n    const store = this.props;\r\n\r\n    let viewMode = store.modeView;\r\n\r\n    const str3dLight = viewMode === ModeView.VIEW_3D_LIGHT ? \"primary\" : \"secondary\";\r\n\r\n    const stateVis = this.props.stateVis;\r\n    const onHideFunc = this.props.onHide;\r\n\r\n    const stylePreview = {\r\n      width: '500px',\r\n      height: '400px',\r\n    };\r\n\r\n    const jsxCanvas = <canvas ref={ (mount) => {this.m_objCanvas = mount} } style={stylePreview} width=\"500px\" height=\"400px\" />;\r\n\r\n    // const valToolTps = true;\r\n\r\n    // let valMin = 0;\r\n    // let valMax = 5000;\r\n    // let valDelta = valMax - valMin;\r\n    // let valStep = 50;\r\n    if (this.m_dataMin !== LARGE_NUMBER) {\r\n      // valMin = this.m_dataMin;\r\n      // valMax = this.m_dataMax;\r\n      // valDelta = valMax - valMin;\r\n      // valStep = Math.floor(valDelta / 32);\r\n    }\r\n\r\n    // const rangeTwo = {\r\n    //   'min': Math.floor(valMin - valDelta / 4),\r\n    //   'max': Math.floor(valMax + valDelta / 4)\r\n    // }\r\n    // const wMin = Math.floor(this.state.windowMin);\r\n    // const wMax = Math.floor(this.state.windowMax);\r\n    // const wArr = [wMin, wMax];\r\n\r\n    const jxsModal = \r\n      <Modal show={stateVis} onHide={onHideFunc} size=\"xl\">\r\n        <Modal.Header closeButton>\r\n         \r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container>\r\n            <Row>\r\n              <Col xs md lg=\"12\" ref={ (mount) => {this.m_objCol = mount} } >\r\n                <p className=\"text-center\">\r\n                  {jsxCanvas}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n\r\n           \r\n\r\n            <Row>\r\n              <Col xs md lg=\"5\">\r\n              </Col>\r\n              <Col xs md lg=\"3\">\r\n              <ButtonGroup className=\"mr-2\" aria-label=\"Top group\">\r\n          <OverlayTrigger\r\n            key=\"3dLight\"\r\n            placement=\"bottom\"\r\n            overlay={\r\n              <Tooltip>Prepare 2D</Tooltip>\r\n            }\r\n          >\r\n            <Button variant={str3dLight} onClick={this.onMode3dLight }>\r\n              2D Image Creation\r\n             \r\n            </Button>\r\n          </OverlayTrigger>\r\n        </ButtonGroup>\r\n              </Col>\r\n            \r\n            </Row>\r\n          </Container>\r\n\r\n        </Modal.Body>\r\n      </Modal>\r\n    return jxsModal;\r\n  } // end render\r\n} // end class UiWindowCenterWidth\r\n\r\nexport default connect(store => store)(UiModalWindowCenterWidth);\r\n","//\r\n//\r\n//\r\n\r\n// **********************************************\r\n// Imports\r\n// **********************************************\r\n\r\n// 31.08.2020. Daikon reader\r\nimport daikon from  'daikon';\r\nimport DicomSliceInfo from './dicomsliceinfo';\r\nimport LoadResult from '../LoadResult';\r\nimport LoaderDicom from './LoaderDicom';\r\nimport DicomTagInfo from './LoaderDicom';\r\n\r\nimport StoreActionType from '../../store/ActionTypes';\r\nimport DicomSlice from './dicomslice';\r\n\r\n// **********************************************\r\n// Const\r\n// **********************************************\r\n\r\n// read dicom via daikon: print every tag readed\r\nconst NEED_DEBUG_PRINT_TAGS = false;\r\n\r\n// future possible development:\r\n// deep debug: develop read dicomdir file\r\nconst READ_DICOMDIR = false;\r\n\r\n// **********************************************\r\n// Class\r\n// **********************************************\r\n\r\nclass LoaderDcmDaikon {\r\n  constructor(){ \r\n    this.m_loaderDicom = null;\r\n  }\r\n\r\n  //\r\n  // see example read\r\n  // https://github.com/mbarnig/dumpDICOMDIRarchive/blob/master/dumpDICOMDIR.js\r\n  //\r\n  loadDicomfir(fileName, strContent) {\r\n    const dataFile = new DataView(strContent);\r\n    let image = null;\r\n    try {\r\n      image = daikon.Series.parseImage(dataFile);\r\n    } catch (err) {\r\n      console.log(\"error parse dcm file buffer\");\r\n      return LoadResult.BAD_DICOM;\r\n    }\r\n    if ((image === undefined) || (image === null)) {\r\n      return LoadResult.BAD_DICOM;\r\n    }\r\n    const TAG_DIRECTORY_REC = [0x0004, 0x1220];\r\n    let ind;\r\n    // slice location detect (to correct slices order on z)\r\n    ind = daikon.Utils.dec2hex(TAG_DIRECTORY_REC[0]) + daikon.Utils.dec2hex(TAG_DIRECTORY_REC[1]);\r\n    const tagDirRec = image.tags[ind];\r\n    if (tagDirRec !== undefined) {\r\n      const numEntries = tagDirRec.value.length;\r\n      for (let k = 0; k < numEntries; k++) {\r\n        let dirEntry = tagDirRec.value[k];\r\n        if ((dirEntry.element === 57344) && (dirEntry.group === 65534)) {\r\n          const numSub = dirEntry.value.length;\r\n          for (let s = 0; s < numSub; s++) {\r\n            let elemSub = dirEntry.value[s];\r\n            if ((elemSub.element === 5168) && (elemSub.group === 4)) {\r\n              //const str = elemSub.value[0];\r\n              //console.log(`elem sub val = ${str}`);\r\n            }\r\n            if ((elemSub.element === 5376) && (elemSub.group === 4)) {\r\n              const fold = elemSub.value[0];\r\n              const fname = elemSub.value[1];\r\n              console.log(`image nm = ${fold} / ${fname}`);\r\n            }\r\n          } // for s, all sub elemenst \r\n        } // if entry with patient and image information\r\n      } // for k all entries in dir\r\n    } // if dir rec found\r\n    return LoadResult.SUCCESS;\r\n  }\r\n\r\n  // load single slice, using file index\r\n  loadSingleSlice(fileIndex, fileName, strContent) {\r\n    // console.log(\"loadSingleSlice [\" + fileIndex.toString() + \"]\");\r\n    const dataFile = new DataView(strContent);\r\n    let image = null;\r\n    try {\r\n      image = daikon.Series.parseImage(dataFile);\r\n    } catch (err) {\r\n      console.log(\"error parse dcm file buffer\");\r\n      return LoadResult.BAD_DICOM;\r\n    }\r\n    if ((image === undefined) || (image === null)) {\r\n      return LoadResult.BAD_DICOM;\r\n    }\r\n    // console.log(\"dcm parse completed\");\r\n    const yDim = image.getRows();\r\n    const xDim = image.getCols();\r\n    const bits = image.getBitsAllocated();\r\n    if ((bits !== 8) && (bits !== 16)) {\r\n      console.log('Parse Dicom data. Strange bits per pixel = ' + bits.toString());\r\n    }\r\n    // data for hash code evaluate\r\n    const patientName = image.getPatientName();\r\n    const studyDescr = image.getImageDescription();\r\n    const studyDate = image.getStudyDate();\r\n    const seriesTime = image.getStudyTime();\r\n    const seriesDescr = image.getSeriesDescription();\r\n    const bodyPartExamined = 'NonExistInDiakonReader';\r\n    //const hasPixels = image.hasPixelData();\r\n    //const isComp = image.isCompressed();\r\n\r\n\r\n    const dicomInfo = this.m_loaderDicom.m_dicomInfo;\r\n    //const volSlice = this.m_loaderDicom.m_slicesVolume.getNewSlice();\r\n    const volSlice = new DicomSlice();\r\n    volSlice.m_sliceNumber = fileIndex;\r\n    volSlice.m_sliceLocation = -1;\r\n    volSlice.m_patientName = patientName;\r\n    volSlice.m_studyDescr = studyDescr;\r\n    volSlice.m_studyDate = studyDate;\r\n    volSlice.m_seriesTime = seriesTime;\r\n    volSlice.m_seriesDescr  = seriesDescr;\r\n    volSlice.m_bodyPartExamined = bodyPartExamined;\r\n    volSlice.buildHash();\r\n\r\n    this.m_loaderDicom.m_minSlice = 0;\r\n    this.m_loaderDicom.m_maxSlice = 0;\r\n    this.m_loaderDicom.m_pixelSpacing.x = 0.0;\r\n    this.m_loaderDicom.m_pixelSpacing.y = 0.0;\r\n    this.m_loaderDicom.m_pixelSpacing.z = 0.0;\r\n    this.m_loaderDicom.m_xDim = xDim;\r\n    this.m_loaderDicom.m_yDim = yDim;\r\n    if (fileIndex < this.m_loaderDicom.m_slicesVolume.m_minSlice) {\r\n      this.m_loaderDicom.m_slicesVolume.m_minSlice = fileIndex;\r\n    }\r\n    if (fileIndex > this.m_loaderDicom.m_slicesVolume.m_maxSlice) {\r\n      this.m_loaderDicom.m_slicesVolume.m_maxSlice = fileIndex;\r\n    }\r\n    this.m_loaderDicom.m_newTagEvent.detail.fileName = fileName;\r\n\r\n    const sliceInfo = new DicomSliceInfo();\r\n    const strSlice = 'Slice ' + fileIndex.toString();\r\n    sliceInfo.m_sliceName = strSlice;\r\n    sliceInfo.m_fileName = fileName;\r\n    sliceInfo.m_tags = [];\r\n    dicomInfo.m_sliceInfo.push(sliceInfo);\r\n\r\n    const TAG_PADDING_VALUE = [0x0028, 0x0120];\r\n    const knownTags = [\r\n      // image dims\r\n      daikon.Tag.TAG_ROWS, daikon.Tag.TAG_COLS, daikon.Tag.TAG_ACQUISITION_MATRIX, \r\n      daikon.Tag.TAG_NUMBER_OF_FRAMES, daikon.Tag.TAG_NUMBER_TEMPORAL_POSITIONS,\r\n      // voxel dims\r\n      daikon.Tag.TAG_PIXEL_SPACING, daikon.Tag.TAG_SLICE_THICKNESS, daikon.Tag.TAG_SLICE_GAP,\r\n      daikon.Tag.TAG_TR, daikon.Tag.TAG_FRAME_TIME, \r\n      // datatype\r\n      daikon.Tag.TAG_BITS_ALLOCATED, daikon.Tag.TAG_BITS_STORED,\r\n      daikon.Tag.TAG_PIXEL_REPRESENTATION, daikon.Tag.TAG_HIGH_BIT, \r\n      daikon.Tag.TAG_PHOTOMETRIC_INTERPRETATION, daikon.Tag.TAG_SAMPLES_PER_PIXEL,\r\n      daikon.Tag.TAG_PLANAR_CONFIG, daikon.Tag.TAG_PALETTE_RED, daikon.Tag.TAG_PALETTE_GREEN,\r\n      daikon.Tag.TAG_PALETTE_BLUE,\r\n\r\n      // data scale\r\n      daikon.Tag.TAG_DATA_SCALE_SLOPE, daikon.Tag.TAG_DATA_SCALE_INTERCEPT,\r\n      daikon.Tag.TAG_DATA_SCALE_ELSCINT, daikon.Tag.TAG_PIXEL_BANDWIDTH,\r\n\r\n      // range\r\n      daikon.Tag.TAG_IMAGE_MIN, daikon.Tag.TAG_IMAGE_MAX,\r\n      daikon.Tag.TAG_WINDOW_CENTER, daikon.Tag.TAG_WINDOW_WIDTH,\r\n\r\n      // description\r\n      daikon.Tag.TAG_PATIENT_NAME, daikon.Tag.TAG_PATIENT_ID,\r\n      daikon.Tag.TAG_STUDY_DATE, daikon.Tag.TAG_STUDY_TIME,\r\n      daikon.Tag.TAG_STUDY_DES, daikon.Tag.TAG_IMAGE_TYPE,\r\n      daikon.Tag.TAG_IMAGE_COMMENTS, daikon.Tag.TAG_SEQUENCE_NAME,\r\n      daikon.Tag.TAG_MODALITY,\r\n\r\n      daikon.Tag.TAG_FRAME_OF_REF_UID,\r\n      daikon.Tag.TAG_STUDY_UID,\r\n\r\n      // volume id\r\n      daikon.Tag.TAG_SERIES_DESCRIPTION, daikon.Tag.TAG_SERIES_INSTANCE_UID,\r\n      daikon.Tag.TAG_SERIES_NUMBER, daikon.Tag.TAG_ECHO_NUMBER,\r\n      daikon.Tag.TAG_TEMPORAL_POSITION,\r\n\r\n      // slice id\r\n      daikon.Tag.TAG_IMAGE_NUM, daikon.Tag.TAG_SLICE_LOCATION,\r\n\r\n      // orientation\r\n      daikon.Tag.TAG_IMAGE_ORIENTATION, daikon.Tag.TAG_IMAGE_POSITION,\r\n      daikon.Tag.TAG_SLICE_LOCATION_VECTOR,\r\n      // lut shape\r\n      daikon.Tag.TAG_LUT_SHAPE,\r\n      // pixel padding value\r\n      TAG_PADDING_VALUE,\r\n    ];\r\n\r\n    // some default values\r\n    const TAG_PATIENT_BIRTH_DATE = [0x0010, 0x0030];\r\n    const TAG_BODY_PART_EXAMINED = [0x0018, 0x0015];\r\n    const TAG_INSTITUTION_NAME = [0x0008, 0x0080];\r\n    const TAG_OPERATORS_NAME = [0x0008, 0x1070];\r\n    const TAG_PHYSICANS_NAME = [0x0008, 0x0090];\r\n\r\n    dicomInfo.m_patientName = image.getPatientName();\r\n    dicomInfo.m_patientDateOfBirth = daikon.Image.getSingleValueSafely(image.getTag(TAG_PATIENT_BIRTH_DATE[0], \r\n      TAG_PATIENT_BIRTH_DATE[1]), 0);\r\n    dicomInfo.m_seriesDescr = seriesDescr;\r\n\r\n    dicomInfo.m_studyDescr = studyDescr;\r\n    dicomInfo.m_studyDate = studyDate;\r\n    dicomInfo.m_seriesTime = seriesTime;\r\n    dicomInfo.m_bodyPartExamined = daikon.Image.getSingleValueSafely(image.getTag(TAG_BODY_PART_EXAMINED[0], \r\n      TAG_BODY_PART_EXAMINED[1]), 0);\r\n    dicomInfo.m_institutionName = daikon.Image.getSingleValueSafely(image.getTag(TAG_INSTITUTION_NAME[0], \r\n      TAG_INSTITUTION_NAME[1]), 0);\r\n    dicomInfo.m_operatorsName = daikon.Image.getSingleValueSafely(image.getTag(TAG_OPERATORS_NAME[0], \r\n      TAG_OPERATORS_NAME[1]), 0);\r\n    dicomInfo.m_physicansName = daikon.Image.getSingleValueSafely(image.getTag(TAG_PHYSICANS_NAME[0], \r\n      TAG_PHYSICANS_NAME[1]), 0);\r\n\r\n    // save all known tags to info array (can be displayed in app UI)\r\n    const numKnownTags = knownTags.length;\r\n    for (let k = 0; k < numKnownTags; k++) {\r\n      const ind = daikon.Utils.dec2hex(knownTags[k][0]) + daikon.Utils.dec2hex(knownTags[k][1]);\r\n      const tag = image.tags[ind];\r\n      if (tag !== undefined) {\r\n        const val = tag.value;\r\n        const group = tag.group;\r\n        const element = tag.element;\r\n\r\n        // const sliceInfo = dicomInfo.m_sliceInfo[0];\r\n        const tagInfo = new DicomTagInfo();\r\n        tagInfo.m_tag = '(' + \r\n          LoaderDicom.numberToHexString(group) + ',' + \r\n          LoaderDicom.numberToHexString(element) + ')';\r\n        const strTagName = this.m_loaderDicom.m_dictionary.getTextDesc(group, element);\r\n        tagInfo.m_attrName = (strTagName.length > 1) ? strTagName : '';\r\n  \r\n        // let strVal = LoaderDicom.getAttrValueAsString(tag);\r\n        let strVal = '';\r\n        if (val !== null) {\r\n          strVal = val.toString();\r\n        }\r\n  \r\n        tagInfo.m_attrValue = strVal;\r\n        sliceInfo.m_tags.push(tagInfo);\r\n        if (NEED_DEBUG_PRINT_TAGS) {\r\n          console.log('tag readed = ' + group.toString() + ', ' + element.toString() + ', v = ' + strVal);\r\n        }\r\n      } // if non null tag\r\n    } // for k all known tags\r\n\r\n    let ind;\r\n    // slice location detect (to correct slices order on z)\r\n    ind = daikon.Utils.dec2hex(daikon.Tag.TAG_SLICE_LOCATION[0]) + daikon.Utils.dec2hex(daikon.Tag.TAG_SLICE_LOCATION[1]);\r\n    const tagSLoc = image.tags[ind];\r\n    if (tagSLoc !== undefined) {\r\n      let sliceLoc = tagSLoc.value[0];\r\n      volSlice.m_sliceLocation = sliceLoc;\r\n      this.m_sliceLocMin = (sliceLoc < this.m_sliceLocMin) ? sliceLoc : this.m_sliceLocMin;\r\n      this.m_sliceLocMax = (sliceLoc > this.m_sliceLocMax) ? sliceLoc : this.m_sliceLocMax;\r\n    }\r\n    // slice number\r\n    ind = daikon.Utils.dec2hex(daikon.Tag.TAG_IMAGE_NUM[0]) + daikon.Utils.dec2hex(daikon.Tag.TAG_IMAGE_NUM[1]);\r\n    const tagSlNum = image.tags[ind];\r\n    if (tagSlNum !== undefined) {\r\n      if (tagSlNum.value !== null) {\r\n        let sliceNumber = tagSlNum.value[0];\r\n        volSlice.m_sliceNumber = sliceNumber;\r\n      }\r\n    }\r\n    // samples per pixel\r\n    ind = daikon.Utils.dec2hex(daikon.Tag.TAG_SAMPLES_PER_PIXEL[0]) + daikon.Utils.dec2hex(daikon.Tag.TAG_SAMPLES_PER_PIXEL[1]);\r\n    const tagSamPerPix = image.tags[ind];\r\n    if (tagSamPerPix !== undefined) {\r\n      let samPerPixel = tagSamPerPix.value[0];\r\n      this.m_loaderDicom.m_samplesPerPixel = samPerPixel;\r\n    }\r\n\r\n    // read pixel padding value\r\n    ind = daikon.Utils.dec2hex(0x0028) + daikon.Utils.dec2hex(0x0120);\r\n    const tagPPV = image.tags[ind];\r\n    if (tagPPV !== undefined) {\r\n      let valPad = tagPPV.value[0];\r\n      if (valPad < 0) {\r\n        valPad = -(valPad ^ 0xffff) - 1;\r\n      }\r\n      // console.log('val pad = ' + valPad);\r\n      this.m_loaderDicom.m_padValue = valPad;\r\n    }\r\n    // read window center\r\n    ind = daikon.Utils.dec2hex(daikon.Tag.TAG_WINDOW_CENTER[0]) + daikon.Utils.dec2hex(daikon.Tag.TAG_WINDOW_CENTER[1]);\r\n    const tagWinCen = image.tags[ind];\r\n    if (tagWinCen !== undefined) {\r\n      this.m_loaderDicom.m_windowCenter = tagWinCen.value[0];\r\n    }\r\n    // read window width\r\n    ind = daikon.Utils.dec2hex(daikon.Tag.TAG_WINDOW_WIDTH[0]) + daikon.Utils.dec2hex(daikon.Tag.TAG_WINDOW_WIDTH[1]);\r\n    const tagWinWid = image.tags[ind];\r\n    if (tagWinWid !== undefined) {\r\n      this.m_loaderDicom.m_windowWidth = tagWinWid.value[0];\r\n    }\r\n    // read rescale intercept\r\n    ind = daikon.Utils.dec2hex(daikon.Tag.TAG_DATA_SCALE_INTERCEPT[0]) + daikon.Utils.dec2hex(daikon.Tag.TAG_DATA_SCALE_INTERCEPT[1]);\r\n    const tagResInt = image.tags[ind];\r\n    if (tagResInt !== undefined) {\r\n      this.m_loaderDicom.m_rescaleIntercept = tagResInt.value[0];\r\n    }\r\n    // read rescale slope\r\n    ind = daikon.Utils.dec2hex(daikon.Tag.TAG_DATA_SCALE_SLOPE[0]) + daikon.Utils.dec2hex(daikon.Tag.TAG_DATA_SCALE_SLOPE[1]);\r\n    const tagResSlo = image.tags[ind];\r\n    if (tagResSlo !== undefined) {\r\n      this.m_loaderDicom.m_rescaleSlope = tagResSlo.value[0];\r\n    }\r\n    // read rescale type\r\n    const TAG_RESCALE_TYPE = [0x0028, 0x1054];\r\n    ind = daikon.Utils.dec2hex(TAG_RESCALE_TYPE[0]) + daikon.Utils.dec2hex(TAG_RESCALE_TYPE[1]);\r\n    const tagResTyp = image.tags[ind];\r\n    if (tagResTyp !== undefined) {\r\n      if ((tagResTyp.value !== null) && (tagResTyp.value[0] === 'HU')) {\r\n        this.m_loaderDicom.m_rescaleHounsfield = true;\r\n      }\r\n    }\r\n\r\n    // read pixel representation\r\n    ind = daikon.Utils.dec2hex(daikon.Tag.TAG_PIXEL_REPRESENTATION[0]) + daikon.Utils.dec2hex(daikon.Tag.TAG_PIXEL_REPRESENTATION[1]);\r\n    const tagPixRep = image.tags[ind];\r\n    if (tagPixRep !== undefined) {\r\n      if (tagPixRep.value[0] === 1) {\r\n        this.m_loaderDicom.m_pixelRepresentaionSigned = true;\r\n      }\r\n    }\r\n\r\n\r\n    // read pixel spacing on xy (physical dimensions)\r\n    ind = daikon.Utils.dec2hex(daikon.Tag.TAG_PIXEL_SPACING[0]) + daikon.Utils.dec2hex(daikon.Tag.TAG_PIXEL_SPACING[1]);\r\n    const tagPS = image.tags[ind];\r\n    if (tagPS !== undefined) {\r\n      let arrSpa = tagPS.value;\r\n      const VAL_2 = 2;\r\n      if (arrSpa.length === VAL_2) {\r\n        this.m_loaderDicom.m_pixelSpacing.x = parseFloat(arrSpa[0]);\r\n        this.m_loaderDicom.m_pixelSpacing.y = parseFloat(arrSpa[1]);\r\n      }\r\n    }\r\n    // read pixel spacing on z (physical dimensions)\r\n    ind = daikon.Utils.dec2hex(daikon.Tag.TAG_SLICE_THICKNESS[0]) + daikon.Utils.dec2hex(daikon.Tag.TAG_SLICE_THICKNESS[1]);\r\n    const tagSLT = image.tags[ind];\r\n    if (tagSLT !== undefined) {\r\n      let arrThick = tagSLT.value;\r\n      if (arrThick.length === 1) {\r\n        this.m_loaderDicom.m_pixelSpacing.z = parseFloat(arrThick[0]);\r\n      }\r\n      // console.log('val pad = ' + valPad);\r\n    }\r\n\r\n    // get image position (x,y,z), help to detect volume physical size\r\n    ind = daikon.Utils.dec2hex(daikon.Tag.TAG_IMAGE_POSITION[0]) + daikon.Utils.dec2hex(daikon.Tag.TAG_IMAGE_POSITION[1]);\r\n    const tagImPos = image.tags[ind];\r\n    if (tagImPos !== undefined) {\r\n      const NUM_COMPONENTS_3 = 3;\r\n      if (tagImPos.value.length === NUM_COMPONENTS_3) {\r\n        // eslint-disable-next-line\r\n        const xPos = tagImPos.value[0];\r\n        // eslint-disable-next-line\r\n        const yPos = tagImPos.value[1];\r\n        // eslint-disable-next-line\r\n        const zPos = tagImPos.value[2];\r\n        this.m_loaderDicom.m_imagePosMin.x = (xPos < this.m_loaderDicom.m_imagePosMin.x) ? xPos : this.m_loaderDicom.m_imagePosMin.x;\r\n        this.m_loaderDicom.m_imagePosMin.y = (yPos < this.m_loaderDicom.m_imagePosMin.y) ? yPos : this.m_loaderDicom.m_imagePosMin.y;\r\n        this.m_loaderDicom.m_imagePosMin.z = (zPos < this.m_loaderDicom.m_imagePosMin.z) ? zPos : this.m_loaderDicom.m_imagePosMin.z;\r\n        this.m_loaderDicom.m_imagePosMax.x = (xPos > this.m_loaderDicom.m_imagePosMax.x) ? xPos : this.m_loaderDicom.m_imagePosMax.x;\r\n        this.m_loaderDicom.m_imagePosMax.y = (yPos > this.m_loaderDicom.m_imagePosMax.y) ? yPos : this.m_loaderDicom.m_imagePosMax.y;\r\n        this.m_loaderDicom.m_imagePosMax.z = (zPos > this.m_loaderDicom.m_imagePosMax.z) ? zPos : this.m_loaderDicom.m_imagePosMax.z;\r\n        if (NEED_DEBUG_PRINT_TAGS) {\r\n          console.log(`TAG. image position x,y,z = ${xPos}, ${yPos}, ${zPos}`);\r\n        } // if print\r\n      } // if 3 components in array\r\n    } // if tag exists\r\n\r\n    // read transfer syntax (detect big endian)\r\n    ind = daikon.Utils.dec2hex(daikon.Tag.TAG_TRANSFER_SYNTAX[0]) + daikon.Utils.dec2hex(daikon.Tag.TAG_TRANSFER_SYNTAX[1]);\r\n    const tagTraSyn = image.tags[ind];\r\n    if (tagTraSyn !== undefined) {\r\n      let arrStrTra = tagTraSyn.value;\r\n      if (arrStrTra[0] === \"1.2.840.10008.1.2.2\") {\r\n        this.m_loaderDicom.m_littleEndian = false;\r\n      }\r\n      // console.log('val pad = ' + valPad);\r\n    }\r\n\r\n    // add volume slice to slices volume (and manage series)\r\n    this.m_loaderDicom.m_slicesVolume.addSlice(volSlice);\r\n\r\n    // check correct read image\r\n    const pixels = image.getRawData();\r\n    const numBytesPixelsRead = pixels.byteLength;\r\n    const VAL_8 = 8;\r\n    const numBytesPixelsExpected = xDim * yDim * Math.floor(bits / VAL_8) * this.m_loaderDicom.m_samplesPerPixel;\r\n    if (numBytesPixelsRead !== numBytesPixelsExpected) {\r\n      console.log('Error read Dicom via Diakon parser');\r\n      return LoadResult.ERROR_COMPRESSED_IMAGE_NOT_SUPPORTED;\r\n    }\r\n\r\n    // create pixels storage in volume\r\n    if (this.m_loaderDicom.m_pixelRepresentaionSigned) {\r\n      volSlice.m_image = new Int16Array(xDim * yDim);\r\n    } else {\r\n      volSlice.m_image = new Uint16Array(xDim * yDim);\r\n    }\r\n\r\n    // copy pixels (ArrayBuffer) into volSlice.m_image\r\n    const numPixels = xDim * yDim;\r\n    if (this.m_loaderDicom.m_samplesPerPixel === 1) {\r\n      const pixSrc = new Uint16Array(pixels);\r\n      for (let i = 0; i < numPixels; i++) {\r\n        volSlice.m_image[i] = pixSrc[i];\r\n      } // for i\r\n    } // if 1 sample per pixel\r\n    else if (this.m_loaderDicom.m_samplesPerPixel === 3) {\r\n      const pixSrc = new Uint8Array(pixels);\r\n      let j = 0;\r\n      for (let i = 0; i < numPixels; i++, j += 3) {\r\n        const bVal = pixSrc[j + 0];\r\n        const gVal = pixSrc[j + 1];\r\n        const rVal = pixSrc[j + 2];\r\n        volSlice.m_image[i] = Math.floor( (bVal + gVal + rVal) / 3 );\r\n      } // for i\r\n    } // if samples per pixel is 3\r\n    // store x, y dims\r\n    volSlice.m_xDim = xDim;\r\n    volSlice.m_yDim = yDim;\r\n    return LoadResult.SUCCESS;\r\n  } // end load single slice\r\n\r\n  //\r\n  // read 1 slice during reading multiple dcm files\r\n  //\r\n  readSlice(loader, fileIndex, fileName, strContent) {\r\n    this.m_loaderDicom = loader;\r\n    const ret = this.loadSingleSlice(fileIndex, fileName, strContent);\r\n    return ret;\r\n  }\r\n\r\n  // read 1 slice\r\n  readSingleSlice(store, loader, fileIndex, fileName, strContent) {\r\n    this.m_loaderDicom = loader;\r\n    let ret;\r\n    if (!READ_DICOMDIR) {\r\n      ret = this.loadSingleSlice(fileIndex, fileName, strContent);\r\n    } else {\r\n      ret = this.loadDicomfir(fileName, strContent);\r\n    }\r\n    if (ret !== LoadResult.SUCCESS) {\r\n      return ret;\r\n    }\r\n    \r\n    // save dicomInfo to store\r\n    const dicomInfo = this.m_loaderDicom.m_dicomInfo;\r\n    store.dispatch({ type: StoreActionType.SET_DICOM_INFO, dicomInfo: dicomInfo });\r\n    // save dicom loader to store\r\n    store.dispatch({ type: StoreActionType.SET_LOADER_DICOM, loaderDicom: this.m_loaderDicom });\r\n    return ret;\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default LoaderDcmDaikon;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n// import { NavDropdown } from 'react-bootstrap';\r\n// import { gzip, ungzip } from 'node-gzip';\r\nimport zlib from 'zlib';\r\nimport createReadStream from 'filereader-stream';\r\n\r\nimport VolumeSet from '../engine/VolumeSet';\r\nimport Volume from '../engine/Volume';\r\nimport Texture3D from '../engine/Texture3D';\r\nimport UiModalWindowCenterWidth from './UiModalWinCW';\r\nimport StoreActionType from '../store/ActionTypes';\r\nimport ModeView from '../store/ModeView';\r\nimport Modes3d from '../store/Modes3d';\r\nimport LoadResult from '../engine/LoadResult';\r\nimport LoaderDicom from '../engine/loaders/LoaderDicom';\r\nimport LoaderHdr from '../engine/loaders/LoaderHdr';\r\nimport LoaderDcmDaikon from '../engine/loaders/LoaderDcmDaikon';\r\n\r\n// import config from '../config/config';\r\n\r\n// ********************************************************\r\n// Const\r\n// ********************************************************\r\n\r\n/** Need to have demo menu */\r\n// const NEED_DEMO_MENU = true;\r\n\r\n/** deep artificially fix volume texture size to 4 * N */\r\nconst NEED_TEXTURE_SIZE_4X = true;\r\n\r\n// use daikon parser for Dicom (*dcm) file loading\r\nconst READ_DICOM_VIA_DAIKON = true;\r\n\r\n// ********************************************************\r\n// Class\r\n// ********************************************************\r\n\r\n\r\n/**\r\n * Class UiOpenMenu some text later...\r\n */\r\nclass UiOpenMenu extends React.Component {\r\n  /**\r\n   * @param {object} props - props from up level object\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.onButtonLocalFile = this.onButtonLocalFile.bind(this);\r\n    this.handleFileSelected = this.handleFileSelected.bind(this);\r\n    this.onFileContentReadSingleFile = this.onFileContentReadSingleFile.bind(this);\r\n    this.onFileContentReadMultipleDicom = this.onFileContentReadMultipleDicom.bind(this);\r\n    this.onFileContentReadMultipleHdr = this.onFileContentReadMultipleHdr.bind(this);\r\n    this.setErrorString = this.setErrorString.bind(this);\r\n    this.onModalWindowCWHide = this.onModalWindowCWHide.bind(this); \r\n    this.onModalDicomSeriesHide = this.onModalDicomSeriesHide.bind(this);\r\n    this.onDicomSerieSelected = this.onDicomSerieSelected.bind(this);\r\n\r\n    this.callbackReadProgress = this.callbackReadProgress.bind(this);\r\n    this.callbackReadComplete = this.callbackReadComplete.bind(this);\r\n    this.callbackReadSingleDicomComplete = this.callbackReadSingleDicomComplete.bind(this);\r\n    this.callbackReadMultipleComplete = this.callbackReadMultipleComplete.bind(this);\r\n    this.callbackCompleteMultipleDicom = this.callbackCompleteMultipleDicom.bind(this);\r\n\r\n    this.m_fileNameOnLoad = '';\r\n    this.m_fileName = '';\r\n    this.m_fileIndex = 0;\r\n    this.m_fileReader = null;\r\n    this.state = {\r\n      strUrl: '',\r\n      showModalUrl: false,\r\n      showModalDemo: false,\r\n      showModalGoogle: false,\r\n      showModalWindowCW: false,\r\n      onLoadCounter: 1,\r\n    };\r\n    this.m_volumeSet = null;\r\n    this.m_volumeRoi = null;\r\n    this.m_updateEnable = true;\r\n    this.roiMode = false;\r\n  }\r\n\r\n  finalizeSuccessLoadedVolume(volSet, fileNameIn) {\r\n    const store = this.props;\r\n\r\n    console.assert(volSet instanceof VolumeSet, \"finalizeSuccessLoadedVolume: should be VolumeSet\");\r\n    console.assert(volSet.getNumVolumes() >= 1, \"finalizeSuccessLoadedVolume: should be more or 1 volume\");\r\n    const indexVol = 0;\r\n\r\n    const vol = volSet.getVolume(indexVol);\r\n    console.assert(vol !== null, \"finalizeSuccessLoadedVolume: should be non zero volume\");\r\n\r\n    if (vol.m_dataArray !== null) {\r\n      console.log(`success loaded volume from ${fileNameIn}`);\r\n      if (NEED_TEXTURE_SIZE_4X) {\r\n        vol.makeDimensions4x();\r\n      }\r\n      // invoke notification\r\n    \r\n      // send update (repaint) if was loaded prev model\r\n      if (store.isLoaded) {\r\n        store.dispatch({ type: StoreActionType.SET_IS_LOADED, isLoaded: false });  \r\n      }\r\n\r\n      store.dispatch({ type: StoreActionType.SET_VOLUME_SET, volumeSet: volSet });\r\n      store.dispatch({ type: StoreActionType.SET_VOLUME_INDEX, volumeIndex: 0 });\r\n      store.dispatch({ type: StoreActionType.SET_IS_LOADED, isLoaded: true });\r\n      store.dispatch({ type: StoreActionType.SET_FILENAME, fileName: fileNameIn });\r\n      store.dispatch({ type: StoreActionType.SET_ERR_ARRAY, arrErrors: [] });\r\n      const tex3d = new Texture3D();\r\n      tex3d.createFromRawVolume(vol);\r\n      store.dispatch({ type: StoreActionType.SET_TEXTURE3D, texture3d: tex3d });\r\n      store.dispatch({ type: StoreActionType.SET_MODE_VIEW, modeView: ModeView.VIEW_2D });\r\n      store.dispatch({ type: StoreActionType.SET_MODE_3D, mode3d: Modes3d.RAYCAST });\r\n    }\r\n  }\r\n\r\n  setErrorString(strErr) {\r\n    const store = this.props;\r\n    const arrErrors = [];\r\n    arrErrors.push(strErr);\r\n    store.dispatch({ type: StoreActionType.SET_IS_LOADED, isLoaded: false });\r\n    store.dispatch({ type: StoreActionType.SET_ERR_ARRAY, arrErrors: arrErrors });\r\n    store.dispatch({ type: StoreActionType.SET_VOLUME_SET, volume: null });\r\n  }\r\n\r\n  finalizeFailedLoadedVolume(volSet, fileNameIn, arrErrors) {\r\n    console.assert(arrErrors !== undefined);\r\n    // invoke notification\r\n    const store = this.props;\r\n    store.dispatch({ type: StoreActionType.SET_IS_LOADED, isLoaded: false });\r\n    store.dispatch({ type: StoreActionType.SET_VOLUME_SET, volume: null });\r\n    store.dispatch({ type: StoreActionType.SET_ERR_ARRAY, arrErrors: arrErrors });\r\n    store.dispatch({ type: StoreActionType.SET_FILENAME, fileName: fileNameIn });\r\n\r\n    const uiapp = store.uiApp;\r\n    uiapp.doHideProgressBar();\r\n  }\r\n\r\n  callbackReadProgress(ratio01) {\r\n    // console.log(`callbackReadProgress = ${ratio01}`);\r\n    const ratioPrc = Math.floor(ratio01 * 100);\r\n    const store = this.props;\r\n    const uiapp = store.uiApp;\r\n    if (uiapp !== null) {\r\n      if (ratioPrc === 0) {\r\n        uiapp.doShowProgressBar('Loading...');\r\n      }\r\n      if (ratioPrc >= 99) {\r\n        // console.log(`callbackReadProgress. hide on = ${ratio01}`);\r\n        uiapp.doHideProgressBar();\r\n      } else {\r\n        uiapp.doSetProgressBarRatio(ratioPrc);\r\n      }\r\n    }\r\n  } // callback progress\r\n\r\n  callbackReadComplete(errCode) {\r\n    if (errCode === undefined) {\r\n      console.log('callbackReadComplete. should be errCode');\r\n    } else {\r\n      if (errCode !== LoadResult.SUCCESS) {\r\n        const strErr = LoadResult.getResultString(errCode);\r\n        this.setErrorString(strErr);\r\n      }\r\n    }\r\n    const store = this.props;\r\n    const uiapp = store.uiApp;\r\n    // console.log(`callbackReadComplete wiyth err = ${loadErrorCode}`);\r\n    uiapp.doHideProgressBar();\r\n\r\n    if (errCode === LoadResult.SUCCESS) {\r\n      // console.log('callbackReadComplete finished OK');\r\n      this.finalizeSuccessLoadedVolume(this.m_volumeSet, this.m_fileName);\r\n    } else {\r\n      console.log(`callbackReadComplete failed! reading ${this.m_fileName} file`);\r\n      const arrErr = [];\r\n      const strErr = LoadResult.getResultString(errCode);\r\n      arrErr.push(strErr);\r\n      this.finalizeFailedLoadedVolume(this.m_volumeSet, this.m_fileName, arrErr);\r\n    }\r\n  }\r\n\r\n  callbackReadSingleDicomComplete(errCode) {\r\n    if (errCode === LoadResult.SUCCESS) {\r\n      // console.log('TODO: UI select window center /width ...');\r\n\r\n      const store = this.props;\r\n      store.dispatch({ type: StoreActionType.SET_VOLUME_SET, volumeSet: this.m_volumeSet });\r\n      store.dispatch({ type: StoreActionType.SET_VOLUME_INDEX, volumeIndex: 0 });\r\n      // save dicom loader to store\r\n      store.dispatch({ type: StoreActionType.SET_LOADER_DICOM, loaderDicom: this.m_loader });\r\n\r\n      // setup modal: window min, max\r\n      this.childModalWindowCenterWidth.initWindowRange();\r\n\r\n      // show modal: select window center, width\r\n      this.setState({ showModalWindowCW: true });\r\n      return; // do nothing immediately after: wait for dialog\r\n    }\r\n    this.callbackReadComplete(errCode);\r\n  }\r\n\r\n  callbackReadMultipleComplete(errCode) {\r\n    if (errCode !== LoadResult.SUCCESS) {\r\n      const strErr = LoadResult.getResultString(errCode);\r\n      this.setErrorString(strErr);\r\n    }\r\n  }\r\n\r\n  onFileReadSingleUncompressedFile(strContent, callbackProgress, callbackComplete, callbackCompleteSingleDicom) {\r\n    if (this.m_fileName.endsWith('.ktx') || this.m_fileName.endsWith('.KTX')) {\r\n      // if read ktx\r\n      this.m_volumeSet.readFromKtx(strContent, callbackProgress, callbackComplete);\r\n    } else if (this.m_fileName.endsWith('.nii') || this.m_fileName.endsWith('.NII')) {\r\n      this.m_volumeSet.readFromNifti(strContent, callbackProgress, callbackComplete);\r\n    } else if (this.m_fileName.endsWith('.dcm') || this.m_fileName.endsWith('.DCM')) {\r\n      this.m_loader = new LoaderDicom();\r\n      this.m_loader.m_zDim = 1;\r\n      this.m_loader.m_numFiles = 1;\r\n      this.m_volumeSet.readFromDicom(this.m_loader, strContent, callbackProgress, callbackCompleteSingleDicom);\r\n    } else if (this.m_fileName.endsWith('.hdr') || this.m_fileName.endsWith('.HDR')) {\r\n      // readOk = vol.readFromHdrHeader(strContent, callbackProgress, callbackComplete);\r\n      console.log(`cant read single hdr file: ${this.m_fileName}`);\r\n      // readStatus = LoadResult.BAD_HEADER;\r\n    } else if (this.m_fileName.endsWith('.img') || this.m_fileName.endsWith('.IMG')) {\r\n      // readOk = vol.readFromHdrImage(strContent, callbackProgress, callbackComplete);\r\n      console.log(`cant read single img file: ${this.m_fileName}`);\r\n      // readStatus = LoadResult.BAD_HEADER;\r\n    } else {\r\n      console.log(`onFileContentReadSingleFile: unknown file type: ${this.m_fileName}`);\r\n    }\r\n  }\r\n\r\n  onFileContentReadSingleFile() {\r\n    let strContent = this.m_fileReader.result;\r\n    this.onFileReadSingleBuffer(strContent);\r\n  }\r\n\r\n  //\r\n  // daikon read individual slice from file buffer (one from multiple files)\r\n  // strContent is ArrayBuffer\r\n  readSliceDicomViaDaikon(fileIndex, fileName, ratioLoad, strContent) {\r\n    const loaderDaikon = new LoaderDcmDaikon();\r\n    const ret = loaderDaikon.readSlice(this.m_loader, fileIndex, fileName, strContent);\r\n    return ret;\r\n  } // end read single slice via daikon\r\n\r\n  onFileReadSingleBuffer(strContent) {\r\n    // daikon read\r\n    // strContent is ArrayBuffer\r\n    if ( (this.m_fileName.endsWith('.dcm') || this.m_fileName.endsWith('.DCM')) && READ_DICOM_VIA_DAIKON) {\r\n      const loaderDcm = new LoaderDcmDaikon();\r\n      const store = this.props;\r\n      const fileIndex = this.m_fileIndex;\r\n      const fileName = this.m_fileName;\r\n      this.m_loader = new LoaderDicom(1);\r\n      const ret = loaderDcm.readSingleSlice(store, this.m_loader, fileIndex, fileName, strContent);\r\n      this.callbackReadSingleDicomComplete(ret);\r\n      return ret;\r\n    }\r\n    this.m_volumeSet = new VolumeSet();\r\n    // add empty [0]-th volume in set to read single file\r\n    this.m_volumeSet.addVolume(new Volume())\r\n    const callbackProgress = this.callbackReadProgress;\r\n    const callbackComplete = this.callbackReadComplete;\r\n    const callbackCompleteSingleDicom = this.callbackReadSingleDicomComplete;\r\n\r\n\r\n    if (this.m_fileName.endsWith('.ktx') || this.m_fileName.endsWith('.KTX')) {\r\n      // if read ktx\r\n      this.m_volumeSet.readFromKtx(strContent, callbackProgress, callbackComplete);\r\n    } else if (this.m_fileName.endsWith('.nii') || this.m_fileName.endsWith('.NII')) {\r\n      this.m_volumeSet.readFromNifti(strContent, callbackProgress, callbackComplete);\r\n    } else if (this.m_fileName.endsWith('.dcm') || this.m_fileName.endsWith('.DCM')) {\r\n      this.m_loader = new LoaderDicom();\r\n      this.m_loader.m_zDim = 1;\r\n      this.m_loader.m_numFiles = 1;\r\n      this.m_volumeSet.readFromDicom(this.m_loader, strContent, callbackProgress, callbackCompleteSingleDicom);\r\n      // save dicomInfo to store\r\n      const dicomInfo = this.m_loader.m_dicomInfo;\r\n      const sliceInfo = dicomInfo.m_sliceInfo[0];\r\n      sliceInfo.m_fileName = this.m_fileName;\r\n      sliceInfo.m_sliceName = 'Slice 0';\r\n      const store = this.props;\r\n      store.dispatch({ type: StoreActionType.SET_DICOM_INFO, dicomInfo: dicomInfo });\r\n    } else if (this.m_fileName.endsWith('.hdr') || this.m_fileName.endsWith('.HDR')) {\r\n      // readOk = vol.readFromHdrHeader(strContent, callbackProgress, callbackComplete);\r\n      console.log(`cant read single hdr file: ${this.m_fileName}`);\r\n      // readStatus = LoadResult.BAD_HEADER;\r\n    } else if (this.m_fileName.endsWith('.img') || this.m_fileName.endsWith('.IMG')) {\r\n      // readOk = vol.readFromHdrImage(strContent, callbackProgress, callbackComplete);\r\n      console.log(`cant read single img file: ${this.m_fileName}`);\r\n      // readStatus = LoadResult.BAD_HEADER;\r\n    } else {\r\n      console.log(`onFileContentReadSingleFile: unknown file type: ${this.m_fileName}`);\r\n    }\r\n   \r\n  }\r\n\r\n  //\r\n  // read hdr/img. content is in this.m_fileReader.result\r\n  //\r\n  onFileContentReadMultipleHdr() {\r\n    const VALID_NUM_FILES_2 = 2;\r\n    const VALID_NUM_FILES_4 = 4;\r\n    if ((this.m_numFiles !== VALID_NUM_FILES_2) && (this.m_numFiles !== VALID_NUM_FILES_4)) {\r\n      console.log(`onFileContentReadMultipleHdr: can read ${VALID_NUM_FILES_2} or ${VALID_NUM_FILES_4} files for multiple hdr loader`);  \r\n      return;\r\n    }\r\n\r\n    const isHdr = this.m_fileName.endsWith('hdr') || this.m_fileName.endsWith('HDR');\r\n    console.log(`onFileContentReadMultipleHdr: read file ${this.m_fileName}. Ratio=${this.m_fileIndex} / ${this.m_numFiles}`);\r\n    this.m_fileIndex++;\r\n    const ratioLoad = this.m_fileIndex / this.m_numFiles;\r\n    const strContent = this.m_fileReader.result;\r\n    // const lenContent = strContent.length;\r\n\r\n    if (this.m_fileIndex <= 1) {\r\n      // add single volume to set\r\n      if (this.m_volumeSet.getNumVolumes() === 0) {\r\n        this.m_volumeSet.addVolume(new Volume());\r\n      }\r\n      this.callbackReadProgress(0.0);\r\n    }\r\n\r\n    if ((this.m_numFiles === VALID_NUM_FILES_4) && (this.m_volumeRoi === null)) {\r\n      this.m_volumeRoi = new Volume();\r\n    }\r\n\r\n    const callbackProgress = null;\r\n    const callbackComplete = null;\r\n\r\n    const regExpFileName = /([\\S]+)\\.[\\S]+/;\r\n    const fnameArr = regExpFileName.exec(this.m_fileName);\r\n    const numFN = fnameArr.length;\r\n    let detectedMask  = false;\r\n    let detectedIntensity = false;\r\n    if (numFN === 2) {\r\n      const fname = fnameArr[1];\r\n      if (fname.endsWith('_mask')) {\r\n        detectedMask = true;\r\n      }\r\n      if (fname.endsWith('_intn')) {\r\n        detectedIntensity = true;\r\n      }\r\n    }\r\n    let volDst = this.m_volumeSet.getVolume(0);\r\n    if (this.m_fileIndex > VALID_NUM_FILES_2) {\r\n      volDst = this.m_volumeRoi;\r\n    }\r\n    if (detectedIntensity) {\r\n      volDst = this.m_volumeSet.getVolume(0);\r\n    }\r\n    if (detectedMask) {\r\n      volDst = this.m_volumeRoi;\r\n      this.roiMode = true;\r\n      // console.log('mask vol by name');\r\n      if (this.m_numFiles !== VALID_NUM_FILES_4) {\r\n        console.log('You need to load 4 files, if one of them has _mask in name');\r\n        return;\r\n      }\r\n    }\r\n\r\n    // read header or image from src files\r\n    let readOk = false;\r\n    if (isHdr) {\r\n      readOk = this.m_loader.readFromBufferHeader(volDst, strContent, callbackProgress, callbackComplete);\r\n    } else {\r\n      readOk = this.m_loader.readFromBufferImage(volDst, strContent, callbackProgress, callbackComplete);\r\n    }\r\n\r\n    // create final volume from readed data\r\n    volDst = this.m_volumeSet.getVolume(0);\r\n    if (readOk && (this.m_fileIndex === this.m_numFiles)) {\r\n      let ok = false;\r\n      if (this.m_numFiles === VALID_NUM_FILES_2) {\r\n        ok = this.m_loader.createVolumeFromHeaderAndImage(volDst);\r\n      } else if (this.m_numFiles === VALID_NUM_FILES_4) {\r\n        // intensity data 16 -> 8 bpp\r\n        ok = this.m_loader.createVolumeFromHeaderAndImage(volDst);\r\n        if (ok) {\r\n          // mix 8 bpp intensity and roi pixels\r\n          ok = this.m_loader.createRoiVolumeFromHeaderAndImage(volDst, this.m_volumeRoi);\r\n        }\r\n      }\r\n      this.callbackReadProgress(1.0);\r\n      if (!ok) {\r\n        this.callbackReadComplete(LoadResult.FAIL);\r\n      } else {\r\n        this.callbackReadComplete(LoadResult.SUCCESS);\r\n      }\r\n    }\r\n\r\n    // read again new file\r\n    if (this.m_fileIndex < this.m_numFiles) {\r\n      this.callbackReadProgress(ratioLoad);\r\n      this.m_fileReader.onloadend = this.onFileContentReadMultipleHdr;\r\n      const file = this.m_files[this.m_fileIndex];\r\n      this.m_fileName = file.name;\r\n      this.m_fileReader.readAsArrayBuffer(file);\r\n    }\r\n\r\n  } // on multuple hdr\r\n\r\n  // on complete read multuple dicom\r\n  callbackCompleteMultipleDicom(errCode) {\r\n    if (errCode !== LoadResult.SUCCESS) {\r\n      const strErr = LoadResult.getResultString(errCode);\r\n      this.setErrorString(strErr);\r\n    }\r\n  }\r\n\r\n  //\r\n  // read from string content in this.m_fileReader.result\r\n  //\r\n  onFileContentReadMultipleDicom() {\r\n    // console.log('UiOpenMenu. onFileContentReadMultipleDicom ...');\r\n    const strContent = this.m_fileReader.result;\r\n    this.m_fileIndex++;\r\n    const ratioLoad = this.m_fileIndex / this.m_numFiles;\r\n    // console.log(`onFileContentReadMultipleDicom. r = ${ratioLoad}`);\r\n    const callbackProgress = null;\r\n    // const callbackComplete = this.callbackReadMultipleComplete;\r\n\r\n    if (this.m_fileIndex <= 1) {\r\n      // add new volume to volume set on the first slice\r\n      const vol = new Volume();\r\n      this.m_volumeSet.addVolume(vol);\r\n      // init progress on the first file loading\r\n      this.callbackReadProgress(0.0);\r\n    }\r\n\r\n    // FIX 05/06/2020: read multiple dicom callback complete \r\n    // can be invoked with error code\r\n    const callbackColmpleteVoid = this.callbackCompleteMultipleDicom;\r\n\r\n    let readStatus;\r\n\r\n    if (READ_DICOM_VIA_DAIKON) {\r\n      readStatus = this.readSliceDicomViaDaikon(this.m_fileIndex - 1, this.m_fileName, ratioLoad, strContent);\r\n    } else {\r\n      readStatus = this.m_volumeSet.readSingleSliceFromDicom(this.m_loader, this.m_fileIndex - 1, \r\n        this.m_fileName, ratioLoad, strContent, callbackProgress, callbackColmpleteVoid);\r\n    }\r\n\r\n    if (readStatus !== LoadResult.SUCCESS) {\r\n      console.log('onFileContentReadMultipleDicom. Error read individual file');\r\n    }\r\n    if ( (readStatus === LoadResult.SUCCESS) && (this.m_fileIndex === this.m_numFiles)) {\r\n      // setup global vars\r\n      const store = this.props;\r\n      store.dispatch({ type: StoreActionType.SET_VOLUME_INDEX, volumeIndex: 0 });\r\n      store.dispatch({ type: StoreActionType.SET_VOLUME_SET, volumeSet: this.m_volumeSet });\r\n\r\n      // save dicom loader to store\r\n      store.dispatch({ type: StoreActionType.SET_LOADER_DICOM, loaderDicom: this.m_loader });\r\n      // stop show loading progress bar\r\n      this.callbackReadProgress(1.0);\r\n      this.callbackReadComplete(LoadResult.SUCCESS);\r\n\r\n      this.childModalWindowCenterWidth.initWindowRange();\r\n\r\n      // show modal: select window center, width\r\n      this.setState({ showModalWindowCW: true });\r\n      return; // do nothing immediately after: wait for dialog\r\n      \r\n    } // end if successfully read all files (multiple dicom read)\r\n    // read again new file\r\n    if (readStatus === LoadResult.SUCCESS) {\r\n      if (this.m_fileIndex < this.m_numFiles) {\r\n        // print console loading progress\r\n        const NUM_PARTS_REPORT = 16;\r\n        const STEP_PROGRESS = Math.floor(this.m_numFiles / NUM_PARTS_REPORT);\r\n        if ((this.m_fileIndex % STEP_PROGRESS) === 0) {\r\n          // console.log(`onFileContentReadMultipleDicom. Loading completed = ${ratioLoad}`);\r\n          this.callbackReadProgress(ratioLoad);\r\n        }\r\n  \r\n        this.m_fileReader.onloadend = this.onFileContentReadMultipleDicom;\r\n        const file = this.m_files[this.m_fileIndex];\r\n        this.m_fileName = file.name;\r\n        this.m_fileReader.readAsArrayBuffer(file);\r\n      } // if still need files\r\n    } else {\r\n      const arrErr = [];\r\n      const strErr = this.props.arrErrors[0];\r\n      arrErr.push(strErr);\r\n      this.finalizeFailedLoadedVolume(this.m_volumeSet, this.m_fileName, arrErr);\r\n    } // if result is not success\r\n  }\r\n\r\n  //\r\n  // Perform open file after it selected in dialog\r\n  handleFileSelected(evt) {\r\n    if (evt.target.files !== undefined) {\r\n      let numFiles = evt.target.files.length;\r\n      console.log(`UiOpenMenu. Trying to open ${numFiles} files`);\r\n      if (numFiles <= 0) {\r\n        return;\r\n      }\r\n      console.log(`UiOpenMenu. handleFileSelected. file[0] = ${evt.target.files[0].name}`);\r\n      this.m_volumeSet = new VolumeSet();\r\n      if (numFiles === 1) {\r\n        const file = evt.target.files[0];\r\n        this.m_fileName = file.name;\r\n\r\n        //  read gzip\r\n        if (this.m_fileName.endsWith('.gz')) {\r\n          // here will be result raw buffer\r\n          this.m_unzippedBuffer = null;\r\n\r\n          // remove last 3 chars form file name string\r\n          this.m_fileName = this.m_fileName.slice(0, -3);\r\n\r\n          const store = this.props;\r\n\r\n          const gunzip = zlib.createGunzip();\r\n          createReadStream(file).pipe(gunzip);\r\n          gunzip.on('data', (data) => {\r\n            // progress\r\n            const uiapp = store.uiApp;\r\n            if (this.m_unzippedBuffer == null) {\r\n              uiapp.doShowProgressBar('Read gzip...');\r\n            } else {\r\n              const readSize = this.m_unzippedBuffer.length;\r\n              const allSize = file.size;\r\n              const KOEF_DEFLATE = 0.28;\r\n              const ratio100 = Math.floor(readSize * 100.0 * KOEF_DEFLATE / allSize);\r\n              uiapp.doSetProgressBarRatio(ratio100);\r\n            }\r\n\r\n            // read the data chunk-by-chunk\r\n            // data is Uint8Array\r\n            const dataSize = data.length;\r\n            if (this.m_unzippedBuffer == null) {\r\n              \r\n              this.m_unzippedBuffer = new Uint8Array(dataSize);\r\n              this.m_unzippedBuffer.set(data, 0);\r\n            } else {\r\n              \r\n              const dataCollectedSize = this.m_unzippedBuffer.length;\r\n              const arrNew = new Uint8Array(dataCollectedSize + dataSize);\r\n              arrNew.set(this.m_unzippedBuffer, 0);\r\n              arrNew.set(data, dataCollectedSize);\r\n              this.m_unzippedBuffer = arrNew;\r\n            }\r\n          });\r\n          gunzip.on('close', () => {\r\n            console.log('gzip on close');\r\n          });\r\n\r\n          gunzip.on('end', () => {\r\n            // close progress\r\n            const uiapp = store.uiApp;\r\n            uiapp.doHideProgressBar();\r\n\r\n            // now all chunks are read. Need to check raw ungzipped buffer\r\n            const sizeBuffer = this.m_unzippedBuffer.length;\r\n            if (sizeBuffer < 128) {\r\n              console.log('Too small ungzipped data: ' + sizeBuffer.toString() + ' bytes. can not read volume data');\r\n              return;\r\n            }\r\n            // check correct nifti header after extract raw bytes from gzip\r\n            const headTemplate = [0x00, 0x00, 0x01, 0x5c];\r\n            let correctHead0 = true;\r\n            for (let i = 0; i < 4; i++) {\r\n              if (this.m_unzippedBuffer[i] !== headTemplate[i]) {\r\n                correctHead0 = false;\r\n              }\r\n            }\r\n            let correctHead1 = true;\r\n            for (let i = 0; i < 4; i++) {\r\n              if (this.m_unzippedBuffer[i] !== headTemplate[3 - i]) {\r\n                correctHead1 = false;\r\n              }\r\n            }\r\n            if (!correctHead0 && !correctHead1) {\r\n              console.log('Wrong Nifti Header, cant read gzipped file');\r\n              return;\r\n            }\r\n            console.log('ungzip done with ' + sizeBuffer.toString() + ' bytes. Correct nifti header detected');\r\n            // process raw data buffer\r\n            this.onFileReadSingleBuffer(this.m_unzippedBuffer);\r\n          });\r\n          return;\r\n        } // if gzipped file\r\n\r\n        this.m_fileReader = new FileReader();\r\n        this.m_fileReader.onloadend = this.onFileContentReadSingleFile;\r\n        this.m_fileReader.readAsArrayBuffer(file);\r\n      } else {\r\n        // not single file was open\r\n        this.m_files = Array.from(evt.target.files); // FileList -> Array\r\n        this.m_fileIndex = 0;\r\n        this.m_numFiles = numFiles;\r\n        this.m_fileReader = new FileReader();\r\n        // if multiple files, create Dicom loader\r\n        this.m_loader = null;\r\n        if (evt.target.files[0].name.endsWith(\".dcm\")) {\r\n\r\n          // remove non-dcm files\r\n          let numFilesNew = 0;\r\n          for (let i = numFiles - 1; i >= 0; i--) {\r\n            if (this.m_files[i].name.endsWith(\".dcm\")) {\r\n              numFilesNew ++;\r\n            } else {\r\n              this.m_files.splice(i, 1);\r\n            }\r\n\r\n          }\r\n          numFiles = numFilesNew;\r\n          this.m_numFiles = numFilesNew;\r\n          \r\n          this.m_loader = new LoaderDicom(numFiles);\r\n          const dicomInfo = this.m_loader.m_dicomInfo;\r\n\r\n          // save dicomInfo to store\r\n          const store = this.props;\r\n          store.dispatch({ type: StoreActionType.SET_DICOM_INFO, dicomInfo: dicomInfo });\r\n\r\n          // save dicom loader to store\r\n          store.dispatch({ type: StoreActionType.SET_LOADER_DICOM, loaderDicom: this.m_loader });\r\n\r\n          this.m_fileReader.onloadend = this.onFileContentReadMultipleDicom;\r\n        } else if ((evt.target.files[0].name.endsWith(\".hdr\")) || (evt.target.files[0].name.endsWith(\".img\"))) {\r\n          this.m_loader = new LoaderHdr(numFiles);\r\n          this.m_fileReader.onloadend = this.onFileContentReadMultipleHdr;\r\n        }\r\n        \r\n        this.m_volumeRoi = null;\r\n\r\n        const file = evt.target.files[0];\r\n        this.m_fileName = file.name;\r\n        this.m_fileReader.readAsArrayBuffer(file);\r\n      } // if num files > 1\r\n    } // if event is mnot empty\r\n  }\r\n\r\n  buildFileSelector() {\r\n    const fileSelector = document.createElement('input');\r\n    fileSelector.setAttribute('type', 'file');\r\n    fileSelector.setAttribute('accept', '.ktx,.dcm,.nii,.hdr,.h,.img,.gz');\r\n    fileSelector.setAttribute('multiple', '');\r\n    fileSelector.onchange = this.handleFileSelected;\r\n    return fileSelector;\r\n  }\r\n\r\n  onButtonLocalFile(evt) {\r\n    evt.preventDefault();\r\n    this.m_fileSelector.click();\r\n  }\r\n\r\n  arrNumToStr(arrNums) {\r\n    const numLet = arrNums.length;\r\n    let str = '';\r\n    for (let i = 0; i < numLet; i++) {\r\n      const n = arrNums[i];\r\n      str = str.concat( String.fromCharCode(n) );\r\n    }\r\n    return str;\r\n  }\r\n\r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n\r\n  onModalDicomSeriesHide() {\r\n    const arrEmpty = [];\r\n    const store = this.props;\r\n    store.dispatch({ type: StoreActionType.SET_DICOM_SERIES, dicomSeries: arrEmpty });\r\n  }\r\n\r\n  onDicomSerieSelected(indexSelected) {\r\n    const store = this.props;\r\n    const series = store.dicomSeries;\r\n    const serieSelected = series[indexSelected];\r\n    const hash = serieSelected.m_hash;\r\n    this.m_loader.createVolumeFromSlices(this.m_volumeSet, indexSelected, hash);\r\n    this.finalizeSuccessLoadedVolume(this.m_volumeSet, this.m_fileName);\r\n    console.log(`onFileContentReadMultipleDicom read all ${this.m_numFiles} files`);\r\n\r\n    // clear modal\r\n    store.dispatch({ type: StoreActionType.SET_DICOM_SERIES, dicomSeries: [] });\r\n  }\r\n\r\n  //\r\n  onModalWindowCWHide(needShow) {\r\n    this.setState({ showModalWindowCW: false });\r\n    if (needShow) {\r\n      this.finalizeSuccessLoadedVolume(this.m_volumeSet, this.m_fileName);\r\n      // setup dicom series (volumes info) for global store: select volume later\r\n      const store = this.props;\r\n      let series = null;\r\n      if (this.m_loader !== undefined) {\r\n        series = this.m_loader.m_slicesVolume.getSeries();\r\n        store.dispatch({ type: StoreActionType.SET_DICOM_SERIES, dicomSeries: series });\r\n      }\r\n      // update graphics 2d window\r\n      const gra = store.graphics2d;\r\n      if (gra !== null) {\r\n        gra.forceUpdate();\r\n      }\r\n    }\r\n  }\r\n\r\n  //\r\n  // invoked after render\r\n  //\r\n  componentDidMount() {\r\n    this.m_fileSelector = this.buildFileSelector();\r\n    const fileNameOnLoad = this.m_fileNameOnLoad;\r\n    if ((fileNameOnLoad.length > 0) && (this.state.onLoadCounter > 0)) {\r\n      this.setState({ onLoadCounter: 0 });\r\n      const TIMEOUT_MS = 50;\r\n      setTimeout( this.loadFromUrl(fileNameOnLoad), TIMEOUT_MS );\r\n    }\r\n  }\r\n\r\n  // render\r\n  render() {\r\n   \r\n\r\n    const fileNameOnLoad = this.props.fileNameOnLoad;\r\n    this.m_fileNameOnLoad = fileNameOnLoad;\r\n    let jsxOnLoad = '';\r\n    if (fileNameOnLoad.length > 2) {\r\n      jsxOnLoad = <p></p>;\r\n      return jsxOnLoad;\r\n    }\r\n\r\n\r\n   \r\n    const jsxOpenMenu =\r\n    \r\n      \r\n      <div>\r\n         &nbsp;\r\n               <span  style={{ display: 'inline-block', marginTop: '6px', cursor: 'pointer' }} href=\"#actionOpenComputer\" onClick={evt => this.onButtonLocalFile(evt)}>\r\n          <i className=\"fas fa-desktop\"></i>\r\n          Upload File \r\n        </span>&nbsp;&nbsp;\r\n      \r\n        <UiModalWindowCenterWidth stateVis={this.state.showModalWindowCW} volSet={this.m_volumeSet}\r\n          onHide={this.onModalWindowCWHide} onRef={ ref => (this.childModalWindowCenterWidth = ref)} />\r\n\r\n     \r\n      </div>\r\n\r\n    return jsxOpenMenu;\r\n  }\r\n}\r\n\r\nexport default connect(store => store)(UiOpenMenu);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, ButtonGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport ModeView from \"../store/ModeView\";\r\nimport StoreActionType from \"../store/ActionTypes\";\r\n\r\n\r\nclass UiViewMode extends React.Component {\r\n  /**\r\n   * @param {object} props - props from up level object\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.m_needMode3dLight = true;\r\n\r\n    this.onMode3dLight = this.onMode3dLight.bind(this);\r\n  }\r\n\r\n  onMode(indexMode) {\r\n    const store = this.props;\r\n    store.dispatch({\r\n      type: StoreActionType.SET_MODE_VIEW,\r\n      modeView: indexMode,\r\n    });\r\n  }\r\n\r\n  onMode3dLight() {\r\n    this.onMode(ModeView.VIEW_3D_LIGHT);\r\n  }\r\n\r\n  render() {\r\n    const store = this.props;\r\n\r\n    let viewMode = store.modeView;\r\n\r\n    const str3dLight =\r\n      viewMode === ModeView.VIEW_3D_LIGHT ? \"primary\" : \"secondary\";\r\n\r\n    const jsxOut = (\r\n     \r\n        <ButtonGroup className=\"mr-2\" aria-label=\"Top group\">\r\n          <OverlayTrigger\r\n            key=\"3dLight\"\r\n            placement=\"bottom\"\r\n            overlay={\r\n              <Tooltip>3d mode with fast rendering</Tooltip>\r\n            }\r\n          >\r\n            <Button variant={str3dLight} onClick={this.onMode3dLight}>\r\n              3D Render\r\n             \r\n            </Button>\r\n          </OverlayTrigger>\r\n        </ButtonGroup>\r\n      \r\n    );\r\n\r\n    return jsxOut;\r\n  }\r\n}\r\n\r\nexport default connect((store) => store)(UiViewMode);\r\n","/**\r\n * @fileOverview SaverNifti\r\n * @author Epam\r\n * @version 1.0.0\r\n */\r\n\r\n/**\r\n/**\r\n* Nifti file saver\r\n* @module src/demo/savers/SaverNifti\r\n*/\r\n\r\nconst IS_LITTLE_ENDIAN = true;\r\n\r\n// ******************************************************************\r\n// Class\r\n// ******************************************************************\r\n\r\nclass SaverNifti {\r\n  static writeIntToBuffer(val, buf, off) {\r\n    const dataArray = new DataView(buf, off);\r\n    dataArray.setInt32(0, val, IS_LITTLE_ENDIAN);\r\n  }\r\n\r\n  static writeShortToBuffer(val, buf, off) {\r\n    const dataArray = new DataView(buf, off);\r\n    dataArray.setInt16(0, val, IS_LITTLE_ENDIAN);\r\n  }\r\n\r\n  static writeFloatToBuffer(val, buf, off) {\r\n    const dataArray = new DataView(buf, off);\r\n    dataArray.setFloat32(0, val, IS_LITTLE_ENDIAN);\r\n  }\r\n\r\n  static fpsToDimInfo(freq, phase, slice) {\r\n    const res = (freq & 0x3) | \r\n      ((phase & 0x3) << 2) |\r\n      ((slice & 0x3) << 4);\r\n    return res;\r\n  }\r\n\r\n  /**\r\n  * Write nifti file data to buffer array\r\n  * @param {object} volumeData - array of intensities (uint8)\r\n  * @param {object} volumeSize - pixel and physical size\r\n  * @return {Object} ArrayBuffer with file content\r\n  */\r\n  static writeBuffer(volumeData, volumeSize) {\r\n\r\n    // check input data\r\n    const xDim = volumeSize.x;\r\n    const yDim = volumeSize.y;\r\n    const zDim = volumeSize.z;\r\n    if ((xDim <= 0) || (yDim <= 0) || (zDim <= 0)) {\r\n      console.log(`SaverNifti. volume pixels dim is bad: ${xDim} * ${yDim} * ${zDim} `);\r\n    }\r\n    const xGrid = volumeSize.pixdim1;\r\n    const yGrid = volumeSize.pixdim2;\r\n    const zGrid = volumeSize.pixdim3;\r\n    const TOO_MUCH = 5.0;\r\n    const TOO_MIN = 0.00001;\r\n    if ((xGrid > TOO_MUCH) || (yGrid > TOO_MUCH) || (zGrid > TOO_MUCH)) {\r\n      console.log(`SaverNifti. volume grid size is too much: ${xGrid} * ${yGrid} * ${zGrid} `);\r\n    }\r\n    if ((xGrid < TOO_MIN) || (yGrid < TOO_MIN) || (zGrid < TOO_MIN)) {\r\n      console.log(`SaverNifti. volume grid size is too min: ${xGrid} * ${yGrid} * ${zGrid} `);\r\n    }\r\n    if (volumeData.length !== xDim * yDim * zDim) {\r\n      console.log(`SaverNifti. bad input volume size = ${volumeData.length}, expected = ${xDim}*${yDim}*${zDim}`);\r\n    }\r\n    const TOO_BIG_VAL = 1000000;\r\n    const TOO_SMALL_VAL = -1000000;\r\n    let valMin = TOO_BIG_VAL;\r\n    let valMax = TOO_SMALL_VAL;\r\n    const numPixels = xDim * yDim * zDim;\r\n    for (let i = 0; i < numPixels; i++) {\r\n      valMin = (volumeData[i] < valMin) ? volumeData[i] : valMin;\r\n      valMax = (volumeData[i] > valMax) ? volumeData[i] : valMax;\r\n    }\r\n    const TOO_MIN_RANGE = 60;\r\n    if (valMax - valMin < TOO_MIN_RANGE) {\r\n      console.log(`SaverNifti. bad input volume data range: [${valMin} .. ${valMax}]`);\r\n    }\r\n\r\n    const NIFTI_HEADER_SIZE = 348;\r\n    const BYTES_PER_ELEMENT = 2;\r\n    const arrBuf = new ArrayBuffer(NIFTI_HEADER_SIZE + volumeData.length * BYTES_PER_ELEMENT);\r\n    const bufBytes = new Uint8Array(arrBuf);\r\n\r\n    const SIZE_DWORD = 4;\r\n    const SIZE_SHORT = 2;\r\n\r\n    let bufOff = 0;\r\n    SaverNifti.writeIntToBuffer(NIFTI_HEADER_SIZE, arrBuf, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n    // data type\r\n    // eslint-disable-next-line\r\n    bufOff += 10;\r\n    // db name\r\n    // eslint-disable-next-line\r\n    bufOff += 18;\r\n    // extents\r\n    bufOff += SIZE_DWORD;\r\n    // session error\r\n    bufOff += SIZE_SHORT;\r\n    // regular\r\n    bufOff += 1;\r\n    // dim info\r\n    const D_FREQ = 1;\r\n    const D_PHASE = 2;\r\n    const D_SLICE = 3;\r\n    const dimInfo = SaverNifti.fpsToDimInfo(D_FREQ, D_PHASE, D_SLICE);\r\n    bufBytes[bufOff] = dimInfo;\r\n    bufOff += 1;\r\n\r\n    // write number of dimensions\r\n    const NUM_DIMS = 3;\r\n    SaverNifti.writeShortToBuffer(NUM_DIMS, arrBuf, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n    // dave dims\r\n    SaverNifti.writeShortToBuffer(volumeSize.x, arrBuf, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n    SaverNifti.writeShortToBuffer(volumeSize.y, arrBuf, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n    SaverNifti.writeShortToBuffer(volumeSize.z, arrBuf, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n\r\n    // eslint-disable-next-line\r\n    bufOff += 8;\r\n\r\n    // intent_p1\r\n    bufOff += SIZE_DWORD;\r\n    // intent_p2\r\n    bufOff += SIZE_DWORD;\r\n    // intent_p3\r\n    bufOff += SIZE_DWORD;\r\n    // intent_code\r\n    bufOff += SIZE_SHORT;\r\n    // datatype\r\n    const DATA_TYPE_UINT16 = 512;\r\n    SaverNifti.writeShortToBuffer(DATA_TYPE_UINT16, arrBuf, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n    // bitpix\r\n    const BIT_PIXELS = 16;\r\n    SaverNifti.writeShortToBuffer(BIT_PIXELS, arrBuf, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n    // slice start\r\n    bufOff += SIZE_SHORT;\r\n\r\n    // grid spacing (pixdim)\r\n    bufOff += SIZE_DWORD;\r\n    SaverNifti.writeFloatToBuffer(volumeSize.pixdim1, arrBuf, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n    SaverNifti.writeFloatToBuffer(volumeSize.pixdim2, arrBuf, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n    SaverNifti.writeFloatToBuffer(volumeSize.pixdim3, arrBuf, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n    // eslint-disable-next-line\r\n    bufOff += SIZE_DWORD * 4;\r\n\r\n    // voxoffset\r\n    const VOX_OFFSET = 352.0;\r\n    SaverNifti.writeFloatToBuffer(VOX_OFFSET, arrBuf, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n\r\n    // sclSlope\r\n    const SLOPE = 1.0;\r\n    SaverNifti.writeFloatToBuffer(SLOPE, arrBuf, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n    // sclInter\r\n    const INTER = 0.0;\r\n    SaverNifti.writeFloatToBuffer(INTER, arrBuf, bufOff);\r\n    bufOff += SIZE_DWORD;\r\n    // sliceEnd\r\n    bufOff += SIZE_SHORT;\r\n    // sliceCode\r\n    const SLICE_CODE = 1;\r\n    bufBytes[bufOff] = SLICE_CODE;\r\n    bufOff++;\r\n    // m_xyztUnits\r\n    const XYZ_UNITS = 10;\r\n    bufBytes[bufOff] = XYZ_UNITS;\r\n    bufOff++;\r\n    // m_calMax, m_calMin, m_sliceDuration, m_toffset\r\n    bufOff += SIZE_DWORD * 4;\r\n    // m_glmax, m_glmin\r\n    bufOff += SIZE_DWORD * 2;\r\n    // m_descrip[80]\r\n    bufOff += 80;\r\n    // m_auxFile[24]\r\n    bufOff += 24;\r\n\r\n    // m_qformCode\r\n    const FORM_CODE = 1;\r\n    SaverNifti.writeShortToBuffer(FORM_CODE, arrBuf, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n    // m_sformCode\r\n    SaverNifti.writeShortToBuffer(FORM_CODE, arrBuf, bufOff);\r\n    bufOff += SIZE_SHORT;\r\n\r\n    // 4 last bytes are magic\r\n    bufOff = NIFTI_HEADER_SIZE - SIZE_DWORD;\r\n    // 'n' == 110, '+' == 43, '1' == 49\r\n    const MAG_0 = 110;\r\n    const MAG_1 = 43;\r\n    const MAG_2 = 49;\r\n    bufBytes[bufOff + 0] = MAG_0;\r\n    // eslint-disable-next-line\r\n    bufBytes[bufOff + 1] = MAG_1;\r\n    // eslint-disable-next-line\r\n    bufBytes[bufOff + 2] = MAG_2;\r\n    bufOff += SIZE_DWORD; // last magic bytes in header\r\n\r\n    const volDataUInt16 = new Uint16Array(volumeData);\r\n    const bufBytes16 = new Uint16Array(arrBuf, bufOff);\r\n    bufBytes16.set(volDataUInt16);\r\n\r\n    return arrBuf;\r\n  }\r\n} // end of class\r\n\r\nexport default SaverNifti;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Modal, Table, Button, Form, Row, Col } from 'react-bootstrap';\r\n\r\nimport SaverNifti from '../engine/savers/SaverNifti';\r\n\r\n// ********************************************************\r\n// Class\r\n// ********************************************************\r\n\r\nclass UiModalSaveNifti extends React.Component {\r\n  /**\r\n   * @param {object} props - props from up level object\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.onModalShow = this.onModalShow.bind(this);\r\n    this.onModalHide = this.onModalHide.bind(this);\r\n    this.onButtonSave = this.onButtonSave.bind(this);\r\n    this.onTexChange = this.onTexChange.bind(this);\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    this.onSaveNifti = this.onSaveNifti.bind(this);\r\n\r\n    this.m_hideFunc = null;\r\n\r\n    this.state = {\r\n      showModalSaveNifti: false,\r\n      text: 'dump'\r\n    };\r\n  } // end constr\r\n\r\n  onButtonSave() {\r\n    // console.log('on button save');\r\n    this.m_hideFunc();\r\n    this.onSaveNifti();\r\n  }\r\n\r\n  onModalShow() {\r\n    this.setState({ showModalSaveNifti: true });\r\n  }\r\n\r\n  onModalHide() {\r\n    this.setState({ showModalSaveNifti: false });\r\n  }\r\n\r\n  handleFormSubmit(evt) {\r\n    evt.preventDefault();\r\n    this.m_hideFunc();\r\n    this.onSaveNifti();\r\n  }\r\n\r\n  onTexChange(evt) {\r\n    const strText = evt.target.value;\r\n    // console.log(`onTexChange. text = ${strText}`);\r\n    this.setState({ text: strText });\r\n  }\r\n\r\n  // invoked on save nifti file format\r\n  onSaveNifti() {\r\n    const store = this.props;\r\n\r\n    const volSet = store.volumeSet;\r\n    const volIndex = store.volumeIndex;\r\n    const vol = volSet.getVolume(volIndex);\r\n\r\n    const xDim = vol.m_xDim;\r\n    const yDim = vol.m_yDim;\r\n    const zDim = vol.m_zDim;\r\n    const xBox = vol.m_boxSize.x;\r\n    const yBox = vol.m_boxSize.y;\r\n    const zBox = vol.m_boxSize.z;\r\n    const volSize = {\r\n      x: xDim,\r\n      y: yDim,\r\n      z: zDim,\r\n      pixdim1: xBox / xDim,\r\n      pixdim2: yBox / yDim,\r\n      pixdim3: zBox / zDim,\r\n    };\r\n    let volData = vol.m_dataArray;\r\n    const vR = store.volumeRenderer; \r\n    if ( vR !== null ) {\r\n      volData = vR.volumeUpdater.bufferR;\r\n    };\r\n\r\n    const niiArr = SaverNifti.writeBuffer(volData, volSize);\r\n    const textToSaveAsBlob = new Blob([niiArr], { type: 'application/octet-stream' });\r\n    const textToSaveAsURL = window.URL.createObjectURL(textToSaveAsBlob);\r\n    let fileName = this.state.text;\r\n    const goodSuffix = fileName.endsWith('.nii');\r\n    if (!goodSuffix) {\r\n      fileName = fileName.concat('.nii');\r\n    }\r\n    // console.log(`Save to file ${fileName}`);\r\n\r\n    const downloadLink = document.createElement('a');\r\n    downloadLink.download = fileName;\r\n    downloadLink.innerHTML = 'Download File';\r\n    downloadLink.href = textToSaveAsURL;\r\n    downloadLink.onclick = event => document.body.removeChild(event.target);\r\n    downloadLink.style.display = 'none';\r\n    document.body.appendChild(downloadLink);\r\n\r\n    downloadLink.click();\r\n  } // end on save nifti\r\n\r\n  render() {\r\n    const stateVis = this.props.stateVis;\r\n    const onHideFunc = this.props.onHide;\r\n    this.m_hideFunc = onHideFunc;\r\n    const jsxModalSaveNifti =\r\n    <Modal show={stateVis} onHide={onHideFunc} >\r\n\r\n      <Modal.Body>\r\n\r\n        <Modal.Title>\r\n          Save as Nifti\r\n        </Modal.Title>\r\n\r\n        <Form onSubmit={evt => this.handleFormSubmit(evt)}>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n\r\n                <th>\r\n                  <Form.Control required type=\"text\" placeholder=\"Enter file name here\"\r\n                    defaultValue={this.state.text} onChange={this.onTexChange} />\r\n                </th>\r\n\r\n                <th>\r\n                  <Form.Label className=\"text-left\">\r\n                    .nii\r\n                  </Form.Label>\r\n                </th>\r\n\r\n\r\n              </tr>\r\n            </thead>\r\n            \r\n          </Table>\r\n\r\n        </Form>\r\n        <Row>\r\n          <Col lg xl=\"2\">\r\n            <Button onClick={this.onButtonSave} >\r\n              Save\r\n            </Button>\r\n          </Col>\r\n\r\n          <Col lg xl=\"2\">\r\n            <Button onClick={onHideFunc} >\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n\r\n          <Col lg xl=\"8\">\r\n          </Col>\r\n\r\n        </Row>\r\n\r\n      </Modal.Body>\r\n\r\n    </Modal>\r\n    return jsxModalSaveNifti;\r\n  } // end render\r\n\r\n} // end class\r\n\r\nexport default connect(store => store)(UiModalSaveNifti);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavDropdown } from 'react-bootstrap';\r\n\r\nimport UiModalSaveNifti from './UiModalSaveNifti';\r\n\r\nclass UiSaveMenu extends React.Component {\r\n  /**\r\n   * @param {object} props - props from up level object\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onModalSaveNiftiShow = this.onModalSaveNiftiShow.bind(this);\r\n    this.onModalSaveNiftiHide = this.onModalSaveNiftiHide.bind(this);\r\n\r\n    this.state = {\r\n      showModalSaveNifti: false,\r\n    };\r\n  }\r\n\r\n  // invoked after render\r\n  componentDidMount() {\r\n  }\r\n\r\n  onModalSaveNiftiShow() {\r\n    this.setState({ showModalSaveNifti: true });\r\n  }\r\n\r\n  onModalSaveNiftiHide() {\r\n    this.setState({ showModalSaveNifti: false });\r\n    // console.log('onModalSaveNiftiHide...');\r\n  }\r\n\r\n  //\r\n  // render\r\n  //\r\n  render() {\r\n    const store = this.props;\r\n    const isLoaded = store.isLoaded;\r\n    const strDisabled = (isLoaded) ? false : true;\r\n   \r\n    const jsxSaveMenu =\r\n      <NavDropdown id=\"save-nav-dropdown\" \r\n        disabled={strDisabled}\r\n        title={\r\n          <div style={{ display: 'inline-block' }}> \r\n            <i className=\"fas fa-save\"></i>\r\n            Save\r\n          </div>\r\n        } >\r\n        <NavDropdown.Item onClick={evt => this.onModalSaveNiftiShow(evt)}  >\r\n          <i className=\"fas fa-globe\"></i>\r\n          Save to Nifti\r\n        </NavDropdown.Item>\r\n        <UiModalSaveNifti stateVis={this.state.showModalSaveNifti} onHide={this.onModalSaveNiftiHide} />\r\n      </NavDropdown>;\r\n\r\n\r\n    return jsxSaveMenu;\r\n  }\r\n}\r\n\r\nexport default connect(store => store)(UiSaveMenu);\r\n\r\n\r\n","\r\n/**\r\n* Detect browser type (Chrome, Firefox, ...) and detect is this mobile device\r\n* @module src/demo/engine/utils/BrowserDetector\r\n*/\r\n\r\n// absolute imports\r\n// import swal from 'sweetalert';\r\n\r\nimport { createCanvas } from 'canvas';\r\n\r\n\r\n/**\r\n* Class BrowserDetector preform initial loading browser type detection\r\n* @class BrowserDetector\r\n*/\r\nclass BrowserDetector {\r\n  /**\r\n  * Start simple detection\r\n  * @constructs BrowserDetector\r\n  */\r\n  constructor() {\r\n    this.m_strUserAgent = '';\r\n    this.m_strVendor = '';\r\n    this.m_isOpera = false;\r\n    this.m_isFirefox = false;\r\n    this.m_isSafari = false;\r\n    this.m_isIE = false;\r\n    this.m_isChrome = false;\r\n    this.m_isMobileBrowser = false;\r\n  }\r\n\r\n  /**\r\n   * Check support WebGL 2.0\r\n   * \r\n   * * @return {boolean} true, if WebGL 2.0 supported\r\n   */\r\n  checkWebGlSupported() {\r\n    // let canvas = document.createElement('canvas');\r\n    let canvas = createCanvas(640, 480);\r\n    let gl = null;\r\n    try { \r\n      gl = canvas.getContext(\"webgl2\"); \r\n    } catch (x) { \r\n      gl = null; \r\n    }\r\n    const glFound = (gl !== null);\r\n    // console.log(`checkWebGlSupported. GL 2.0 = ${glFound}`);\r\n    canvas = undefined;\r\n    return glFound;\r\n  }\r\n\r\n  /**\r\n  * Check is this browser valid\r\n  * @return {boolean} true, if valid for 3d vizualization\r\n  */\r\n  checkValidBrowser() {\r\n    /** @property {string} m_strUserAgent - User agent */\r\n    this.m_strUserAgent = navigator.userAgent.toLowerCase();\r\n    /** @property {string} m_strVendor - Browser vendor, typically 'Google' */\r\n    this.m_strVendor = navigator.vendor;\r\n    /** @property {boolean} m_isOpera - Is this opera browser */\r\n    this.m_isOpera = /opr\\/|opios/i.test(this.m_strUserAgent);\r\n    /** @property {boolean} m_isFirefox - Is this firefox browser */\r\n    this.m_isFirefox = (typeof InstallTrigger !== 'undefined');\r\n    /** @property {boolean} m_isSafari - Is this safari browser */\r\n    // this.m_isSafari = /safari|applewebkit/i.test(this.m_strUserAgent);\r\n    this.m_isSafari = (this.m_strUserAgent.search('safari') >= 0) && (this.m_strUserAgent.search('chrome') < 0);\r\n    /** @property {boolean} m_isIE - IE ver 6-11 */\r\n    this.m_isIE = false || !!document.documentMode;\r\n    /** @property {boolean} m_isChrome - Chrome browser */\r\n    this.m_isChrome = /chrome/i.test(navigator.userAgent);\r\n    this.m_isEdge = (navigator.appVersion.indexOf('Edge') > -1);\r\n    if (this.m_isEdge) {\r\n      this.m_isChrome = false;\r\n    }\r\n    // console.log(`Is Edge browser = ${this.m_isEdge}`);\r\n    // console.log(`Is Chrome browser = ${this.m_isChrome}`);\r\n    // console.log(`Is Firefox browser = ${this.m_isFirefox}`);\r\n    // console.log(`Is Safari browser = ${this.m_isSafari}`);\r\n    // console.log(`Is Opera browser = ${this.m_isOpera}`);\r\n\r\n    const strTitle1 = 'Med3web is designed for Chrome/Firefox/Safari browsers.';\r\n    const strTitle2 = 'The application can be slow or unstable in this web browser.';\r\n    const strTitleFinal = `${strTitle1} ${strTitle2}`;\r\n    const isValidBrowserType = this.m_isChrome || this.m_isFirefox || this.m_isSafari || this.m_isOpera;\r\n    if (!isValidBrowserType) {\r\n      const strMsg = 'App is specially designed for Chrome/Firefox/Opera/Safari browsers';\r\n      console.log(`BrowserDetector. ${strTitleFinal}. ${strMsg}`);\r\n      /*\r\n      swal({\r\n        title: strTitleFinal,\r\n        text: strMsg,\r\n        icon: 'warning',\r\n        button: 'continue',\r\n      });\r\n      */\r\n    }\r\n    // Mobile or not\r\n    const mobileArr = ['iphone', 'ipad', 'android', 'blackberry',\r\n      'nokia', 'opera mini', 'windows mobile', 'windows phone', 'iemobile'];\r\n    this.m_isMobileBrowser = false;\r\n    for (let i = 0; i < mobileArr.length; i++) {\r\n      if (this.m_strUserAgent.indexOf(mobileArr[i].toLowerCase()) > 0) {\r\n        // console.log(`Detected mobile browser in string ${this.m_strUserAgent}`);\r\n        this.m_isMobileBrowser = true;\r\n      }\r\n    } // for\r\n    // detect mobiu browser by window size\r\n    const MIN_W = 800;\r\n    const MIN_H = 600;\r\n    if ((window.innerWidth <= MIN_W) || (window.innerHeight <= MIN_H) ) {\r\n      this.m_isMobileBrowser = true;\r\n    }\r\n    if (this.m_isMobileBrowser) {\r\n      // console.log('Mobile browser detected! App can be slow');\r\n      console.log(`MobileBrowserDetector. ${strTitleFinal}. App can be slow due to detected mobile browser`);\r\n      /*\r\n      swal({\r\n        title: strTitleFinal,\r\n        text: 'App can be slow due to detected mobile browser',\r\n        icon: 'warning',\r\n        button: 'continue',\r\n      });\r\n      */\r\n    }\r\n    if (!this.m_isMobileBrowser) {\r\n      return isValidBrowserType;\r\n    }\r\n    return true;\r\n  } // check\r\n} // class BrowserDetector\r\n\r\nexport default BrowserDetector;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Nav, Navbar, Container, ProgressBar, Row, Col } from 'react-bootstrap';\r\nimport StoreActionType from '../store/ActionTypes';\r\n\r\nimport UiMain from './UiMain';\r\nimport UiOpenMenu from './UiOpenMenu';\r\nimport UiViewMode from './UiViewMode';\r\nimport UiSaveMenu from './UiSaveMenu';\r\n\r\n\r\nimport BrowserDetector from '../engine/utils/BrowserDetector';\r\n\r\nclass UiApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.doShowProgressBar = this.doShowProgressBar.bind(this);\r\n    this.doHideProgressBar = this.doHideProgressBar.bind(this);\r\n    this.doSetProgressBarRatio = this.doSetProgressBarRatio.bind(this);\r\n\r\n    this.m_modalText = null;\r\n    this.m_store = null;\r\n    this.m_fileNameOnLoad = '';\r\n\r\n    this.state = {\r\n      showModalText: false,\r\n      showProgressBar: false,\r\n      progressBarRatio: 55,\r\n      showModalAlert: false,\r\n      strAlertTitle: '???',\r\n      strAlertText: '???',\r\n      strProgressMessage: 'Loading...',\r\n    };\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    let fileNameOnLoad = '';\r\n    const strSearch = window.location.search;\r\n    if (strSearch.length > 0) {\r\n      const strReg = /\\\\?url=(\\S+)/;\r\n      const arr = strSearch.match(strReg);\r\n      if (arr === null) {\r\n        console.log('arguments should be in form: ?url=www.xxx.yy/zz/ww');\r\n        return;\r\n      }\r\n      fileNameOnLoad = arr[1];\r\n      const regA = /^((ftp|http|https):\\/\\/)?(([\\S]+)\\.)?([\\S]+)\\.([A-z]{2,})(:\\d{1,6})?\\/[\\S]+/;\r\n      const regB = /(ftp|http|https):\\/\\/([\\d]+)\\.([\\d]+)\\.([\\d]+)\\.([\\d]+)(:([\\d]+))?\\/([\\S]+)/;\r\n      const isValidA = fileNameOnLoad.match(regA);\r\n      const isValidB = fileNameOnLoad.match(regB);\r\n      if ((isValidA === null) && (isValidB === null)) {\r\n        console.log(`Not valid URL = ${fileNameOnLoad}`);\r\n        return;\r\n      }\r\n      this.m_fileNameOnLoad = fileNameOnLoad;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const store = this.m_store;\r\n    if (store === null) {\r\n      console.log('UiApp. componentDidMount. store is NULL');\r\n    }\r\n    store.dispatch({ type: StoreActionType.SET_UI_APP, uiApp: this });\r\n\r\n    // browser detector\r\n    const browserDetector = new BrowserDetector();\r\n    this.isWebGl20supported = browserDetector.checkWebGlSupported();\r\n\r\n  }\r\n\r\n \r\n  doShowProgressBar(strProgressMsg) {\r\n    if ((strProgressMsg === undefined) || (strProgressMsg === null)) {\r\n      console.log('doShowProgressBar: need argument - strProgressMsg');\r\n      return;\r\n    }\r\n    this.setState({ strProgressMessage: strProgressMsg });\r\n    this.setState({ showProgressBar: true });\r\n  }\r\n\r\n  doHideProgressBar() {\r\n    // console.log('doHideProgressBar');\r\n    this.setState({ showProgressBar: false });\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {number} ratio - in [0..99] range\r\n   */\r\n  doSetProgressBarRatio(ratio) {\r\n    // console.log(`doSetProgressBarRatio: ${ratio}`);\r\n\r\n    // show progress bar if it was hidden but need to show some non-0, non-100 progress\r\n    if ((ratio >= 0) && (ratio <= 99)) {\r\n      if (this.state.showProgressBar === false) {\r\n        this.setState({ showProgressBar: true });\r\n      }\r\n    }\r\n    this.setState({ progressBarRatio: ratio });\r\n  }\r\n\r\n  /**\r\n   * Main component render func callback\r\n   */\r\n  render() {\r\n    const store = this.props;\r\n    this.m_store = store;\r\n    const isLoaded = store.isLoaded;\r\n    const fileName = store.fileName;\r\n\r\n    const strMessageOnMenu = (isLoaded) ? 'File: ' + fileName : 'Upload Files to Render';\r\n\r\n    const strProgressMsg = this.state.strProgressMessage;\r\n\r\n    const objPrgBarVis = \r\n      <Row>\r\n        <Col xs xl sm md lg=\"12\" style={{ width: '100%' } }>\r\n          {strProgressMsg}\r\n          <ProgressBar animated variant=\"success\"\r\n            now={this.state.progressBarRatio} label={`${this.state.progressBarRatio}%`}  />\r\n        </Col>\r\n      </Row>\r\n    const objProgressBar = (this.state.showProgressBar) ? objPrgBarVis : <p></p>;\r\n\r\n    const jsxNavBarReact = \r\n      <Container fluid=\"true\" style={{ height:'100%', minHeight:'100%' }}  >\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" >\r\n          <Navbar.Brand>\r\n            {/* <UiAbout /> */}\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n\r\n              <Navbar.Text className=\"d-none d-sm-block\">\r\n                {strMessageOnMenu}\r\n              </Navbar.Text>\r\n{/* Upload File Function */}\r\n              <UiOpenMenu fileNameOnLoad={this.m_fileNameOnLoad} /> \r\n\r\n              <UiSaveMenu />\r\n             <UiViewMode />\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n\r\n        </Navbar>\r\n        {objProgressBar}\r\n        {(isLoaded) ? <UiMain /> : <p></p>}\r\n      </Container>;\r\n\r\n    return jsxNavBarReact;\r\n  }\r\n}\r\n\r\nexport default connect(store => store)(UiApp);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport UiApp from './ui/UiApp';\r\n\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return <UiApp />\r\n  }\r\n}\r\n\r\nexport default connect(store => store)(App);\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './demo/store/Store';\r\nimport App from './demo/App';\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(<Provider store={store}>\r\n  <App />\r\n</Provider>,\r\nrootElement);\r\n\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}